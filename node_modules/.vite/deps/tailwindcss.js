import {
  __privateAdd,
  __privateMethod,
  __publicField
} from "./chunk-Q4XP6UTR.js";

// node_modules/tailwindcss/dist/chunk-AZANAYY2.mjs
var l = { inherit: "inherit", current: "currentColor", transparent: "transparent", black: "#000", white: "#fff", slate: { 50: "oklch(0.984 0.003 247.858)", 100: "oklch(0.968 0.007 247.896)", 200: "oklch(0.929 0.013 255.508)", 300: "oklch(0.869 0.022 252.894)", 400: "oklch(0.704 0.04 256.788)", 500: "oklch(0.554 0.046 257.417)", 600: "oklch(0.446 0.043 257.281)", 700: "oklch(0.372 0.044 257.287)", 800: "oklch(0.279 0.041 260.031)", 900: "oklch(0.208 0.042 265.755)", 950: "oklch(0.129 0.042 264.695)" }, gray: { 50: "oklch(0.985 0.002 247.839)", 100: "oklch(0.967 0.003 264.542)", 200: "oklch(0.928 0.006 264.531)", 300: "oklch(0.872 0.01 258.338)", 400: "oklch(0.707 0.022 261.325)", 500: "oklch(0.551 0.027 264.364)", 600: "oklch(0.446 0.03 256.802)", 700: "oklch(0.373 0.034 259.733)", 800: "oklch(0.278 0.033 256.848)", 900: "oklch(0.21 0.034 264.665)", 950: "oklch(0.13 0.028 261.692)" }, zinc: { 50: "oklch(0.985 0 0)", 100: "oklch(0.967 0.001 286.375)", 200: "oklch(0.92 0.004 286.32)", 300: "oklch(0.871 0.006 286.286)", 400: "oklch(0.705 0.015 286.067)", 500: "oklch(0.552 0.016 285.938)", 600: "oklch(0.442 0.017 285.786)", 700: "oklch(0.37 0.013 285.805)", 800: "oklch(0.274 0.006 286.033)", 900: "oklch(0.21 0.006 285.885)", 950: "oklch(0.141 0.005 285.823)" }, neutral: { 50: "oklch(0.985 0 0)", 100: "oklch(0.97 0 0)", 200: "oklch(0.922 0 0)", 300: "oklch(0.87 0 0)", 400: "oklch(0.708 0 0)", 500: "oklch(0.556 0 0)", 600: "oklch(0.439 0 0)", 700: "oklch(0.371 0 0)", 800: "oklch(0.269 0 0)", 900: "oklch(0.205 0 0)", 950: "oklch(0.145 0 0)" }, stone: { 50: "oklch(0.985 0.001 106.423)", 100: "oklch(0.97 0.001 106.424)", 200: "oklch(0.923 0.003 48.717)", 300: "oklch(0.869 0.005 56.366)", 400: "oklch(0.709 0.01 56.259)", 500: "oklch(0.553 0.013 58.071)", 600: "oklch(0.444 0.011 73.639)", 700: "oklch(0.374 0.01 67.558)", 800: "oklch(0.268 0.007 34.298)", 900: "oklch(0.216 0.006 56.043)", 950: "oklch(0.147 0.004 49.25)" }, red: { 50: "oklch(0.971 0.013 17.38)", 100: "oklch(0.936 0.032 17.717)", 200: "oklch(0.885 0.062 18.334)", 300: "oklch(0.808 0.114 19.571)", 400: "oklch(0.704 0.191 22.216)", 500: "oklch(0.637 0.237 25.331)", 600: "oklch(0.577 0.245 27.325)", 700: "oklch(0.505 0.213 27.518)", 800: "oklch(0.444 0.177 26.899)", 900: "oklch(0.396 0.141 25.723)", 950: "oklch(0.258 0.092 26.042)" }, orange: { 50: "oklch(0.98 0.016 73.684)", 100: "oklch(0.954 0.038 75.164)", 200: "oklch(0.901 0.076 70.697)", 300: "oklch(0.837 0.128 66.29)", 400: "oklch(0.75 0.183 55.934)", 500: "oklch(0.705 0.213 47.604)", 600: "oklch(0.646 0.222 41.116)", 700: "oklch(0.553 0.195 38.402)", 800: "oklch(0.47 0.157 37.304)", 900: "oklch(0.408 0.123 38.172)", 950: "oklch(0.266 0.079 36.259)" }, amber: { 50: "oklch(0.987 0.022 95.277)", 100: "oklch(0.962 0.059 95.617)", 200: "oklch(0.924 0.12 95.746)", 300: "oklch(0.879 0.169 91.605)", 400: "oklch(0.828 0.189 84.429)", 500: "oklch(0.769 0.188 70.08)", 600: "oklch(0.666 0.179 58.318)", 700: "oklch(0.555 0.163 48.998)", 800: "oklch(0.473 0.137 46.201)", 900: "oklch(0.414 0.112 45.904)", 950: "oklch(0.279 0.077 45.635)" }, yellow: { 50: "oklch(0.987 0.026 102.212)", 100: "oklch(0.973 0.071 103.193)", 200: "oklch(0.945 0.129 101.54)", 300: "oklch(0.905 0.182 98.111)", 400: "oklch(0.852 0.199 91.936)", 500: "oklch(0.795 0.184 86.047)", 600: "oklch(0.681 0.162 75.834)", 700: "oklch(0.554 0.135 66.442)", 800: "oklch(0.476 0.114 61.907)", 900: "oklch(0.421 0.095 57.708)", 950: "oklch(0.286 0.066 53.813)" }, lime: { 50: "oklch(0.986 0.031 120.757)", 100: "oklch(0.967 0.067 122.328)", 200: "oklch(0.938 0.127 124.321)", 300: "oklch(0.897 0.196 126.665)", 400: "oklch(0.841 0.238 128.85)", 500: "oklch(0.768 0.233 130.85)", 600: "oklch(0.648 0.2 131.684)", 700: "oklch(0.532 0.157 131.589)", 800: "oklch(0.453 0.124 130.933)", 900: "oklch(0.405 0.101 131.063)", 950: "oklch(0.274 0.072 132.109)" }, green: { 50: "oklch(0.982 0.018 155.826)", 100: "oklch(0.962 0.044 156.743)", 200: "oklch(0.925 0.084 155.995)", 300: "oklch(0.871 0.15 154.449)", 400: "oklch(0.792 0.209 151.711)", 500: "oklch(0.723 0.219 149.579)", 600: "oklch(0.627 0.194 149.214)", 700: "oklch(0.527 0.154 150.069)", 800: "oklch(0.448 0.119 151.328)", 900: "oklch(0.393 0.095 152.535)", 950: "oklch(0.266 0.065 152.934)" }, emerald: { 50: "oklch(0.979 0.021 166.113)", 100: "oklch(0.95 0.052 163.051)", 200: "oklch(0.905 0.093 164.15)", 300: "oklch(0.845 0.143 164.978)", 400: "oklch(0.765 0.177 163.223)", 500: "oklch(0.696 0.17 162.48)", 600: "oklch(0.596 0.145 163.225)", 700: "oklch(0.508 0.118 165.612)", 800: "oklch(0.432 0.095 166.913)", 900: "oklch(0.378 0.077 168.94)", 950: "oklch(0.262 0.051 172.552)" }, teal: { 50: "oklch(0.984 0.014 180.72)", 100: "oklch(0.953 0.051 180.801)", 200: "oklch(0.91 0.096 180.426)", 300: "oklch(0.855 0.138 181.071)", 400: "oklch(0.777 0.152 181.912)", 500: "oklch(0.704 0.14 182.503)", 600: "oklch(0.6 0.118 184.704)", 700: "oklch(0.511 0.096 186.391)", 800: "oklch(0.437 0.078 188.216)", 900: "oklch(0.386 0.063 188.416)", 950: "oklch(0.277 0.046 192.524)" }, cyan: { 50: "oklch(0.984 0.019 200.873)", 100: "oklch(0.956 0.045 203.388)", 200: "oklch(0.917 0.08 205.041)", 300: "oklch(0.865 0.127 207.078)", 400: "oklch(0.789 0.154 211.53)", 500: "oklch(0.715 0.143 215.221)", 600: "oklch(0.609 0.126 221.723)", 700: "oklch(0.52 0.105 223.128)", 800: "oklch(0.45 0.085 224.283)", 900: "oklch(0.398 0.07 227.392)", 950: "oklch(0.302 0.056 229.695)" }, sky: { 50: "oklch(0.977 0.013 236.62)", 100: "oklch(0.951 0.026 236.824)", 200: "oklch(0.901 0.058 230.902)", 300: "oklch(0.828 0.111 230.318)", 400: "oklch(0.746 0.16 232.661)", 500: "oklch(0.685 0.169 237.323)", 600: "oklch(0.588 0.158 241.966)", 700: "oklch(0.5 0.134 242.749)", 800: "oklch(0.443 0.11 240.79)", 900: "oklch(0.391 0.09 240.876)", 950: "oklch(0.293 0.066 243.157)" }, blue: { 50: "oklch(0.97 0.014 254.604)", 100: "oklch(0.932 0.032 255.585)", 200: "oklch(0.882 0.059 254.128)", 300: "oklch(0.809 0.105 251.813)", 400: "oklch(0.707 0.165 254.624)", 500: "oklch(0.623 0.214 259.815)", 600: "oklch(0.546 0.245 262.881)", 700: "oklch(0.488 0.243 264.376)", 800: "oklch(0.424 0.199 265.638)", 900: "oklch(0.379 0.146 265.522)", 950: "oklch(0.282 0.091 267.935)" }, indigo: { 50: "oklch(0.962 0.018 272.314)", 100: "oklch(0.93 0.034 272.788)", 200: "oklch(0.87 0.065 274.039)", 300: "oklch(0.785 0.115 274.713)", 400: "oklch(0.673 0.182 276.935)", 500: "oklch(0.585 0.233 277.117)", 600: "oklch(0.511 0.262 276.966)", 700: "oklch(0.457 0.24 277.023)", 800: "oklch(0.398 0.195 277.366)", 900: "oklch(0.359 0.144 278.697)", 950: "oklch(0.257 0.09 281.288)" }, violet: { 50: "oklch(0.969 0.016 293.756)", 100: "oklch(0.943 0.029 294.588)", 200: "oklch(0.894 0.057 293.283)", 300: "oklch(0.811 0.111 293.571)", 400: "oklch(0.702 0.183 293.541)", 500: "oklch(0.606 0.25 292.717)", 600: "oklch(0.541 0.281 293.009)", 700: "oklch(0.491 0.27 292.581)", 800: "oklch(0.432 0.232 292.759)", 900: "oklch(0.38 0.189 293.745)", 950: "oklch(0.283 0.141 291.089)" }, purple: { 50: "oklch(0.977 0.014 308.299)", 100: "oklch(0.946 0.033 307.174)", 200: "oklch(0.902 0.063 306.703)", 300: "oklch(0.827 0.119 306.383)", 400: "oklch(0.714 0.203 305.504)", 500: "oklch(0.627 0.265 303.9)", 600: "oklch(0.558 0.288 302.321)", 700: "oklch(0.496 0.265 301.924)", 800: "oklch(0.438 0.218 303.724)", 900: "oklch(0.381 0.176 304.987)", 950: "oklch(0.291 0.149 302.717)" }, fuchsia: { 50: "oklch(0.977 0.017 320.058)", 100: "oklch(0.952 0.037 318.852)", 200: "oklch(0.903 0.076 319.62)", 300: "oklch(0.833 0.145 321.434)", 400: "oklch(0.74 0.238 322.16)", 500: "oklch(0.667 0.295 322.15)", 600: "oklch(0.591 0.293 322.896)", 700: "oklch(0.518 0.253 323.949)", 800: "oklch(0.452 0.211 324.591)", 900: "oklch(0.401 0.17 325.612)", 950: "oklch(0.293 0.136 325.661)" }, pink: { 50: "oklch(0.971 0.014 343.198)", 100: "oklch(0.948 0.028 342.258)", 200: "oklch(0.899 0.061 343.231)", 300: "oklch(0.823 0.12 346.018)", 400: "oklch(0.718 0.202 349.761)", 500: "oklch(0.656 0.241 354.308)", 600: "oklch(0.592 0.249 0.584)", 700: "oklch(0.525 0.223 3.958)", 800: "oklch(0.459 0.187 3.815)", 900: "oklch(0.408 0.153 2.432)", 950: "oklch(0.284 0.109 3.907)" }, rose: { 50: "oklch(0.969 0.015 12.422)", 100: "oklch(0.941 0.03 12.58)", 200: "oklch(0.892 0.058 10.001)", 300: "oklch(0.81 0.117 11.638)", 400: "oklch(0.712 0.194 13.428)", 500: "oklch(0.645 0.246 16.439)", 600: "oklch(0.586 0.253 17.585)", 700: "oklch(0.514 0.222 16.935)", 800: "oklch(0.455 0.188 13.697)", 900: "oklch(0.41 0.159 10.272)", 950: "oklch(0.271 0.105 12.094)" } };

// node_modules/tailwindcss/dist/chunk-3FWCBO63.mjs
var U = /* @__PURE__ */ new Set(["black", "silver", "gray", "white", "maroon", "red", "purple", "fuchsia", "green", "lime", "olive", "yellow", "navy", "blue", "teal", "aqua", "aliceblue", "antiquewhite", "aqua", "aquamarine", "azure", "beige", "bisque", "black", "blanchedalmond", "blue", "blueviolet", "brown", "burlywood", "cadetblue", "chartreuse", "chocolate", "coral", "cornflowerblue", "cornsilk", "crimson", "cyan", "darkblue", "darkcyan", "darkgoldenrod", "darkgray", "darkgreen", "darkgrey", "darkkhaki", "darkmagenta", "darkolivegreen", "darkorange", "darkorchid", "darkred", "darksalmon", "darkseagreen", "darkslateblue", "darkslategray", "darkslategrey", "darkturquoise", "darkviolet", "deeppink", "deepskyblue", "dimgray", "dimgrey", "dodgerblue", "firebrick", "floralwhite", "forestgreen", "fuchsia", "gainsboro", "ghostwhite", "gold", "goldenrod", "gray", "green", "greenyellow", "grey", "honeydew", "hotpink", "indianred", "indigo", "ivory", "khaki", "lavender", "lavenderblush", "lawngreen", "lemonchiffon", "lightblue", "lightcoral", "lightcyan", "lightgoldenrodyellow", "lightgray", "lightgreen", "lightgrey", "lightpink", "lightsalmon", "lightseagreen", "lightskyblue", "lightslategray", "lightslategrey", "lightsteelblue", "lightyellow", "lime", "limegreen", "linen", "magenta", "maroon", "mediumaquamarine", "mediumblue", "mediumorchid", "mediumpurple", "mediumseagreen", "mediumslateblue", "mediumspringgreen", "mediumturquoise", "mediumvioletred", "midnightblue", "mintcream", "mistyrose", "moccasin", "navajowhite", "navy", "oldlace", "olive", "olivedrab", "orange", "orangered", "orchid", "palegoldenrod", "palegreen", "paleturquoise", "palevioletred", "papayawhip", "peachpuff", "peru", "pink", "plum", "powderblue", "purple", "rebeccapurple", "red", "rosybrown", "royalblue", "saddlebrown", "salmon", "sandybrown", "seagreen", "seashell", "sienna", "silver", "skyblue", "slateblue", "slategray", "slategrey", "snow", "springgreen", "steelblue", "tan", "teal", "thistle", "tomato", "turquoise", "violet", "wheat", "white", "whitesmoke", "yellow", "yellowgreen", "transparent", "currentcolor", "canvas", "canvastext", "linktext", "visitedtext", "activetext", "buttonface", "buttontext", "buttonborder", "field", "fieldtext", "highlight", "highlighttext", "selecteditem", "selecteditemtext", "mark", "marktext", "graytext", "accentcolor", "accentcolortext"]);
var O = /^(rgba?|hsla?|hwb|color|(ok)?(lab|lch)|light-dark|color-mix)\(/i;
function S(e) {
  return e.charCodeAt(0) === 35 || O.test(e) || U.has(e.toLowerCase());
}
var k = ["calc", "min", "max", "clamp", "mod", "rem", "sin", "cos", "tan", "asin", "acos", "atan", "atan2", "pow", "sqrt", "hypot", "log", "exp", "round"];
var b = ["anchor-size"];
var A = new RegExp(`(${b.join("|")})\\(`, "g");
function h(e) {
  return e.indexOf("(") !== -1 && k.some((r) => e.includes(`${r}(`));
}
function ie(e) {
  if (!k.some((n) => e.includes(n))) return e;
  let r = false;
  b.some((n) => e.includes(n)) && (A.lastIndex = 0, e = e.replace(A, (n, o) => (r = true, `$${b.indexOf(o)}$(`)));
  let t = "", i = [];
  for (let n = 0; n < e.length; n++) {
    let o = e[n];
    if (o === "(") {
      t += o;
      let m = n;
      for (let c2 = n - 1; c2 >= 0; c2--) {
        let x = e.charCodeAt(c2);
        if (x >= 48 && x <= 57) m = c2;
        else if (x >= 97 && x <= 122) m = c2;
        else break;
      }
      let a = e.slice(m, n);
      if (k.includes(a)) {
        i.unshift(true);
        continue;
      } else if (i[0] && a === "") {
        i.unshift(true);
        continue;
      }
      i.unshift(false);
      continue;
    } else if (o === ")") t += o, i.shift();
    else if (o === "," && i[0]) {
      t += ", ";
      continue;
    } else {
      if (o === " " && i[0] && t[t.length - 1] === " ") continue;
      if ((o === "+" || o === "*" || o === "/" || o === "-") && i[0]) {
        let m = t.trimEnd(), a = m[m.length - 1];
        if (a === "+" || a === "*" || a === "/" || a === "-") {
          t += o;
          continue;
        } else if (a === "(" || a === ",") {
          t += o;
          continue;
        } else e[n - 1] === " " ? t += `${o} ` : t += ` ${o} `;
      } else if (i[0] && e.startsWith("to-zero", n)) {
        let m = n;
        n += 7, t += e.slice(m, n + 1);
      } else t += o;
    }
  }
  return r ? t.replace(/\$(\d+)\$/g, (n, o) => b[o] ?? n) : t;
}
var y = new Uint8Array(256);
function u(e, r) {
  let t = 0, i = [], n = 0, o = e.length, m = r.charCodeAt(0);
  for (let a = 0; a < o; a++) {
    let c2 = e.charCodeAt(a);
    if (t === 0 && c2 === m) {
      i.push(e.slice(n, a)), n = a + 1;
      continue;
    }
    switch (c2) {
      case 92:
        a += 1;
        break;
      case 39:
      case 34:
        for (; ++a < o; ) {
          let x = e.charCodeAt(a);
          if (x === 92) {
            a += 1;
            continue;
          }
          if (x === c2) break;
        }
        break;
      case 40:
        y[t] = 41, t++;
        break;
      case 91:
        y[t] = 93, t++;
        break;
      case 123:
        y[t] = 125, t++;
        break;
      case 93:
      case 125:
      case 41:
        t > 0 && c2 === y[t - 1] && t--;
        break;
    }
  }
  return i.push(e.slice(n)), i;
}
var R = { color: S, length: C, percentage: E, ratio: j, number: M, integer: p, url: z, position: Q, "bg-size": X, "line-width": D, image: $, "family-name": P, "generic-name": H, "absolute-size": q, "relative-size": B, angle: ee, vector: re };
function pe(e, r) {
  var _a2;
  if (e.startsWith("var(")) return null;
  for (let t of r) if ((_a2 = R[t]) == null ? void 0 : _a2.call(R, e)) return t;
  return null;
}
var _ = /^url\(.*\)$/;
function z(e) {
  return _.test(e);
}
function D(e) {
  return e === "thin" || e === "medium" || e === "thick";
}
var F = /^(?:element|image|cross-fade|image-set)\(/;
var I = /^(repeating-)?(conic|linear|radial)-gradient\(/;
function $(e) {
  let r = 0;
  for (let t of u(e, ",")) if (!t.startsWith("var(")) {
    if (z(t)) {
      r += 1;
      continue;
    }
    if (I.test(t)) {
      r += 1;
      continue;
    }
    if (F.test(t)) {
      r += 1;
      continue;
    }
    return false;
  }
  return r > 0;
}
function H(e) {
  return e === "serif" || e === "sans-serif" || e === "monospace" || e === "cursive" || e === "fantasy" || e === "system-ui" || e === "ui-serif" || e === "ui-sans-serif" || e === "ui-monospace" || e === "ui-rounded" || e === "math" || e === "emoji" || e === "fangsong";
}
function P(e) {
  let r = 0;
  for (let t of u(e, ",")) {
    let i = t.charCodeAt(0);
    if (i >= 48 && i <= 57) return false;
    t.startsWith("var(") || (r += 1);
  }
  return r > 0;
}
function q(e) {
  return e === "xx-small" || e === "x-small" || e === "small" || e === "medium" || e === "large" || e === "x-large" || e === "xx-large" || e === "xxx-large";
}
function B(e) {
  return e === "larger" || e === "smaller";
}
var g = /[+-]?\d*\.?\d+(?:[eE][+-]?\d+)?/;
var W = new RegExp(`^${g.source}$`);
function M(e) {
  return W.test(e) || h(e);
}
var G = new RegExp(`^${g.source}%$`);
function E(e) {
  return G.test(e) || h(e);
}
var V = new RegExp(`^${g.source}s*/s*${g.source}$`);
function j(e) {
  return V.test(e) || h(e);
}
var K = ["cm", "mm", "Q", "in", "pc", "pt", "px", "em", "ex", "ch", "rem", "lh", "rlh", "vw", "vh", "vmin", "vmax", "vb", "vi", "svw", "svh", "lvw", "lvh", "dvw", "dvh", "cqw", "cqh", "cqi", "cqb", "cqmin", "cqmax"];
var Y = new RegExp(`^${g.source}(${K.join("|")})$`);
function C(e) {
  return Y.test(e) || h(e);
}
function Q(e) {
  let r = 0;
  for (let t of u(e, " ")) {
    if (t === "center" || t === "top" || t === "right" || t === "bottom" || t === "left") {
      r += 1;
      continue;
    }
    if (!t.startsWith("var(")) {
      if (C(t) || E(t)) {
        r += 1;
        continue;
      }
      return false;
    }
  }
  return r > 0;
}
function X(e) {
  let r = 0;
  for (let t of u(e, ",")) {
    if (t === "cover" || t === "contain") {
      r += 1;
      continue;
    }
    let i = u(t, " ");
    if (i.length !== 1 && i.length !== 2) return false;
    if (i.every((n) => n === "auto" || C(n) || E(n))) {
      r += 1;
      continue;
    }
  }
  return r > 0;
}
var J = ["deg", "rad", "grad", "turn"];
var Z = new RegExp(`^${g.source}(${J.join("|")})$`);
function ee(e) {
  return Z.test(e);
}
var te = new RegExp(`^${g.source} +${g.source} +${g.source}$`);
function re(e) {
  return te.test(e);
}
function p(e) {
  let r = Number(e);
  return Number.isInteger(r) && r >= 0 && String(r) === String(e);
}
function ge(e) {
  return N(e, 0.25);
}
function ue(e) {
  return N(e, 0.25);
}
function N(e, r) {
  let t = Number(e);
  return t >= 0 && t % r === 0 && String(t) === String(e);
}
function f(e) {
  return { __BARE_VALUE__: e };
}
var l2 = f((e) => {
  if (p(e.value)) return e.value;
});
var s = f((e) => {
  if (p(e.value)) return `${e.value}%`;
});
var d = f((e) => {
  if (p(e.value)) return `${e.value}px`;
});
var T = f((e) => {
  if (p(e.value)) return `${e.value}ms`;
});
var w = f((e) => {
  if (p(e.value)) return `${e.value}deg`;
});
var ne = f((e) => {
  if (e.fraction === null) return;
  let [r, t] = u(e.fraction, "/");
  if (!(!p(r) || !p(t))) return e.fraction;
});
var L = f((e) => {
  if (p(Number(e.value))) return `repeat(${e.value}, minmax(0, 1fr))`;
});
var be = { accentColor: ({ theme: e }) => e("colors"), animation: { none: "none", spin: "spin 1s linear infinite", ping: "ping 1s cubic-bezier(0, 0, 0.2, 1) infinite", pulse: "pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite", bounce: "bounce 1s infinite" }, aria: { busy: 'busy="true"', checked: 'checked="true"', disabled: 'disabled="true"', expanded: 'expanded="true"', hidden: 'hidden="true"', pressed: 'pressed="true"', readonly: 'readonly="true"', required: 'required="true"', selected: 'selected="true"' }, aspectRatio: { auto: "auto", square: "1 / 1", video: "16 / 9", ...ne }, backdropBlur: ({ theme: e }) => e("blur"), backdropBrightness: ({ theme: e }) => ({ ...e("brightness"), ...s }), backdropContrast: ({ theme: e }) => ({ ...e("contrast"), ...s }), backdropGrayscale: ({ theme: e }) => ({ ...e("grayscale"), ...s }), backdropHueRotate: ({ theme: e }) => ({ ...e("hueRotate"), ...w }), backdropInvert: ({ theme: e }) => ({ ...e("invert"), ...s }), backdropOpacity: ({ theme: e }) => ({ ...e("opacity"), ...s }), backdropSaturate: ({ theme: e }) => ({ ...e("saturate"), ...s }), backdropSepia: ({ theme: e }) => ({ ...e("sepia"), ...s }), backgroundColor: ({ theme: e }) => e("colors"), backgroundImage: { none: "none", "gradient-to-t": "linear-gradient(to top, var(--tw-gradient-stops))", "gradient-to-tr": "linear-gradient(to top right, var(--tw-gradient-stops))", "gradient-to-r": "linear-gradient(to right, var(--tw-gradient-stops))", "gradient-to-br": "linear-gradient(to bottom right, var(--tw-gradient-stops))", "gradient-to-b": "linear-gradient(to bottom, var(--tw-gradient-stops))", "gradient-to-bl": "linear-gradient(to bottom left, var(--tw-gradient-stops))", "gradient-to-l": "linear-gradient(to left, var(--tw-gradient-stops))", "gradient-to-tl": "linear-gradient(to top left, var(--tw-gradient-stops))" }, backgroundOpacity: ({ theme: e }) => e("opacity"), backgroundPosition: { bottom: "bottom", center: "center", left: "left", "left-bottom": "left bottom", "left-top": "left top", right: "right", "right-bottom": "right bottom", "right-top": "right top", top: "top" }, backgroundSize: { auto: "auto", cover: "cover", contain: "contain" }, blur: { 0: "0", none: "", sm: "4px", DEFAULT: "8px", md: "12px", lg: "16px", xl: "24px", "2xl": "40px", "3xl": "64px" }, borderColor: ({ theme: e }) => ({ DEFAULT: "currentColor", ...e("colors") }), borderOpacity: ({ theme: e }) => e("opacity"), borderRadius: { none: "0px", sm: "0.125rem", DEFAULT: "0.25rem", md: "0.375rem", lg: "0.5rem", xl: "0.75rem", "2xl": "1rem", "3xl": "1.5rem", full: "9999px" }, borderSpacing: ({ theme: e }) => e("spacing"), borderWidth: { DEFAULT: "1px", 0: "0px", 2: "2px", 4: "4px", 8: "8px", ...d }, boxShadow: { sm: "0 1px 2px 0 rgb(0 0 0 / 0.05)", DEFAULT: "0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)", md: "0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)", lg: "0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)", xl: "0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)", "2xl": "0 25px 50px -12px rgb(0 0 0 / 0.25)", inner: "inset 0 2px 4px 0 rgb(0 0 0 / 0.05)", none: "none" }, boxShadowColor: ({ theme: e }) => e("colors"), brightness: { 0: "0", 50: ".5", 75: ".75", 90: ".9", 95: ".95", 100: "1", 105: "1.05", 110: "1.1", 125: "1.25", 150: "1.5", 200: "2", ...s }, caretColor: ({ theme: e }) => e("colors"), colors: () => ({ ...l }), columns: { auto: "auto", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12", "3xs": "16rem", "2xs": "18rem", xs: "20rem", sm: "24rem", md: "28rem", lg: "32rem", xl: "36rem", "2xl": "42rem", "3xl": "48rem", "4xl": "56rem", "5xl": "64rem", "6xl": "72rem", "7xl": "80rem", ...l2 }, container: {}, content: { none: "none" }, contrast: { 0: "0", 50: ".5", 75: ".75", 100: "1", 125: "1.25", 150: "1.5", 200: "2", ...s }, cursor: { auto: "auto", default: "default", pointer: "pointer", wait: "wait", text: "text", move: "move", help: "help", "not-allowed": "not-allowed", none: "none", "context-menu": "context-menu", progress: "progress", cell: "cell", crosshair: "crosshair", "vertical-text": "vertical-text", alias: "alias", copy: "copy", "no-drop": "no-drop", grab: "grab", grabbing: "grabbing", "all-scroll": "all-scroll", "col-resize": "col-resize", "row-resize": "row-resize", "n-resize": "n-resize", "e-resize": "e-resize", "s-resize": "s-resize", "w-resize": "w-resize", "ne-resize": "ne-resize", "nw-resize": "nw-resize", "se-resize": "se-resize", "sw-resize": "sw-resize", "ew-resize": "ew-resize", "ns-resize": "ns-resize", "nesw-resize": "nesw-resize", "nwse-resize": "nwse-resize", "zoom-in": "zoom-in", "zoom-out": "zoom-out" }, divideColor: ({ theme: e }) => e("borderColor"), divideOpacity: ({ theme: e }) => e("borderOpacity"), divideWidth: ({ theme: e }) => ({ ...e("borderWidth"), ...d }), dropShadow: { sm: "0 1px 1px rgb(0 0 0 / 0.05)", DEFAULT: ["0 1px 2px rgb(0 0 0 / 0.1)", "0 1px 1px rgb(0 0 0 / 0.06)"], md: ["0 4px 3px rgb(0 0 0 / 0.07)", "0 2px 2px rgb(0 0 0 / 0.06)"], lg: ["0 10px 8px rgb(0 0 0 / 0.04)", "0 4px 3px rgb(0 0 0 / 0.1)"], xl: ["0 20px 13px rgb(0 0 0 / 0.03)", "0 8px 5px rgb(0 0 0 / 0.08)"], "2xl": "0 25px 25px rgb(0 0 0 / 0.15)", none: "0 0 #0000" }, fill: ({ theme: e }) => e("colors"), flex: { 1: "1 1 0%", auto: "1 1 auto", initial: "0 1 auto", none: "none" }, flexBasis: ({ theme: e }) => ({ auto: "auto", "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", "1/5": "20%", "2/5": "40%", "3/5": "60%", "4/5": "80%", "1/6": "16.666667%", "2/6": "33.333333%", "3/6": "50%", "4/6": "66.666667%", "5/6": "83.333333%", "1/12": "8.333333%", "2/12": "16.666667%", "3/12": "25%", "4/12": "33.333333%", "5/12": "41.666667%", "6/12": "50%", "7/12": "58.333333%", "8/12": "66.666667%", "9/12": "75%", "10/12": "83.333333%", "11/12": "91.666667%", full: "100%", ...e("spacing") }), flexGrow: { 0: "0", DEFAULT: "1", ...l2 }, flexShrink: { 0: "0", DEFAULT: "1", ...l2 }, fontFamily: { sans: ["ui-sans-serif", "system-ui", "sans-serif", '"Apple Color Emoji"', '"Segoe UI Emoji"', '"Segoe UI Symbol"', '"Noto Color Emoji"'], serif: ["ui-serif", "Georgia", "Cambria", '"Times New Roman"', "Times", "serif"], mono: ["ui-monospace", "SFMono-Regular", "Menlo", "Monaco", "Consolas", '"Liberation Mono"', '"Courier New"', "monospace"] }, fontSize: { xs: ["0.75rem", { lineHeight: "1rem" }], sm: ["0.875rem", { lineHeight: "1.25rem" }], base: ["1rem", { lineHeight: "1.5rem" }], lg: ["1.125rem", { lineHeight: "1.75rem" }], xl: ["1.25rem", { lineHeight: "1.75rem" }], "2xl": ["1.5rem", { lineHeight: "2rem" }], "3xl": ["1.875rem", { lineHeight: "2.25rem" }], "4xl": ["2.25rem", { lineHeight: "2.5rem" }], "5xl": ["3rem", { lineHeight: "1" }], "6xl": ["3.75rem", { lineHeight: "1" }], "7xl": ["4.5rem", { lineHeight: "1" }], "8xl": ["6rem", { lineHeight: "1" }], "9xl": ["8rem", { lineHeight: "1" }] }, fontWeight: { thin: "100", extralight: "200", light: "300", normal: "400", medium: "500", semibold: "600", bold: "700", extrabold: "800", black: "900" }, gap: ({ theme: e }) => e("spacing"), gradientColorStops: ({ theme: e }) => e("colors"), gradientColorStopPositions: { "0%": "0%", "5%": "5%", "10%": "10%", "15%": "15%", "20%": "20%", "25%": "25%", "30%": "30%", "35%": "35%", "40%": "40%", "45%": "45%", "50%": "50%", "55%": "55%", "60%": "60%", "65%": "65%", "70%": "70%", "75%": "75%", "80%": "80%", "85%": "85%", "90%": "90%", "95%": "95%", "100%": "100%", ...s }, grayscale: { 0: "0", DEFAULT: "100%", ...s }, gridAutoColumns: { auto: "auto", min: "min-content", max: "max-content", fr: "minmax(0, 1fr)" }, gridAutoRows: { auto: "auto", min: "min-content", max: "max-content", fr: "minmax(0, 1fr)" }, gridColumn: { auto: "auto", "span-1": "span 1 / span 1", "span-2": "span 2 / span 2", "span-3": "span 3 / span 3", "span-4": "span 4 / span 4", "span-5": "span 5 / span 5", "span-6": "span 6 / span 6", "span-7": "span 7 / span 7", "span-8": "span 8 / span 8", "span-9": "span 9 / span 9", "span-10": "span 10 / span 10", "span-11": "span 11 / span 11", "span-12": "span 12 / span 12", "span-full": "1 / -1" }, gridColumnEnd: { auto: "auto", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12", 13: "13", ...l2 }, gridColumnStart: { auto: "auto", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12", 13: "13", ...l2 }, gridRow: { auto: "auto", "span-1": "span 1 / span 1", "span-2": "span 2 / span 2", "span-3": "span 3 / span 3", "span-4": "span 4 / span 4", "span-5": "span 5 / span 5", "span-6": "span 6 / span 6", "span-7": "span 7 / span 7", "span-8": "span 8 / span 8", "span-9": "span 9 / span 9", "span-10": "span 10 / span 10", "span-11": "span 11 / span 11", "span-12": "span 12 / span 12", "span-full": "1 / -1" }, gridRowEnd: { auto: "auto", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12", 13: "13", ...l2 }, gridRowStart: { auto: "auto", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12", 13: "13", ...l2 }, gridTemplateColumns: { none: "none", subgrid: "subgrid", 1: "repeat(1, minmax(0, 1fr))", 2: "repeat(2, minmax(0, 1fr))", 3: "repeat(3, minmax(0, 1fr))", 4: "repeat(4, minmax(0, 1fr))", 5: "repeat(5, minmax(0, 1fr))", 6: "repeat(6, minmax(0, 1fr))", 7: "repeat(7, minmax(0, 1fr))", 8: "repeat(8, minmax(0, 1fr))", 9: "repeat(9, minmax(0, 1fr))", 10: "repeat(10, minmax(0, 1fr))", 11: "repeat(11, minmax(0, 1fr))", 12: "repeat(12, minmax(0, 1fr))", ...L }, gridTemplateRows: { none: "none", subgrid: "subgrid", 1: "repeat(1, minmax(0, 1fr))", 2: "repeat(2, minmax(0, 1fr))", 3: "repeat(3, minmax(0, 1fr))", 4: "repeat(4, minmax(0, 1fr))", 5: "repeat(5, minmax(0, 1fr))", 6: "repeat(6, minmax(0, 1fr))", 7: "repeat(7, minmax(0, 1fr))", 8: "repeat(8, minmax(0, 1fr))", 9: "repeat(9, minmax(0, 1fr))", 10: "repeat(10, minmax(0, 1fr))", 11: "repeat(11, minmax(0, 1fr))", 12: "repeat(12, minmax(0, 1fr))", ...L }, height: ({ theme: e }) => ({ auto: "auto", "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", "1/5": "20%", "2/5": "40%", "3/5": "60%", "4/5": "80%", "1/6": "16.666667%", "2/6": "33.333333%", "3/6": "50%", "4/6": "66.666667%", "5/6": "83.333333%", full: "100%", screen: "100vh", svh: "100svh", lvh: "100lvh", dvh: "100dvh", min: "min-content", max: "max-content", fit: "fit-content", ...e("spacing") }), hueRotate: { 0: "0deg", 15: "15deg", 30: "30deg", 60: "60deg", 90: "90deg", 180: "180deg", ...w }, inset: ({ theme: e }) => ({ auto: "auto", "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", full: "100%", ...e("spacing") }), invert: { 0: "0", DEFAULT: "100%", ...s }, keyframes: { spin: { to: { transform: "rotate(360deg)" } }, ping: { "75%, 100%": { transform: "scale(2)", opacity: "0" } }, pulse: { "50%": { opacity: ".5" } }, bounce: { "0%, 100%": { transform: "translateY(-25%)", animationTimingFunction: "cubic-bezier(0.8,0,1,1)" }, "50%": { transform: "none", animationTimingFunction: "cubic-bezier(0,0,0.2,1)" } } }, letterSpacing: { tighter: "-0.05em", tight: "-0.025em", normal: "0em", wide: "0.025em", wider: "0.05em", widest: "0.1em" }, lineHeight: { none: "1", tight: "1.25", snug: "1.375", normal: "1.5", relaxed: "1.625", loose: "2", 3: ".75rem", 4: "1rem", 5: "1.25rem", 6: "1.5rem", 7: "1.75rem", 8: "2rem", 9: "2.25rem", 10: "2.5rem" }, listStyleType: { none: "none", disc: "disc", decimal: "decimal" }, listStyleImage: { none: "none" }, margin: ({ theme: e }) => ({ auto: "auto", ...e("spacing") }), lineClamp: { 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", ...l2 }, maxHeight: ({ theme: e }) => ({ none: "none", full: "100%", screen: "100vh", svh: "100svh", lvh: "100lvh", dvh: "100dvh", min: "min-content", max: "max-content", fit: "fit-content", ...e("spacing") }), maxWidth: ({ theme: e }) => ({ none: "none", xs: "20rem", sm: "24rem", md: "28rem", lg: "32rem", xl: "36rem", "2xl": "42rem", "3xl": "48rem", "4xl": "56rem", "5xl": "64rem", "6xl": "72rem", "7xl": "80rem", full: "100%", min: "min-content", max: "max-content", fit: "fit-content", prose: "65ch", ...e("spacing") }), minHeight: ({ theme: e }) => ({ full: "100%", screen: "100vh", svh: "100svh", lvh: "100lvh", dvh: "100dvh", min: "min-content", max: "max-content", fit: "fit-content", ...e("spacing") }), minWidth: ({ theme: e }) => ({ full: "100%", min: "min-content", max: "max-content", fit: "fit-content", ...e("spacing") }), objectPosition: { bottom: "bottom", center: "center", left: "left", "left-bottom": "left bottom", "left-top": "left top", right: "right", "right-bottom": "right bottom", "right-top": "right top", top: "top" }, opacity: { 0: "0", 5: "0.05", 10: "0.1", 15: "0.15", 20: "0.2", 25: "0.25", 30: "0.3", 35: "0.35", 40: "0.4", 45: "0.45", 50: "0.5", 55: "0.55", 60: "0.6", 65: "0.65", 70: "0.7", 75: "0.75", 80: "0.8", 85: "0.85", 90: "0.9", 95: "0.95", 100: "1", ...s }, order: { first: "-9999", last: "9999", none: "0", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12", ...l2 }, outlineColor: ({ theme: e }) => e("colors"), outlineOffset: { 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px", ...d }, outlineWidth: { 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px", ...d }, padding: ({ theme: e }) => e("spacing"), placeholderColor: ({ theme: e }) => e("colors"), placeholderOpacity: ({ theme: e }) => e("opacity"), ringColor: ({ theme: e }) => ({ DEFAULT: "currentColor", ...e("colors") }), ringOffsetColor: ({ theme: e }) => e("colors"), ringOffsetWidth: { 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px", ...d }, ringOpacity: ({ theme: e }) => ({ DEFAULT: "0.5", ...e("opacity") }), ringWidth: { DEFAULT: "3px", 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px", ...d }, rotate: { 0: "0deg", 1: "1deg", 2: "2deg", 3: "3deg", 6: "6deg", 12: "12deg", 45: "45deg", 90: "90deg", 180: "180deg", ...w }, saturate: { 0: "0", 50: ".5", 100: "1", 150: "1.5", 200: "2", ...s }, scale: { 0: "0", 50: ".5", 75: ".75", 90: ".9", 95: ".95", 100: "1", 105: "1.05", 110: "1.1", 125: "1.25", 150: "1.5", ...s }, screens: { sm: "40rem", md: "48rem", lg: "64rem", xl: "80rem", "2xl": "96rem" }, scrollMargin: ({ theme: e }) => e("spacing"), scrollPadding: ({ theme: e }) => e("spacing"), sepia: { 0: "0", DEFAULT: "100%", ...s }, skew: { 0: "0deg", 1: "1deg", 2: "2deg", 3: "3deg", 6: "6deg", 12: "12deg", ...w }, space: ({ theme: e }) => e("spacing"), spacing: { px: "1px", 0: "0px", 0.5: "0.125rem", 1: "0.25rem", 1.5: "0.375rem", 2: "0.5rem", 2.5: "0.625rem", 3: "0.75rem", 3.5: "0.875rem", 4: "1rem", 5: "1.25rem", 6: "1.5rem", 7: "1.75rem", 8: "2rem", 9: "2.25rem", 10: "2.5rem", 11: "2.75rem", 12: "3rem", 14: "3.5rem", 16: "4rem", 20: "5rem", 24: "6rem", 28: "7rem", 32: "8rem", 36: "9rem", 40: "10rem", 44: "11rem", 48: "12rem", 52: "13rem", 56: "14rem", 60: "15rem", 64: "16rem", 72: "18rem", 80: "20rem", 96: "24rem" }, stroke: ({ theme: e }) => ({ none: "none", ...e("colors") }), strokeWidth: { 0: "0", 1: "1", 2: "2", ...l2 }, supports: {}, data: {}, textColor: ({ theme: e }) => e("colors"), textDecorationColor: ({ theme: e }) => e("colors"), textDecorationThickness: { auto: "auto", "from-font": "from-font", 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px", ...d }, textIndent: ({ theme: e }) => e("spacing"), textOpacity: ({ theme: e }) => e("opacity"), textUnderlineOffset: { auto: "auto", 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px", ...d }, transformOrigin: { center: "center", top: "top", "top-right": "top right", right: "right", "bottom-right": "bottom right", bottom: "bottom", "bottom-left": "bottom left", left: "left", "top-left": "top left" }, transitionDelay: { 0: "0s", 75: "75ms", 100: "100ms", 150: "150ms", 200: "200ms", 300: "300ms", 500: "500ms", 700: "700ms", 1e3: "1000ms", ...T }, transitionDuration: { DEFAULT: "150ms", 0: "0s", 75: "75ms", 100: "100ms", 150: "150ms", 200: "200ms", 300: "300ms", 500: "500ms", 700: "700ms", 1e3: "1000ms", ...T }, transitionProperty: { none: "none", all: "all", DEFAULT: "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter", colors: "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke", opacity: "opacity", shadow: "box-shadow", transform: "transform" }, transitionTimingFunction: { DEFAULT: "cubic-bezier(0.4, 0, 0.2, 1)", linear: "linear", in: "cubic-bezier(0.4, 0, 1, 1)", out: "cubic-bezier(0, 0, 0.2, 1)", "in-out": "cubic-bezier(0.4, 0, 0.2, 1)" }, translate: ({ theme: e }) => ({ "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", full: "100%", ...e("spacing") }), size: ({ theme: e }) => ({ auto: "auto", "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", "1/5": "20%", "2/5": "40%", "3/5": "60%", "4/5": "80%", "1/6": "16.666667%", "2/6": "33.333333%", "3/6": "50%", "4/6": "66.666667%", "5/6": "83.333333%", "1/12": "8.333333%", "2/12": "16.666667%", "3/12": "25%", "4/12": "33.333333%", "5/12": "41.666667%", "6/12": "50%", "7/12": "58.333333%", "8/12": "66.666667%", "9/12": "75%", "10/12": "83.333333%", "11/12": "91.666667%", full: "100%", min: "min-content", max: "max-content", fit: "fit-content", ...e("spacing") }), width: ({ theme: e }) => ({ auto: "auto", "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", "1/5": "20%", "2/5": "40%", "3/5": "60%", "4/5": "80%", "1/6": "16.666667%", "2/6": "33.333333%", "3/6": "50%", "4/6": "66.666667%", "5/6": "83.333333%", "1/12": "8.333333%", "2/12": "16.666667%", "3/12": "25%", "4/12": "33.333333%", "5/12": "41.666667%", "6/12": "50%", "7/12": "58.333333%", "8/12": "66.666667%", "9/12": "75%", "10/12": "83.333333%", "11/12": "91.666667%", full: "100%", screen: "100vw", svw: "100svw", lvw: "100lvw", dvw: "100dvw", min: "min-content", max: "max-content", fit: "fit-content", ...e("spacing") }), willChange: { auto: "auto", scroll: "scroll-position", contents: "contents", transform: "transform" }, zIndex: { auto: "auto", 0: "0", 10: "10", 20: "20", 30: "30", 40: "40", 50: "50", ...l2 } };

// node_modules/tailwindcss/dist/chunk-7ZRPRNCT.mjs
function f2(n) {
  if (arguments.length == 0) throw new TypeError("`CSS.escape` requires an argument.");
  var e = String(n), r = e.length, i = -1, t, s2 = "", l4 = e.charCodeAt(0);
  if (r == 1 && l4 == 45) return "\\" + e;
  for (; ++i < r; ) {
    if (t = e.charCodeAt(i), t == 0) {
      s2 += "�";
      continue;
    }
    if (t >= 1 && t <= 31 || t == 127 || i == 0 && t >= 48 && t <= 57 || i == 1 && t >= 48 && t <= 57 && l4 == 45) {
      s2 += "\\" + t.toString(16) + " ";
      continue;
    }
    if (t >= 128 || t == 45 || t == 95 || t >= 48 && t <= 57 || t >= 65 && t <= 90 || t >= 97 && t <= 122) {
      s2 += e.charAt(i);
      continue;
    }
    s2 += "\\" + e.charAt(i);
  }
  return s2;
}
function c(n) {
  return n.replace(/\\([\dA-Fa-f]{1,6}[\t\n\f\r ]?|[\S\s])/g, (e) => e.length > 2 ? String.fromCodePoint(Number.parseInt(e.slice(1).trim(), 16)) : e[1]);
}
var p2 = /* @__PURE__ */ new Map([["--font", ["--font-weight", "--font-size"]], ["--inset", ["--inset-shadow", "--inset-ring"]], ["--text", ["--text-color", "--text-underline-offset", "--text-indent", "--text-decoration-thickness", "--text-decoration-color"]]]);
function h2(n, e) {
  return (p2.get(e) ?? []).some((r) => n === r || n.startsWith(`${r}-`));
}
var _g_instances, i_fn, e_fn, t_fn, _a;
var g2 = (_a = class {
  constructor(e = /* @__PURE__ */ new Map(), r = /* @__PURE__ */ new Set([])) {
    __privateAdd(this, _g_instances);
    __publicField(this, "prefix", null);
    this.values = e;
    this.keyframes = r;
  }
  add(e, r, i = 0) {
    if (e.endsWith("\\*") && (e = e.slice(0, -2) + "*"), e.endsWith("-*")) {
      if (r !== "initial") throw new Error(`Invalid theme value \`${r}\` for namespace \`${e}\``);
      e === "--*" ? this.values.clear() : this.clearNamespace(e.slice(0, -2), 0);
    }
    if (i & 4) {
      let t = this.values.get(e);
      if (t && !(t.options & 4)) return;
    }
    r === "initial" ? this.values.delete(e) : this.values.set(e, { value: r, options: i });
  }
  keysInNamespaces(e) {
    let r = [];
    for (let i of e) {
      let t = `${i}-`;
      for (let s2 of this.values.keys()) s2.startsWith(t) && s2.indexOf("--", 2) === -1 && (h2(s2, i) || r.push(s2.slice(t.length)));
    }
    return r;
  }
  get(e) {
    for (let r of e) {
      let i = this.values.get(r);
      if (i) return i.value;
    }
    return null;
  }
  hasDefault(e) {
    return (this.getOptions(e) & 4) === 4;
  }
  getOptions(e) {
    var _a2;
    return ((_a2 = this.values.get(e)) == null ? void 0 : _a2.options) ?? 0;
  }
  entries() {
    return this.prefix ? Array.from(this.values, (e) => (e[0] = __privateMethod(this, _g_instances, i_fn).call(this, e[0]), e)) : this.values.entries();
  }
  clearNamespace(e, r) {
    let i = p2.get(e) ?? [];
    e: for (let t of this.values.keys()) if (t.startsWith(e)) {
      if (r !== 0 && (this.getOptions(t) & r) !== r) continue;
      for (let s2 of i) if (t.startsWith(s2)) continue e;
      this.values.delete(t);
    }
  }
  resolve(e, r) {
    let i = __privateMethod(this, _g_instances, e_fn).call(this, e, r);
    if (!i) return null;
    let t = this.values.get(i);
    return t.options & 1 ? t.value : __privateMethod(this, _g_instances, t_fn).call(this, i);
  }
  resolveValue(e, r) {
    let i = __privateMethod(this, _g_instances, e_fn).call(this, e, r);
    return i ? this.values.get(i).value : null;
  }
  resolveWith(e, r, i = []) {
    let t = __privateMethod(this, _g_instances, e_fn).call(this, e, r);
    if (!t) return null;
    let s2 = {};
    for (let u2 of i) {
      let o = `${t}${u2}`, a = this.values.get(o);
      a && (a.options & 1 ? s2[u2] = a.value : s2[u2] = __privateMethod(this, _g_instances, t_fn).call(this, o));
    }
    let l4 = this.values.get(t);
    return l4.options & 1 ? [l4.value, s2] : [__privateMethod(this, _g_instances, t_fn).call(this, t), s2];
  }
  namespace(e) {
    let r = /* @__PURE__ */ new Map(), i = `${e}-`;
    for (let [t, s2] of this.values) t === e ? r.set(null, s2.value) : t.startsWith(`${i}-`) ? r.set(t.slice(e.length), s2.value) : t.startsWith(i) && r.set(t.slice(i.length), s2.value);
    return r;
  }
  addKeyframes(e) {
    this.keyframes.add(e);
  }
  getKeyframes() {
    return Array.from(this.keyframes);
  }
}, _g_instances = new WeakSet(), i_fn = function(e) {
  return this.prefix ? `--${this.prefix}-${e.slice(2)}` : e;
}, e_fn = function(e, r) {
  for (let i of r) {
    let t = e !== null ? f2(`${i}-${e.replaceAll(".", "_")}`) : i;
    if (this.values.has(t) && !h2(t, i)) return t;
  }
  return null;
}, t_fn = function(e) {
  return this.values.has(e) ? `var(${__privateMethod(this, _g_instances, i_fn).call(this, e)})` : null;
}, _a);

// node_modules/tailwindcss/dist/lib.mjs
var ot = "4.0.0";
var ce = 92;
var Ae = 47;
var Ce = 42;
var vr = 34;
var yr = 39;
var wr = 58;
var $e = 59;
var Q2 = 10;
var de = 32;
var Ve = 9;
var lt = 123;
var De = 125;
var Ue = 40;
var at = 41;
var br = 91;
var kr = 93;
var st = 45;
var _e = 64;
var xr = 33;
function X2(t) {
  t = t.replaceAll(`\r
`, `
`);
  let r = [], n = [], e = [], o = null, s2 = null, a = "", c2 = "", d2;
  for (let f3 = 0; f3 < t.length; f3++) {
    let p3 = t.charCodeAt(f3);
    if (p3 === ce) a += t.slice(f3, f3 + 2), f3 += 1;
    else if (p3 === Ae && t.charCodeAt(f3 + 1) === Ce) {
      let g3 = f3;
      for (let y2 = f3 + 2; y2 < t.length; y2++) if (d2 = t.charCodeAt(y2), d2 === ce) y2 += 1;
      else if (d2 === Ce && t.charCodeAt(y2 + 1) === Ae) {
        f3 = y2 + 1;
        break;
      }
      let h3 = t.slice(g3, f3 + 1);
      h3.charCodeAt(2) === xr && n.push(Ne(h3.slice(2, -2)));
    } else if (p3 === yr || p3 === vr) {
      let g3 = f3;
      for (let h3 = f3 + 1; h3 < t.length; h3++) if (d2 = t.charCodeAt(h3), d2 === ce) h3 += 1;
      else if (d2 === p3) {
        f3 = h3;
        break;
      } else {
        if (d2 === $e && t.charCodeAt(h3 + 1) === Q2) throw new Error(`Unterminated string: ${t.slice(g3, h3 + 1) + String.fromCharCode(p3)}`);
        if (d2 === Q2) throw new Error(`Unterminated string: ${t.slice(g3, h3) + String.fromCharCode(p3)}`);
      }
      a += t.slice(g3, f3 + 1);
    } else {
      if ((p3 === de || p3 === Q2 || p3 === Ve) && (d2 = t.charCodeAt(f3 + 1)) && (d2 === de || d2 === Q2 || d2 === Ve)) continue;
      if (p3 === Q2) {
        if (a.length === 0) continue;
        d2 = a.charCodeAt(a.length - 1), d2 !== de && d2 !== Q2 && d2 !== Ve && (a += " ");
      } else if (p3 === st && t.charCodeAt(f3 + 1) === st && a.length === 0) {
        let g3 = "", h3 = f3, y2 = -1;
        for (let v = f3 + 2; v < t.length; v++) if (d2 = t.charCodeAt(v), d2 === ce) v += 1;
        else if (d2 === Ae && t.charCodeAt(v + 1) === Ce) {
          for (let x = v + 2; x < t.length; x++) if (d2 = t.charCodeAt(x), d2 === ce) x += 1;
          else if (d2 === Ce && t.charCodeAt(x + 1) === Ae) {
            v = x + 1;
            break;
          }
        } else if (y2 === -1 && d2 === wr) y2 = a.length + v - h3;
        else if (d2 === $e && g3.length === 0) {
          a += t.slice(h3, v), f3 = v;
          break;
        } else if (d2 === Ue) g3 += ")";
        else if (d2 === br) g3 += "]";
        else if (d2 === lt) g3 += "}";
        else if ((d2 === De || t.length - 1 === v) && g3.length === 0) {
          f3 = v - 1, a += t.slice(h3, v);
          break;
        } else (d2 === at || d2 === kr || d2 === De) && g3.length > 0 && t[v] === g3[g3.length - 1] && (g3 = g3.slice(0, -1));
        let w2 = Fe(a, y2);
        o ? o.nodes.push(w2) : r.push(w2), a = "";
      } else if (p3 === $e && a.charCodeAt(0) === _e) s2 = pe2(a), o ? o.nodes.push(s2) : r.push(s2), a = "", s2 = null;
      else if (p3 === $e && c2[c2.length - 1] !== ")") {
        let g3 = Fe(a);
        o ? o.nodes.push(g3) : r.push(g3), a = "";
      } else if (p3 === lt && c2[c2.length - 1] !== ")") c2 += "}", s2 = M2(a.trim()), o && o.nodes.push(s2), e.push(o), o = s2, a = "", s2 = null;
      else if (p3 === De && c2[c2.length - 1] !== ")") {
        if (c2 === "") throw new Error("Missing opening {");
        if (c2 = c2.slice(0, -1), a.length > 0) if (a.charCodeAt(0) === _e) s2 = pe2(a), o ? o.nodes.push(s2) : r.push(s2), a = "", s2 = null;
        else {
          let h3 = a.indexOf(":");
          o && o.nodes.push(Fe(a, h3));
        }
        let g3 = e.pop() ?? null;
        g3 === null && o && r.push(o), o = g3, a = "", s2 = null;
      } else if (p3 === Ue) c2 += ")", a += "(";
      else if (p3 === at) {
        if (c2[c2.length - 1] !== ")") throw new Error("Missing opening (");
        c2 = c2.slice(0, -1), a += ")";
      } else {
        if (a.length === 0 && (p3 === de || p3 === Q2 || p3 === Ve)) continue;
        a += String.fromCharCode(p3);
      }
    }
  }
  if (a.charCodeAt(0) === _e && r.push(pe2(a)), c2.length > 0 && o) {
    if (o.kind === "rule") throw new Error(`Missing closing } at ${o.selector}`);
    if (o.kind === "at-rule") throw new Error(`Missing closing } at ${o.name} ${o.params}`);
  }
  return n.length > 0 ? n.concat(r) : r;
}
function pe2(t, r = []) {
  for (let n = 5; n < t.length; n++) {
    let e = t.charCodeAt(n);
    if (e === de || e === Ue) {
      let o = t.slice(0, n).trim(), s2 = t.slice(n).trim();
      return O2(o, s2, r);
    }
  }
  return O2(t.trim(), "", r);
}
function Fe(t, r = t.indexOf(":")) {
  let n = t.indexOf("!important", r + 1);
  return l3(t.slice(0, r).trim(), t.slice(r + 1, n === -1 ? t.length : n).trim(), n !== -1);
}
var Ar = 64;
function F2(t, r = []) {
  return { kind: "rule", selector: t, nodes: r };
}
function O2(t, r = "", n = []) {
  return { kind: "at-rule", name: t, params: r, nodes: n };
}
function M2(t, r = []) {
  return t.charCodeAt(0) === Ar ? pe2(t, r) : F2(t, r);
}
function l3(t, r, n = false) {
  return { kind: "declaration", property: t, value: r, important: n };
}
function Ne(t) {
  return { kind: "comment", value: t };
}
function ee2(t, r) {
  return { kind: "context", context: t, nodes: r };
}
function _2(t) {
  return { kind: "at-root", nodes: t };
}
function j2(t, r, n = [], e = {}) {
  for (let o = 0; o < t.length; o++) {
    let s2 = t[o], a = n[n.length - 1] ?? null;
    if (s2.kind === "context") {
      if (j2(s2.nodes, r, n, { ...e, ...s2.context }) === 2) return 2;
      continue;
    }
    n.push(s2);
    let c2 = r(s2, { parent: a, context: e, path: n, replaceWith(d2) {
      Array.isArray(d2) ? d2.length === 0 ? t.splice(o, 1) : d2.length === 1 ? t[o] = d2[0] : t.splice(o, 1, ...d2) : t[o] = d2, o--;
    } }) ?? 0;
    if (n.pop(), c2 === 2) return 2;
    if (c2 !== 1 && (s2.kind === "rule" || s2.kind === "at-rule")) {
      n.push(s2);
      let d2 = j2(s2.nodes, r, n, e);
      if (n.pop(), d2 === 2) return 2;
    }
  }
}
function Te(t, r, n = [], e = {}) {
  for (let o = 0; o < t.length; o++) {
    let s2 = t[o], a = n[n.length - 1] ?? null;
    if (s2.kind === "rule" || s2.kind === "at-rule") n.push(s2), Te(s2.nodes, r, n, e), n.pop();
    else if (s2.kind === "context") {
      Te(s2.nodes, r, n, { ...e, ...s2.context });
      continue;
    }
    n.push(s2), r(s2, { parent: a, context: e, path: n, replaceWith(c2) {
      Array.isArray(c2) ? c2.length === 0 ? t.splice(o, 1) : c2.length === 1 ? t[o] = c2[0] : t.splice(o, 1, ...c2) : t[o] = c2, o += c2.length - 1;
    } }), n.pop();
  }
}
function te2(t) {
  let r = [], n = /* @__PURE__ */ new Set();
  function e(s2, a, c2 = 0) {
    if (s2.kind === "declaration") {
      if (s2.property === "--tw-sort" || s2.value === void 0 || s2.value === null) return;
      a.push(s2);
    } else if (s2.kind === "rule") if (s2.selector === "&") for (let d2 of s2.nodes) {
      let f3 = [];
      e(d2, f3, c2 + 1), a.push(...f3);
    }
    else {
      let d2 = { ...s2, nodes: [] };
      for (let f3 of s2.nodes) e(f3, d2.nodes, c2 + 1);
      a.push(d2);
    }
    else if (s2.kind === "at-rule" && s2.name === "@property" && c2 === 0) {
      if (n.has(s2.params)) return;
      n.add(s2.params);
      let d2 = { ...s2, nodes: [] };
      for (let f3 of s2.nodes) e(f3, d2.nodes, c2 + 1);
      a.push(d2);
    } else if (s2.kind === "at-rule") {
      let d2 = { ...s2, nodes: [] };
      for (let f3 of s2.nodes) e(f3, d2.nodes, c2 + 1);
      a.push(d2);
    } else if (s2.kind === "at-root") for (let d2 of s2.nodes) {
      let f3 = [];
      e(d2, f3, 0);
      for (let p3 of f3) r.push(p3);
    }
    else if (s2.kind === "context") {
      if (s2.context.reference) return;
      for (let d2 of s2.nodes) e(d2, a, c2);
    } else s2.kind === "comment" && a.push(s2);
  }
  let o = [];
  for (let s2 of t) e(s2, o, 0);
  return o.concat(r);
}
function J2(t) {
  function r(e, o = 0) {
    let s2 = "", a = "  ".repeat(o);
    if (e.kind === "declaration") s2 += `${a}${e.property}: ${e.value}${e.important ? " !important" : ""};
`;
    else if (e.kind === "rule") {
      s2 += `${a}${e.selector} {
`;
      for (let c2 of e.nodes) s2 += r(c2, o + 1);
      s2 += `${a}}
`;
    } else if (e.kind === "at-rule") {
      if (e.nodes.length === 0) return `${a}${e.name} ${e.params};
`;
      s2 += `${a}${e.name}${e.params ? ` ${e.params} ` : " "}{
`;
      for (let c2 of e.nodes) s2 += r(c2, o + 1);
      s2 += `${a}}
`;
    } else if (e.kind === "comment") s2 += `${a}/*${e.value}*/
`;
    else if (e.kind === "context" || e.kind === "at-root") return "";
    return s2;
  }
  let n = "";
  for (let e of t) {
    let o = r(e);
    o !== "" && (n += o);
  }
  return n;
}
function ze(t) {
  return { kind: "word", value: t };
}
function Cr(t, r) {
  return { kind: "function", value: t, nodes: r };
}
function $r(t) {
  return { kind: "separator", value: t };
}
function le(t, r, n = null) {
  for (let e = 0; e < t.length; e++) {
    let o = t[e], s2 = r(o, { parent: n, replaceWith(a) {
      Array.isArray(a) ? a.length === 0 ? t.splice(e, 1) : a.length === 1 ? t[e] = a[0] : t.splice(e, 1, ...a) : t[e] = a, e--;
    } }) ?? 0;
    if (s2 === 2) return 2;
    if (s2 !== 1 && o.kind === "function" && le(o.nodes, r, o) === 2) return 2;
  }
}
function B2(t) {
  let r = "";
  for (let n of t) switch (n.kind) {
    case "word":
    case "separator": {
      r += n.value;
      break;
    }
    case "function":
      r += n.value + "(" + B2(n.nodes) + ")";
  }
  return r;
}
var Vr = 92;
var Nr = 41;
var ut = 58;
var ft = 44;
var Tr = 34;
var ct = 61;
var dt = 62;
var pt = 60;
var gt = 10;
var Sr = 40;
var Er = 39;
var mt = 47;
var ht = 32;
var vt = 9;
function L2(t) {
  t = t.replaceAll(`\r
`, `
`);
  let r = [], n = [], e = null, o = "", s2;
  for (let a = 0; a < t.length; a++) {
    let c2 = t.charCodeAt(a);
    switch (c2) {
      case ut:
      case ft:
      case ct:
      case dt:
      case pt:
      case gt:
      case mt:
      case ht:
      case vt: {
        if (o.length > 0) {
          let g3 = ze(o);
          e ? e.nodes.push(g3) : r.push(g3), o = "";
        }
        let d2 = a, f3 = a + 1;
        for (; f3 < t.length && (s2 = t.charCodeAt(f3), !(s2 !== ut && s2 !== ft && s2 !== ct && s2 !== dt && s2 !== pt && s2 !== gt && s2 !== mt && s2 !== ht && s2 !== vt)); f3++) ;
        a = f3 - 1;
        let p3 = $r(t.slice(d2, f3));
        e ? e.nodes.push(p3) : r.push(p3);
        break;
      }
      case Er:
      case Tr: {
        let d2 = a;
        for (let f3 = a + 1; f3 < t.length; f3++) if (s2 = t.charCodeAt(f3), s2 === Vr) f3 += 1;
        else if (s2 === c2) {
          a = f3;
          break;
        }
        o += t.slice(d2, a + 1);
        break;
      }
      case Sr: {
        let d2 = Cr(o, []);
        o = "", e ? e.nodes.push(d2) : r.push(d2), n.push(d2), e = d2;
        break;
      }
      case Nr: {
        let d2 = n.pop();
        if (o.length > 0) {
          let f3 = ze(o);
          d2.nodes.push(f3), o = "";
        }
        n.length > 0 ? e = n[n.length - 1] : e = null;
        break;
      }
      default:
        o += String.fromCharCode(c2);
    }
  }
  return o.length > 0 && r.push(ze(o)), r;
}
function Y2(t) {
  if (t.indexOf("(") === -1) return ge2(t);
  let r = L2(t);
  return Me(r), t = B2(r), t = ie(t), t;
}
function ge2(t) {
  let r = "";
  for (let n = 0; n < t.length; n++) {
    let e = t[n];
    e === "\\" && t[n + 1] === "_" ? (r += "_", n += 1) : e === "_" ? r += " " : r += e;
  }
  return r;
}
function Me(t) {
  for (let r of t) switch (r.kind) {
    case "function": {
      if (r.value === "url" || r.value.endsWith("_url")) {
        r.value = ge2(r.value);
        break;
      }
      if (r.value === "var" || r.value.endsWith("_var") || r.value === "theme" || r.value.endsWith("_theme")) {
        r.value = ge2(r.value);
        for (let n = 0; n < r.nodes.length; n++) n == 0 && r.nodes[n].kind === "word" || Me([r.nodes[n]]);
        break;
      }
      r.value = ge2(r.value), Me(r.nodes);
      break;
    }
    case "separator":
    case "word": {
      r.value = ge2(r.value);
      break;
    }
    default:
      Rr(r);
  }
}
function Rr(t) {
  throw new Error(`Unexpected value: ${t}`);
}
var Kr = 58;
var yt = 45;
var wt = 97;
var bt = 122;
function* kt(t, r) {
  var _a2;
  let n = u(t, ":");
  if (r.theme.prefix) {
    if (n.length === 1 || n[0] !== r.theme.prefix) return null;
    n.shift();
  }
  let e = n.pop(), o = [];
  for (let g3 = n.length - 1; g3 >= 0; --g3) {
    let h3 = r.parseVariant(n[g3]);
    if (h3 === null) return;
    o.push(h3);
  }
  let s2 = false;
  e[e.length - 1] === "!" ? (s2 = true, e = e.slice(0, -1)) : e[0] === "!" && (s2 = true, e = e.slice(1)), r.utilities.has(e, "static") && !e.includes("[") && (yield { kind: "static", root: e, variants: o, important: s2, raw: t });
  let [a, c2 = null, d2] = u(e, "/");
  if (d2) return;
  let f3 = c2 === null ? null : Le(c2);
  if (c2 !== null && f3 === null) return;
  if (a[0] === "[") {
    if (a[a.length - 1] !== "]") return;
    let g3 = a.charCodeAt(1);
    if (g3 !== yt && !(g3 >= wt && g3 <= bt)) return;
    a = a.slice(1, -1);
    let h3 = a.indexOf(":");
    if (h3 === -1 || h3 === 0 || h3 === a.length - 1) return;
    let y2 = a.slice(0, h3), w2 = Y2(a.slice(h3 + 1));
    yield { kind: "arbitrary", property: y2, value: w2, modifier: f3, variants: o, important: s2, raw: t };
    return;
  }
  let p3;
  if (a[a.length - 1] === "]") {
    let g3 = a.indexOf("-[");
    if (g3 === -1) return;
    let h3 = a.slice(0, g3);
    if (!r.utilities.has(h3, "functional")) return;
    let y2 = a.slice(g3 + 1);
    p3 = [[h3, y2]];
  } else if (a[a.length - 1] === ")") {
    let g3 = a.indexOf("-(");
    if (g3 === -1) return;
    let h3 = a.slice(0, g3);
    if (!r.utilities.has(h3, "functional")) return;
    let y2 = a.slice(g3 + 2, -1), w2 = u(y2, ":"), v = null;
    if (w2.length === 2 && (v = w2[0], y2 = w2[1]), y2[0] !== "-" && y2[1] !== "-") return;
    p3 = [[h3, v === null ? `[var(${y2})]` : `[${v}:var(${y2})]`]];
  } else p3 = At(a, (g3) => r.utilities.has(g3, "functional"));
  for (let [g3, h3] of p3) {
    let y2 = { kind: "functional", root: g3, modifier: f3, value: null, variants: o, important: s2, raw: t };
    if (h3 === null) {
      yield y2;
      continue;
    }
    {
      let w2 = h3.indexOf("[");
      if (w2 !== -1) {
        if (h3[h3.length - 1] !== "]") return;
        let x = Y2(h3.slice(w2 + 1, -1)), V2 = "";
        for (let S2 = 0; S2 < x.length; S2++) {
          let R2 = x.charCodeAt(S2);
          if (R2 === Kr) {
            V2 = x.slice(0, S2), x = x.slice(S2 + 1);
            break;
          }
          if (!(R2 === yt || R2 >= wt && R2 <= bt)) break;
        }
        if (x.length === 0 || x.trim().length === 0) continue;
        y2.value = { kind: "arbitrary", dataType: V2 || null, value: x };
      } else {
        let x = c2 === null || ((_a2 = y2.modifier) == null ? void 0 : _a2.kind) === "arbitrary" ? null : `${h3}/${c2}`;
        y2.value = { kind: "named", value: h3, fraction: x };
      }
    }
    yield y2;
  }
}
function Le(t) {
  if (t[0] === "[" && t[t.length - 1] === "]") {
    let r = Y2(t.slice(1, -1));
    return r.length === 0 || r.trim().length === 0 ? null : { kind: "arbitrary", value: r };
  }
  if (t[0] === "(" && t[t.length - 1] === ")") {
    let r = Y2(t.slice(1, -1));
    return r.length === 0 || r.trim().length === 0 ? null : { kind: "arbitrary", value: `var(${r})` };
  }
  return { kind: "named", value: t };
}
function xt(t, r) {
  if (t[0] === "[" && t[t.length - 1] === "]") {
    if (t[1] === "@" && t.includes("&")) return null;
    let n = Y2(t.slice(1, -1));
    if (n.length === 0 || n.trim().length === 0) return null;
    let e = n[0] === ">" || n[0] === "+" || n[0] === "~";
    return !e && n[0] !== "@" && !n.includes("&") && (n = `&:is(${n})`), { kind: "arbitrary", selector: n, relative: e };
  }
  {
    let [n, e = null, o] = u(t, "/");
    if (o) return null;
    let s2 = At(n, (a) => r.variants.has(a));
    for (let [a, c2] of s2) switch (r.variants.kind(a)) {
      case "static":
        return c2 !== null || e !== null ? null : { kind: "static", root: a };
      case "functional": {
        let d2 = e === null ? null : Le(e);
        if (e !== null && d2 === null) return null;
        if (c2 === null) return { kind: "functional", root: a, modifier: d2, value: null };
        if (c2[c2.length - 1] === "]") {
          if (c2[0] !== "[") continue;
          let f3 = Y2(c2.slice(1, -1));
          return f3.length === 0 || f3.trim().length === 0 ? null : { kind: "functional", root: a, modifier: d2, value: { kind: "arbitrary", value: f3 } };
        }
        if (c2[c2.length - 1] === ")") {
          if (c2[0] !== "(") continue;
          let f3 = Y2(c2.slice(1, -1));
          return f3.length === 0 || f3.trim().length === 0 ? null : { kind: "functional", root: a, modifier: d2, value: { kind: "arbitrary", value: `var(${f3})` } };
        }
        return { kind: "functional", root: a, modifier: d2, value: { kind: "named", value: c2 } };
      }
      case "compound": {
        if (c2 === null) return null;
        let d2 = r.parseVariant(c2);
        if (d2 === null || !r.variants.compoundsWith(a, d2)) return null;
        let f3 = e === null ? null : Le(e);
        return e !== null && f3 === null ? null : { kind: "compound", root: a, modifier: f3, variant: d2 };
      }
    }
  }
  return null;
}
function* At(t, r) {
  r(t) && (yield [t, null]);
  let n = t.lastIndexOf("-");
  if (n === -1) {
    t[0] === "@" && r("@") && (yield ["@", t.slice(1)]);
    return;
  }
  do {
    let e = t.slice(0, n);
    if (r(e)) {
      let o = [e, t.slice(n + 1)];
      if (o[1] === "") break;
      yield o;
    }
    n = t.lastIndexOf("-", n - 1);
  } while (n > 0);
}
function re2(t, r, n) {
  if (t === r) return 0;
  let e = t.indexOf("("), o = r.indexOf("("), s2 = e === -1 ? t.replace(/[\d.]+/g, "") : t.slice(0, e), a = o === -1 ? r.replace(/[\d.]+/g, "") : r.slice(0, o), c2 = (s2 === a ? 0 : s2 < a ? -1 : 1) || (n === "asc" ? parseInt(t) - parseInt(r) : parseInt(r) - parseInt(t));
  return Number.isNaN(c2) ? t < r ? -1 : 1 : c2;
}
var z2 = class extends Map {
  constructor(n) {
    super();
    this.factory = n;
  }
  get(n) {
    let e = super.get(n);
    return e === void 0 && (e = this.factory(n, this), this.set(n, e)), e;
  }
};
var Pr = /* @__PURE__ */ new Set(["inset", "inherit", "initial", "revert", "unset"]);
var Ct = /^-?(\d+|\.\d+)(.*?)$/g;
function ne2(t, r) {
  return u(t, ",").map((e) => {
    e = e.trim();
    let o = u(e, " ").filter((f3) => f3.trim() !== ""), s2 = null, a = null, c2 = null;
    for (let f3 of o) Pr.has(f3) || (Ct.test(f3) ? (a === null ? a = f3 : c2 === null && (c2 = f3), Ct.lastIndex = 0) : s2 === null && (s2 = f3));
    if (a === null || c2 === null) return e;
    let d2 = r(s2 ?? "currentcolor");
    return s2 !== null ? e.replace(s2, d2) : `${e} ${d2}`;
  }).join(", ");
}
var Or = /^-?[a-z][a-zA-Z0-9/%._-]*$/;
var jr = /^-?[a-z][a-zA-Z0-9/%._-]*-\*$/;
var We = class {
  constructor() {
    __publicField(this, "utilities", new z2(() => []));
    __publicField(this, "completions", /* @__PURE__ */ new Map());
  }
  static(r, n) {
    this.utilities.get(r).push({ kind: "static", compileFn: n });
  }
  functional(r, n, e) {
    this.utilities.get(r).push({ kind: "functional", compileFn: n, options: e });
  }
  has(r, n) {
    return this.utilities.has(r) && this.utilities.get(r).some((e) => e.kind === n);
  }
  get(r) {
    return this.utilities.has(r) ? this.utilities.get(r) : [];
  }
  getCompletions(r) {
    var _a2;
    return ((_a2 = this.completions.get(r)) == null ? void 0 : _a2()) ?? [];
  }
  suggest(r, n) {
    this.completions.set(r, n);
  }
  keys(r) {
    let n = [];
    for (let [e, o] of this.utilities.entries()) for (let s2 of o) if (s2.kind === r) {
      n.push(e);
      break;
    }
    return n;
  }
};
function $2(t, r, n) {
  return O2("@property", t, [l3("syntax", n ? `"${n}"` : '"*"'), l3("inherits", "false"), ...r ? [l3("initial-value", r)] : []]);
}
function G2(t, r) {
  if (r === null) return t;
  let n = Number(r);
  return Number.isNaN(n) || (r = `${n * 100}%`), `color-mix(in oklab, ${t} ${r}, transparent)`;
}
function W2(t, r, n) {
  if (!r) return t;
  if (r.kind === "arbitrary") return G2(t, r.value);
  let e = n.resolve(r.value, ["--opacity"]);
  return e ? G2(t, e) : ue(r.value) ? G2(t, `${r.value}%`) : null;
}
function q2(t, r, n) {
  let e = null;
  switch (t.value.value) {
    case "inherit": {
      e = "inherit";
      break;
    }
    case "transparent": {
      e = "transparent";
      break;
    }
    case "current": {
      e = "currentColor";
      break;
    }
    default: {
      e = r.resolve(t.value.value, n);
      break;
    }
  }
  return e ? W2(e, t.modifier, r) : null;
}
function Vt(t) {
  let r = new We();
  function n(i, u2) {
    function* m(k2) {
      for (let b2 of t.keysInNamespaces(k2)) yield b2.replaceAll("_", ".");
    }
    r.suggest(i, () => {
      let k2 = [];
      for (let b2 of u2()) {
        if (typeof b2 == "string") {
          k2.push({ values: [b2], modifiers: [] });
          continue;
        }
        let N2 = [...b2.values ?? [], ...m(b2.valueThemeKeys ?? [])], K2 = [...b2.modifiers ?? [], ...m(b2.modifierThemeKeys ?? [])];
        b2.hasDefaultValue && N2.unshift(null), k2.push({ supportsNegative: b2.supportsNegative, values: N2, modifiers: K2 });
      }
      return k2;
    });
  }
  function e(i, u2) {
    r.static(i, () => u2.map((m) => typeof m == "function" ? m() : l3(m[0], m[1])));
  }
  function o(i, u2) {
    function m({ negative: k2 }) {
      return (b2) => {
        let N2 = null;
        if (b2.value) if (b2.value.kind === "arbitrary") {
          if (b2.modifier) return;
          N2 = b2.value.value;
        } else {
          if (N2 = t.resolve(b2.value.fraction ?? b2.value.value, u2.themeKeys ?? []), N2 === null && u2.supportsFractions && b2.value.fraction) {
            let [K2, C2] = u(b2.value.fraction, "/");
            if (!p(K2) || !p(C2)) return;
            N2 = `calc(${b2.value.fraction} * 100%)`;
          }
          if (N2 === null && k2 && u2.handleNegativeBareValue) {
            if (N2 = u2.handleNegativeBareValue(b2.value), !(N2 == null ? void 0 : N2.includes("/")) && b2.modifier) return;
            if (N2 !== null) return u2.handle(N2);
          }
          if (N2 === null && u2.handleBareValue && (N2 = u2.handleBareValue(b2.value), !(N2 == null ? void 0 : N2.includes("/")) && b2.modifier)) return;
        }
        else {
          if (b2.modifier) return;
          N2 = u2.defaultValue !== void 0 ? u2.defaultValue : t.resolve(null, u2.themeKeys ?? []);
        }
        if (N2 !== null) return u2.handle(k2 ? `calc(${N2} * -1)` : N2);
      };
    }
    u2.supportsNegative && r.functional(`-${i}`, m({ negative: true })), r.functional(i, m({ negative: false })), n(i, () => [{ supportsNegative: u2.supportsNegative, valueThemeKeys: u2.themeKeys ?? [], hasDefaultValue: u2.defaultValue !== void 0 && u2.defaultValue !== null }]);
  }
  function s2(i, u2) {
    r.functional(i, (m) => {
      if (!m.value) return;
      let k2 = null;
      if (m.value.kind === "arbitrary" ? (k2 = m.value.value, k2 = W2(k2, m.modifier, t)) : k2 = q2(m, t, u2.themeKeys), k2 !== null) return u2.handle(k2);
    }), n(i, () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: u2.themeKeys, modifiers: Array.from({ length: 21 }, (m, k2) => `${k2 * 5}`) }]);
  }
  function a(i, u2, m, { supportsNegative: k2 = false, supportsFractions: b2 = false } = {}) {
    k2 && r.static(`-${i}-px`, () => m("-1px")), r.static(`${i}-px`, () => m("1px")), o(i, { themeKeys: u2, supportsFractions: b2, supportsNegative: k2, defaultValue: null, handleBareValue: ({ value: N2 }) => {
      let K2 = t.resolve(null, ["--spacing"]);
      return !K2 || !ge(N2) ? null : `calc(${K2} * ${N2})`;
    }, handleNegativeBareValue: ({ value: N2 }) => {
      let K2 = t.resolve(null, ["--spacing"]);
      return !K2 || !ge(N2) ? null : `calc(${K2} * -${N2})`;
    }, handle: m }), n(i, () => [{ values: ["0", "0.5", "1", "1.5", "2", "2.5", "3", "3.5", "4", "5", "6", "7", "8", "9", "10", "11", "12", "14", "16", "20", "24", "28", "32", "36", "40", "44", "48", "52", "56", "60", "64", "72", "80", "96"], supportsNegative: k2, valueThemeKeys: u2 }]);
  }
  e("sr-only", [["position", "absolute"], ["width", "1px"], ["height", "1px"], ["padding", "0"], ["margin", "-1px"], ["overflow", "hidden"], ["clip", "rect(0, 0, 0, 0)"], ["white-space", "nowrap"], ["border-width", "0"]]), e("not-sr-only", [["position", "static"], ["width", "auto"], ["height", "auto"], ["padding", "0"], ["margin", "0"], ["overflow", "visible"], ["clip", "auto"], ["white-space", "normal"]]), e("pointer-events-none", [["pointer-events", "none"]]), e("pointer-events-auto", [["pointer-events", "auto"]]), e("visible", [["visibility", "visible"]]), e("invisible", [["visibility", "hidden"]]), e("collapse", [["visibility", "collapse"]]), e("static", [["position", "static"]]), e("fixed", [["position", "fixed"]]), e("absolute", [["position", "absolute"]]), e("relative", [["position", "relative"]]), e("sticky", [["position", "sticky"]]);
  for (let [i, u2] of [["inset", "inset"], ["inset-x", "inset-inline"], ["inset-y", "inset-block"], ["start", "inset-inline-start"], ["end", "inset-inline-end"], ["top", "top"], ["right", "right"], ["bottom", "bottom"], ["left", "left"]]) e(`${i}-auto`, [[u2, "auto"]]), e(`${i}-full`, [[u2, "100%"]]), e(`-${i}-full`, [[u2, "-100%"]]), a(i, ["--inset", "--spacing"], (m) => [l3(u2, m)], { supportsNegative: true, supportsFractions: true });
  e("isolate", [["isolation", "isolate"]]), e("isolation-auto", [["isolation", "auto"]]), e("z-auto", [["z-index", "auto"]]), o("z", { supportsNegative: true, handleBareValue: ({ value: i }) => p(i) ? i : null, themeKeys: ["--z-index"], handle: (i) => [l3("z-index", i)] }), n("z", () => [{ supportsNegative: true, values: ["0", "10", "20", "30", "40", "50"], valueThemeKeys: ["--z-index"] }]), e("order-first", [["order", "calc(-infinity)"]]), e("order-last", [["order", "calc(infinity)"]]), e("order-none", [["order", "0"]]), o("order", { supportsNegative: true, handleBareValue: ({ value: i }) => p(i) ? i : null, themeKeys: ["--order"], handle: (i) => [l3("order", i)] }), n("order", () => [{ supportsNegative: true, values: Array.from({ length: 12 }, (i, u2) => `${u2 + 1}`), valueThemeKeys: ["--order"] }]), e("col-auto", [["grid-column", "auto"]]), o("col", { themeKeys: ["--grid-column"], handle: (i) => [l3("grid-column", i)] }), e("col-span-full", [["grid-column", "1 / -1"]]), o("col-span", { handleBareValue: ({ value: i }) => p(i) ? i : null, handle: (i) => [l3("grid-column", `span ${i} / span ${i}`)] }), e("col-start-auto", [["grid-column-start", "auto"]]), o("col-start", { supportsNegative: true, handleBareValue: ({ value: i }) => p(i) ? i : null, themeKeys: ["--grid-column-start"], handle: (i) => [l3("grid-column-start", i)] }), e("col-end-auto", [["grid-column-end", "auto"]]), o("col-end", { supportsNegative: true, handleBareValue: ({ value: i }) => p(i) ? i : null, themeKeys: ["--grid-column-end"], handle: (i) => [l3("grid-column-end", i)] }), n("col-span", () => [{ values: Array.from({ length: 12 }, (i, u2) => `${u2 + 1}`), valueThemeKeys: [] }]), n("col-start", () => [{ supportsNegative: true, values: Array.from({ length: 13 }, (i, u2) => `${u2 + 1}`), valueThemeKeys: ["--grid-column-start"] }]), n("col-end", () => [{ supportsNegative: true, values: Array.from({ length: 13 }, (i, u2) => `${u2 + 1}`), valueThemeKeys: ["--grid-column-end"] }]), e("row-auto", [["grid-row", "auto"]]), o("row", { themeKeys: ["--grid-row"], handle: (i) => [l3("grid-row", i)] }), e("row-span-full", [["grid-row", "1 / -1"]]), o("row-span", { themeKeys: [], handleBareValue: ({ value: i }) => p(i) ? i : null, handle: (i) => [l3("grid-row", `span ${i} / span ${i}`)] }), e("row-start-auto", [["grid-row-start", "auto"]]), o("row-start", { supportsNegative: true, handleBareValue: ({ value: i }) => p(i) ? i : null, themeKeys: ["--grid-row-start"], handle: (i) => [l3("grid-row-start", i)] }), e("row-end-auto", [["grid-row-end", "auto"]]), o("row-end", { supportsNegative: true, handleBareValue: ({ value: i }) => p(i) ? i : null, themeKeys: ["--grid-row-end"], handle: (i) => [l3("grid-row-end", i)] }), n("row-span", () => [{ values: Array.from({ length: 12 }, (i, u2) => `${u2 + 1}`), valueThemeKeys: [] }]), n("row-start", () => [{ supportsNegative: true, values: Array.from({ length: 13 }, (i, u2) => `${u2 + 1}`), valueThemeKeys: ["--grid-row-start"] }]), n("row-end", () => [{ supportsNegative: true, values: Array.from({ length: 13 }, (i, u2) => `${u2 + 1}`), valueThemeKeys: ["--grid-row-end"] }]), e("float-start", [["float", "inline-start"]]), e("float-end", [["float", "inline-end"]]), e("float-right", [["float", "right"]]), e("float-left", [["float", "left"]]), e("float-none", [["float", "none"]]), e("clear-start", [["clear", "inline-start"]]), e("clear-end", [["clear", "inline-end"]]), e("clear-right", [["clear", "right"]]), e("clear-left", [["clear", "left"]]), e("clear-both", [["clear", "both"]]), e("clear-none", [["clear", "none"]]);
  for (let [i, u2] of [["m", "margin"], ["mx", "margin-inline"], ["my", "margin-block"], ["ms", "margin-inline-start"], ["me", "margin-inline-end"], ["mt", "margin-top"], ["mr", "margin-right"], ["mb", "margin-bottom"], ["ml", "margin-left"]]) e(`${i}-auto`, [[u2, "auto"]]), a(i, ["--margin", "--spacing"], (m) => [l3(u2, m)], { supportsNegative: true });
  e("box-border", [["box-sizing", "border-box"]]), e("box-content", [["box-sizing", "content-box"]]), e("line-clamp-none", [["overflow", "visible"], ["display", "block"], ["-webkit-box-orient", "horizontal"], ["-webkit-line-clamp", "unset"]]), o("line-clamp", { themeKeys: ["--line-clamp"], handleBareValue: ({ value: i }) => p(i) ? i : null, handle: (i) => [l3("overflow", "hidden"), l3("display", "-webkit-box"), l3("-webkit-box-orient", "vertical"), l3("-webkit-line-clamp", i)] }), n("line-clamp", () => [{ values: ["1", "2", "3", "4", "5", "6"], valueThemeKeys: ["--line-clamp"] }]), e("block", [["display", "block"]]), e("inline-block", [["display", "inline-block"]]), e("inline", [["display", "inline"]]), e("hidden", [["display", "none"]]), e("inline-flex", [["display", "inline-flex"]]), e("table", [["display", "table"]]), e("inline-table", [["display", "inline-table"]]), e("table-caption", [["display", "table-caption"]]), e("table-cell", [["display", "table-cell"]]), e("table-column", [["display", "table-column"]]), e("table-column-group", [["display", "table-column-group"]]), e("table-footer-group", [["display", "table-footer-group"]]), e("table-header-group", [["display", "table-header-group"]]), e("table-row-group", [["display", "table-row-group"]]), e("table-row", [["display", "table-row"]]), e("flow-root", [["display", "flow-root"]]), e("flex", [["display", "flex"]]), e("grid", [["display", "grid"]]), e("inline-grid", [["display", "inline-grid"]]), e("contents", [["display", "contents"]]), e("list-item", [["display", "list-item"]]), e("field-sizing-content", [["field-sizing", "content"]]), e("field-sizing-fixed", [["field-sizing", "fixed"]]), e("aspect-auto", [["aspect-ratio", "auto"]]), e("aspect-square", [["aspect-ratio", "1 / 1"]]), o("aspect", { themeKeys: ["--aspect"], handleBareValue: ({ fraction: i }) => {
    if (i === null) return null;
    let [u2, m] = u(i, "/");
    return !p(u2) || !p(m) ? null : i;
  }, handle: (i) => [l3("aspect-ratio", i)] });
  for (let [i, u2] of [["auto", "auto"], ["full", "100%"], ["svw", "100svw"], ["lvw", "100lvw"], ["dvw", "100dvw"], ["svh", "100svh"], ["lvh", "100lvh"], ["dvh", "100dvh"], ["min", "min-content"], ["max", "max-content"], ["fit", "fit-content"]]) e(`size-${i}`, [["--tw-sort", "size"], ["width", u2], ["height", u2]]), e(`w-${i}`, [["width", u2]]), e(`min-w-${i}`, [["min-width", u2]]), e(`max-w-${i}`, [["max-width", u2]]), e(`h-${i}`, [["height", u2]]), e(`min-h-${i}`, [["min-height", u2]]), e(`max-h-${i}`, [["max-height", u2]]);
  e("w-screen", [["width", "100vw"]]), e("min-w-screen", [["min-width", "100vw"]]), e("max-w-screen", [["max-width", "100vw"]]), e("h-screen", [["height", "100vh"]]), e("min-h-screen", [["min-height", "100vh"]]), e("max-h-screen", [["max-height", "100vh"]]), e("min-w-none", [["min-width", "none"]]), e("max-w-none", [["max-width", "none"]]), e("min-h-none", [["min-height", "none"]]), e("max-h-none", [["max-height", "none"]]), a("size", ["--size", "--spacing"], (i) => [l3("--tw-sort", "size"), l3("width", i), l3("height", i)], { supportsFractions: true });
  for (let [i, u2, m] of [["w", ["--width", "--spacing", "--container"], "width"], ["min-w", ["--min-width", "--spacing", "--container"], "min-width"], ["max-w", ["--max-width", "--spacing", "--container"], "max-width"], ["h", ["--height", "--spacing"], "height"], ["min-h", ["--min-height", "--height", "--spacing"], "min-height"], ["max-h", ["--max-height", "--height", "--spacing"], "max-height"]]) a(i, u2, (k2) => [l3(m, k2)], { supportsFractions: true });
  r.static("container", () => {
    let i = [...t.namespace("--breakpoint").values()];
    i.sort((m, k2) => re2(m, k2, "asc"));
    let u2 = [l3("--tw-sort", "--tw-container-component"), l3("width", "100%")];
    for (let m of i) u2.push(O2("@media", `(width >= ${m})`, [l3("max-width", m)]));
    return u2;
  }), e("flex-auto", [["flex", "auto"]]), e("flex-initial", [["flex", "0 auto"]]), e("flex-none", [["flex", "none"]]), r.functional("flex", (i) => {
    if (i.value) {
      if (i.value.kind === "arbitrary") return i.modifier ? void 0 : [l3("flex", i.value.value)];
      if (i.value.fraction) {
        let [u2, m] = u(i.value.fraction, "/");
        return !p(u2) || !p(m) ? void 0 : [l3("flex", `calc(${i.value.fraction} * 100%)`)];
      }
      if (p(i.value.value)) return i.modifier ? void 0 : [l3("flex", i.value.value)];
    }
  }), o("shrink", { defaultValue: "1", handleBareValue: ({ value: i }) => p(i) ? i : null, handle: (i) => [l3("flex-shrink", i)] }), o("grow", { defaultValue: "1", handleBareValue: ({ value: i }) => p(i) ? i : null, handle: (i) => [l3("flex-grow", i)] }), n("shrink", () => [{ values: ["0"], valueThemeKeys: [], hasDefaultValue: true }]), n("grow", () => [{ values: ["0"], valueThemeKeys: [], hasDefaultValue: true }]), e("basis-auto", [["flex-basis", "auto"]]), e("basis-full", [["flex-basis", "100%"]]), a("basis", ["--flex-basis", "--spacing", "--container"], (i) => [l3("flex-basis", i)], { supportsFractions: true }), e("table-auto", [["table-layout", "auto"]]), e("table-fixed", [["table-layout", "fixed"]]), e("caption-top", [["caption-side", "top"]]), e("caption-bottom", [["caption-side", "bottom"]]), e("border-collapse", [["border-collapse", "collapse"]]), e("border-separate", [["border-collapse", "separate"]]);
  let c2 = () => _2([$2("--tw-border-spacing-x", "0", "<length>"), $2("--tw-border-spacing-y", "0", "<length>")]);
  a("border-spacing", ["--border-spacing", "--spacing"], (i) => [c2(), l3("--tw-border-spacing-x", i), l3("--tw-border-spacing-y", i), l3("border-spacing", "var(--tw-border-spacing-x) var(--tw-border-spacing-y)")]), a("border-spacing-x", ["--border-spacing", "--spacing"], (i) => [c2(), l3("--tw-border-spacing-x", i), l3("border-spacing", "var(--tw-border-spacing-x) var(--tw-border-spacing-y)")]), a("border-spacing-y", ["--border-spacing", "--spacing"], (i) => [c2(), l3("--tw-border-spacing-y", i), l3("border-spacing", "var(--tw-border-spacing-x) var(--tw-border-spacing-y)")]), e("origin-center", [["transform-origin", "center"]]), e("origin-top", [["transform-origin", "top"]]), e("origin-top-right", [["transform-origin", "top right"]]), e("origin-right", [["transform-origin", "right"]]), e("origin-bottom-right", [["transform-origin", "bottom right"]]), e("origin-bottom", [["transform-origin", "bottom"]]), e("origin-bottom-left", [["transform-origin", "bottom left"]]), e("origin-left", [["transform-origin", "left"]]), e("origin-top-left", [["transform-origin", "top left"]]), o("origin", { themeKeys: ["--transform-origin"], handle: (i) => [l3("transform-origin", i)] }), e("perspective-origin-center", [["perspective-origin", "center"]]), e("perspective-origin-top", [["perspective-origin", "top"]]), e("perspective-origin-top-right", [["perspective-origin", "top right"]]), e("perspective-origin-right", [["perspective-origin", "right"]]), e("perspective-origin-bottom-right", [["perspective-origin", "bottom right"]]), e("perspective-origin-bottom", [["perspective-origin", "bottom"]]), e("perspective-origin-bottom-left", [["perspective-origin", "bottom left"]]), e("perspective-origin-left", [["perspective-origin", "left"]]), e("perspective-origin-top-left", [["perspective-origin", "top left"]]), o("perspective-origin", { themeKeys: ["--perspective-origin"], handle: (i) => [l3("perspective-origin", i)] }), e("perspective-none", [["perspective", "none"]]), o("perspective", { themeKeys: ["--perspective"], handle: (i) => [l3("perspective", i)] });
  let d2 = () => _2([$2("--tw-translate-x", "0"), $2("--tw-translate-y", "0"), $2("--tw-translate-z", "0")]);
  e("translate-none", [["translate", "none"]]), e("-translate-full", [d2, ["--tw-translate-x", "-100%"], ["--tw-translate-y", "-100%"], ["translate", "var(--tw-translate-x) var(--tw-translate-y)"]]), e("translate-full", [d2, ["--tw-translate-x", "100%"], ["--tw-translate-y", "100%"], ["translate", "var(--tw-translate-x) var(--tw-translate-y)"]]), a("translate", ["--translate", "--spacing"], (i) => [d2(), l3("--tw-translate-x", i), l3("--tw-translate-y", i), l3("translate", "var(--tw-translate-x) var(--tw-translate-y)")], { supportsNegative: true, supportsFractions: true });
  for (let i of ["x", "y"]) e(`-translate-${i}-full`, [d2, [`--tw-translate-${i}`, "-100%"], ["translate", "var(--tw-translate-x) var(--tw-translate-y)"]]), e(`translate-${i}-full`, [d2, [`--tw-translate-${i}`, "100%"], ["translate", "var(--tw-translate-x) var(--tw-translate-y)"]]), a(`translate-${i}`, ["--translate", "--spacing"], (u2) => [d2(), l3(`--tw-translate-${i}`, u2), l3("translate", "var(--tw-translate-x) var(--tw-translate-y)")], { supportsNegative: true, supportsFractions: true });
  a("translate-z", ["--translate", "--spacing"], (i) => [d2(), l3("--tw-translate-z", i), l3("translate", "var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z)")], { supportsNegative: true }), e("-translate-z-px", [d2, ["--tw-translate-z", "-1px"], ["translate", "var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z)"]]), e("translate-z-px", [d2, ["--tw-translate-z", "1px"], ["translate", "var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z)"]]), e("translate-3d", [d2, ["translate", "var(--tw-translate-x) var(--tw-translate-y) var(--tw-translate-z)"]]);
  let f3 = () => _2([$2("--tw-scale-x", "1"), $2("--tw-scale-y", "1"), $2("--tw-scale-z", "1")]);
  e("scale-none", [["scale", "none"]]);
  function p3({ negative: i }) {
    return (u2) => {
      if (!u2.value || u2.modifier) return;
      let m;
      return u2.value.kind === "arbitrary" ? (m = u2.value.value, [l3("scale", m)]) : (m = t.resolve(u2.value.value, ["--scale"]), !m && p(u2.value.value) && (m = `${u2.value.value}%`), m ? (m = i ? `calc(${m} * -1)` : m, [f3(), l3("--tw-scale-x", m), l3("--tw-scale-y", m), l3("--tw-scale-z", m), l3("scale", "var(--tw-scale-x) var(--tw-scale-y)")]) : void 0);
    };
  }
  r.functional("-scale", p3({ negative: true })), r.functional("scale", p3({ negative: false })), n("scale", () => [{ supportsNegative: true, values: ["0", "50", "75", "90", "95", "100", "105", "110", "125", "150", "200"], valueThemeKeys: ["--scale"] }]);
  for (let i of ["x", "y", "z"]) o(`scale-${i}`, { supportsNegative: true, themeKeys: ["--scale"], handleBareValue: ({ value: u2 }) => p(u2) ? `${u2}%` : null, handle: (u2) => [f3(), l3(`--tw-scale-${i}`, u2), l3("scale", `var(--tw-scale-x) var(--tw-scale-y)${i === "z" ? " var(--tw-scale-z)" : ""}`)] }), n(`scale-${i}`, () => [{ supportsNegative: true, values: ["0", "50", "75", "90", "95", "100", "105", "110", "125", "150", "200"], valueThemeKeys: ["--scale"] }]);
  e("scale-3d", [f3, ["scale", "var(--tw-scale-x) var(--tw-scale-y) var(--tw-scale-z)"]]), e("rotate-none", [["rotate", "none"]]);
  function g3({ negative: i }) {
    return (u2) => {
      if (!u2.value || u2.modifier) return;
      let m;
      if (u2.value.kind === "arbitrary") {
        m = u2.value.value;
        let k2 = u2.value.dataType ?? pe(m, ["angle", "vector"]);
        if (k2 === "vector") return [l3("rotate", `${m} var(--tw-rotate)`)];
        if (k2 !== "angle") return [l3("rotate", m)];
      } else if (m = t.resolve(u2.value.value, ["--rotate"]), !m && p(u2.value.value) && (m = `${u2.value.value}deg`), !m) return;
      return [l3("rotate", i ? `calc(${m} * -1)` : m)];
    };
  }
  r.functional("-rotate", g3({ negative: true })), r.functional("rotate", g3({ negative: false })), n("rotate", () => [{ supportsNegative: true, values: ["0", "1", "2", "3", "6", "12", "45", "90", "180"], valueThemeKeys: ["--rotate"] }]);
  {
    let i = ["var(--tw-rotate-x)", "var(--tw-rotate-y)", "var(--tw-rotate-z)", "var(--tw-skew-x)", "var(--tw-skew-y)"].join(" "), u2 = () => _2([$2("--tw-rotate-x", "rotateX(0)"), $2("--tw-rotate-y", "rotateY(0)"), $2("--tw-rotate-z", "rotateZ(0)"), $2("--tw-skew-x", "skewX(0)"), $2("--tw-skew-y", "skewY(0)")]);
    for (let m of ["x", "y", "z"]) o(`rotate-${m}`, { supportsNegative: true, themeKeys: ["--rotate"], handleBareValue: ({ value: k2 }) => p(k2) ? `${k2}deg` : null, handle: (k2) => [u2(), l3(`--tw-rotate-${m}`, `rotate${m.toUpperCase()}(${k2})`), l3("transform", i)] }), n(`rotate-${m}`, () => [{ supportsNegative: true, values: ["0", "1", "2", "3", "6", "12", "45", "90", "180"], valueThemeKeys: ["--rotate"] }]);
    o("skew", { supportsNegative: true, themeKeys: ["--skew"], handleBareValue: ({ value: m }) => p(m) ? `${m}deg` : null, handle: (m) => [u2(), l3("--tw-skew-x", `skewX(${m})`), l3("--tw-skew-y", `skewY(${m})`), l3("transform", i)] }), o("skew-x", { supportsNegative: true, themeKeys: ["--skew"], handleBareValue: ({ value: m }) => p(m) ? `${m}deg` : null, handle: (m) => [u2(), l3("--tw-skew-x", `skewX(${m})`), l3("transform", i)] }), o("skew-y", { supportsNegative: true, themeKeys: ["--skew"], handleBareValue: ({ value: m }) => p(m) ? `${m}deg` : null, handle: (m) => [u2(), l3("--tw-skew-y", `skewY(${m})`), l3("transform", i)] }), n("skew", () => [{ supportsNegative: true, values: ["0", "1", "2", "3", "6", "12"], valueThemeKeys: ["--skew"] }]), n("skew-x", () => [{ supportsNegative: true, values: ["0", "1", "2", "3", "6", "12"], valueThemeKeys: ["--skew"] }]), n("skew-y", () => [{ supportsNegative: true, values: ["0", "1", "2", "3", "6", "12"], valueThemeKeys: ["--skew"] }]), r.functional("transform", (m) => {
      if (m.modifier) return;
      let k2 = null;
      if (m.value ? m.value.kind === "arbitrary" && (k2 = m.value.value) : k2 = i, k2 !== null) return [u2(), l3("transform", k2)];
    }), n("transform", () => [{ hasDefaultValue: true }]), e("transform-cpu", [["transform", i]]), e("transform-gpu", [["transform", `translateZ(0) ${i}`]]), e("transform-none", [["transform", "none"]]);
  }
  e("transform-flat", [["transform-style", "flat"]]), e("transform-3d", [["transform-style", "preserve-3d"]]), e("transform-content", [["transform-box", "content-box"]]), e("transform-border", [["transform-box", "border-box"]]), e("transform-fill", [["transform-box", "fill-box"]]), e("transform-stroke", [["transform-box", "stroke-box"]]), e("transform-view", [["transform-box", "view-box"]]), e("backface-visible", [["backface-visibility", "visible"]]), e("backface-hidden", [["backface-visibility", "hidden"]]);
  for (let i of ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out"]) e(`cursor-${i}`, [["cursor", i]]);
  o("cursor", { themeKeys: ["--cursor"], handle: (i) => [l3("cursor", i)] });
  for (let i of ["auto", "none", "manipulation"]) e(`touch-${i}`, [["touch-action", i]]);
  let h3 = () => _2([$2("--tw-pan-x"), $2("--tw-pan-y"), $2("--tw-pinch-zoom")]);
  for (let i of ["x", "left", "right"]) e(`touch-pan-${i}`, [h3, ["--tw-pan-x", `pan-${i}`], ["touch-action", "var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,)"]]);
  for (let i of ["y", "up", "down"]) e(`touch-pan-${i}`, [h3, ["--tw-pan-y", `pan-${i}`], ["touch-action", "var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,)"]]);
  e("touch-pinch-zoom", [h3, ["--tw-pinch-zoom", "pinch-zoom"], ["touch-action", "var(--tw-pan-x,) var(--tw-pan-y,) var(--tw-pinch-zoom,)"]]);
  for (let i of ["none", "text", "all", "auto"]) e(`select-${i}`, [["-webkit-user-select", i], ["user-select", i]]);
  e("resize-none", [["resize", "none"]]), e("resize-x", [["resize", "horizontal"]]), e("resize-y", [["resize", "vertical"]]), e("resize", [["resize", "both"]]), e("snap-none", [["scroll-snap-type", "none"]]);
  let y2 = () => _2([$2("--tw-scroll-snap-strictness", "proximity", "*")]);
  for (let i of ["x", "y", "both"]) e(`snap-${i}`, [y2, ["scroll-snap-type", `${i} var(--tw-scroll-snap-strictness)`]]);
  e("snap-mandatory", [y2, ["--tw-scroll-snap-strictness", "mandatory"]]), e("snap-proximity", [y2, ["--tw-scroll-snap-strictness", "proximity"]]), e("snap-align-none", [["scroll-snap-align", "none"]]), e("snap-start", [["scroll-snap-align", "start"]]), e("snap-end", [["scroll-snap-align", "end"]]), e("snap-center", [["scroll-snap-align", "center"]]), e("snap-normal", [["scroll-snap-stop", "normal"]]), e("snap-always", [["scroll-snap-stop", "always"]]);
  for (let [i, u2] of [["scroll-m", "scroll-margin"], ["scroll-mx", "scroll-margin-inline"], ["scroll-my", "scroll-margin-block"], ["scroll-ms", "scroll-margin-inline-start"], ["scroll-me", "scroll-margin-inline-end"], ["scroll-mt", "scroll-margin-top"], ["scroll-mr", "scroll-margin-right"], ["scroll-mb", "scroll-margin-bottom"], ["scroll-ml", "scroll-margin-left"]]) a(i, ["--scroll-margin", "--spacing"], (m) => [l3(u2, m)], { supportsNegative: true });
  for (let [i, u2] of [["scroll-p", "scroll-padding"], ["scroll-px", "scroll-padding-inline"], ["scroll-py", "scroll-padding-block"], ["scroll-ps", "scroll-padding-inline-start"], ["scroll-pe", "scroll-padding-inline-end"], ["scroll-pt", "scroll-padding-top"], ["scroll-pr", "scroll-padding-right"], ["scroll-pb", "scroll-padding-bottom"], ["scroll-pl", "scroll-padding-left"]]) a(i, ["--scroll-padding", "--spacing"], (m) => [l3(u2, m)]);
  e("list-inside", [["list-style-position", "inside"]]), e("list-outside", [["list-style-position", "outside"]]), e("list-none", [["list-style-type", "none"]]), e("list-disc", [["list-style-type", "disc"]]), e("list-decimal", [["list-style-type", "decimal"]]), o("list", { themeKeys: ["--list-style-type"], handle: (i) => [l3("list-style-type", i)] }), e("list-image-none", [["list-style-image", "none"]]), o("list-image", { themeKeys: ["--list-style-image"], handle: (i) => [l3("list-style-image", i)] }), e("appearance-none", [["appearance", "none"]]), e("appearance-auto", [["appearance", "auto"]]), e("scheme-normal", [["color-scheme", "normal"]]), e("scheme-dark", [["color-scheme", "dark"]]), e("scheme-light", [["color-scheme", "light"]]), e("scheme-light-dark", [["color-scheme", "light dark"]]), e("scheme-only-dark", [["color-scheme", "only dark"]]), e("scheme-only-light", [["color-scheme", "only light"]]), e("columns-auto", [["columns", "auto"]]), o("columns", { themeKeys: ["--columns", "--container"], handleBareValue: ({ value: i }) => p(i) ? i : null, handle: (i) => [l3("columns", i)] }), n("columns", () => [{ values: Array.from({ length: 12 }, (i, u2) => `${u2 + 1}`), valueThemeKeys: ["--columns", "--container"] }]);
  for (let i of ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"]) e(`break-before-${i}`, [["break-before", i]]);
  for (let i of ["auto", "avoid", "avoid-page", "avoid-column"]) e(`break-inside-${i}`, [["break-inside", i]]);
  for (let i of ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"]) e(`break-after-${i}`, [["break-after", i]]);
  e("grid-flow-row", [["grid-auto-flow", "row"]]), e("grid-flow-col", [["grid-auto-flow", "column"]]), e("grid-flow-dense", [["grid-auto-flow", "dense"]]), e("grid-flow-row-dense", [["grid-auto-flow", "row dense"]]), e("grid-flow-col-dense", [["grid-auto-flow", "column dense"]]), e("auto-cols-auto", [["grid-auto-columns", "auto"]]), e("auto-cols-min", [["grid-auto-columns", "min-content"]]), e("auto-cols-max", [["grid-auto-columns", "max-content"]]), e("auto-cols-fr", [["grid-auto-columns", "minmax(0, 1fr)"]]), o("auto-cols", { themeKeys: ["--grid-auto-columns"], handle: (i) => [l3("grid-auto-columns", i)] }), e("auto-rows-auto", [["grid-auto-rows", "auto"]]), e("auto-rows-min", [["grid-auto-rows", "min-content"]]), e("auto-rows-max", [["grid-auto-rows", "max-content"]]), e("auto-rows-fr", [["grid-auto-rows", "minmax(0, 1fr)"]]), o("auto-rows", { themeKeys: ["--grid-auto-rows"], handle: (i) => [l3("grid-auto-rows", i)] }), e("grid-cols-none", [["grid-template-columns", "none"]]), e("grid-cols-subgrid", [["grid-template-columns", "subgrid"]]), o("grid-cols", { themeKeys: ["--grid-template-columns"], handleBareValue: ({ value: i }) => p(i) ? `repeat(${i}, minmax(0, 1fr))` : null, handle: (i) => [l3("grid-template-columns", i)] }), e("grid-rows-none", [["grid-template-rows", "none"]]), e("grid-rows-subgrid", [["grid-template-rows", "subgrid"]]), o("grid-rows", { themeKeys: ["--grid-template-rows"], handleBareValue: ({ value: i }) => p(i) ? `repeat(${i}, minmax(0, 1fr))` : null, handle: (i) => [l3("grid-template-rows", i)] }), n("grid-cols", () => [{ values: Array.from({ length: 12 }, (i, u2) => `${u2 + 1}`), valueThemeKeys: ["--grid-template-columns"] }]), n("grid-rows", () => [{ values: Array.from({ length: 12 }, (i, u2) => `${u2 + 1}`), valueThemeKeys: ["--grid-template-rows"] }]), e("flex-row", [["flex-direction", "row"]]), e("flex-row-reverse", [["flex-direction", "row-reverse"]]), e("flex-col", [["flex-direction", "column"]]), e("flex-col-reverse", [["flex-direction", "column-reverse"]]), e("flex-wrap", [["flex-wrap", "wrap"]]), e("flex-nowrap", [["flex-wrap", "nowrap"]]), e("flex-wrap-reverse", [["flex-wrap", "wrap-reverse"]]), e("place-content-center", [["place-content", "center"]]), e("place-content-start", [["place-content", "start"]]), e("place-content-end", [["place-content", "end"]]), e("place-content-between", [["place-content", "space-between"]]), e("place-content-around", [["place-content", "space-around"]]), e("place-content-evenly", [["place-content", "space-evenly"]]), e("place-content-baseline", [["place-content", "baseline"]]), e("place-content-stretch", [["place-content", "stretch"]]), e("place-items-center", [["place-items", "center"]]), e("place-items-start", [["place-items", "start"]]), e("place-items-end", [["place-items", "end"]]), e("place-items-baseline", [["place-items", "baseline"]]), e("place-items-stretch", [["place-items", "stretch"]]), e("content-normal", [["align-content", "normal"]]), e("content-center", [["align-content", "center"]]), e("content-start", [["align-content", "flex-start"]]), e("content-end", [["align-content", "flex-end"]]), e("content-between", [["align-content", "space-between"]]), e("content-around", [["align-content", "space-around"]]), e("content-evenly", [["align-content", "space-evenly"]]), e("content-baseline", [["align-content", "baseline"]]), e("content-stretch", [["align-content", "stretch"]]), e("items-center", [["align-items", "center"]]), e("items-start", [["align-items", "flex-start"]]), e("items-end", [["align-items", "flex-end"]]), e("items-baseline", [["align-items", "baseline"]]), e("items-stretch", [["align-items", "stretch"]]), e("justify-normal", [["justify-content", "normal"]]), e("justify-center", [["justify-content", "center"]]), e("justify-start", [["justify-content", "flex-start"]]), e("justify-end", [["justify-content", "flex-end"]]), e("justify-between", [["justify-content", "space-between"]]), e("justify-around", [["justify-content", "space-around"]]), e("justify-evenly", [["justify-content", "space-evenly"]]), e("justify-baseline", [["justify-content", "baseline"]]), e("justify-stretch", [["justify-content", "stretch"]]), e("justify-items-normal", [["justify-items", "normal"]]), e("justify-items-center", [["justify-items", "center"]]), e("justify-items-start", [["justify-items", "start"]]), e("justify-items-end", [["justify-items", "end"]]), e("justify-items-stretch", [["justify-items", "stretch"]]), a("gap", ["--gap", "--spacing"], (i) => [l3("gap", i)]), a("gap-x", ["--gap", "--spacing"], (i) => [l3("column-gap", i)]), a("gap-y", ["--gap", "--spacing"], (i) => [l3("row-gap", i)]), a("space-x", ["--space", "--spacing"], (i) => [_2([$2("--tw-space-x-reverse", "0")]), F2(":where(& > :not(:last-child))", [l3("--tw-sort", "row-gap"), l3("--tw-space-x-reverse", "0"), l3("margin-inline-start", `calc(${i} * var(--tw-space-x-reverse))`), l3("margin-inline-end", `calc(${i} * calc(1 - var(--tw-space-x-reverse)))`)])], { supportsNegative: true }), a("space-y", ["--space", "--spacing"], (i) => [_2([$2("--tw-space-y-reverse", "0")]), F2(":where(& > :not(:last-child))", [l3("--tw-sort", "column-gap"), l3("--tw-space-y-reverse", "0"), l3("margin-block-start", `calc(${i} * var(--tw-space-y-reverse))`), l3("margin-block-end", `calc(${i} * calc(1 - var(--tw-space-y-reverse)))`)])], { supportsNegative: true }), e("space-x-reverse", [() => _2([$2("--tw-space-x-reverse", "0")]), () => F2(":where(& > :not(:last-child))", [l3("--tw-sort", "row-gap"), l3("--tw-space-x-reverse", "1")])]), e("space-y-reverse", [() => _2([$2("--tw-space-y-reverse", "0")]), () => F2(":where(& > :not(:last-child))", [l3("--tw-sort", "column-gap"), l3("--tw-space-y-reverse", "1")])]), e("accent-auto", [["accent-color", "auto"]]), s2("accent", { themeKeys: ["--accent-color", "--color"], handle: (i) => [l3("accent-color", i)] }), s2("caret", { themeKeys: ["--caret-color", "--color"], handle: (i) => [l3("caret-color", i)] }), s2("divide", { themeKeys: ["--divide-color", "--color"], handle: (i) => [F2(":where(& > :not(:last-child))", [l3("--tw-sort", "divide-color"), l3("border-color", i)])] }), e("place-self-auto", [["place-self", "auto"]]), e("place-self-start", [["place-self", "start"]]), e("place-self-end", [["place-self", "end"]]), e("place-self-center", [["place-self", "center"]]), e("place-self-stretch", [["place-self", "stretch"]]), e("self-auto", [["align-self", "auto"]]), e("self-start", [["align-self", "flex-start"]]), e("self-end", [["align-self", "flex-end"]]), e("self-center", [["align-self", "center"]]), e("self-stretch", [["align-self", "stretch"]]), e("self-baseline", [["align-self", "baseline"]]), e("justify-self-auto", [["justify-self", "auto"]]), e("justify-self-start", [["justify-self", "flex-start"]]), e("justify-self-end", [["justify-self", "flex-end"]]), e("justify-self-center", [["justify-self", "center"]]), e("justify-self-stretch", [["justify-self", "stretch"]]);
  for (let i of ["auto", "hidden", "clip", "visible", "scroll"]) e(`overflow-${i}`, [["overflow", i]]), e(`overflow-x-${i}`, [["overflow-x", i]]), e(`overflow-y-${i}`, [["overflow-y", i]]);
  for (let i of ["auto", "contain", "none"]) e(`overscroll-${i}`, [["overscroll-behavior", i]]), e(`overscroll-x-${i}`, [["overscroll-behavior-x", i]]), e(`overscroll-y-${i}`, [["overscroll-behavior-y", i]]);
  e("scroll-auto", [["scroll-behavior", "auto"]]), e("scroll-smooth", [["scroll-behavior", "smooth"]]), e("truncate", [["overflow", "hidden"], ["text-overflow", "ellipsis"], ["white-space", "nowrap"]]), e("text-ellipsis", [["text-overflow", "ellipsis"]]), e("text-clip", [["text-overflow", "clip"]]), e("hyphens-none", [["-webkit-hyphens", "none"], ["hyphens", "none"]]), e("hyphens-manual", [["-webkit-hyphens", "manual"], ["hyphens", "manual"]]), e("hyphens-auto", [["-webkit-hyphens", "auto"], ["hyphens", "auto"]]), e("whitespace-normal", [["white-space", "normal"]]), e("whitespace-nowrap", [["white-space", "nowrap"]]), e("whitespace-pre", [["white-space", "pre"]]), e("whitespace-pre-line", [["white-space", "pre-line"]]), e("whitespace-pre-wrap", [["white-space", "pre-wrap"]]), e("whitespace-break-spaces", [["white-space", "break-spaces"]]), e("text-wrap", [["text-wrap", "wrap"]]), e("text-nowrap", [["text-wrap", "nowrap"]]), e("text-balance", [["text-wrap", "balance"]]), e("text-pretty", [["text-wrap", "pretty"]]), e("break-normal", [["overflow-wrap", "normal"], ["word-break", "normal"]]), e("break-words", [["overflow-wrap", "break-word"]]), e("break-all", [["word-break", "break-all"]]), e("break-keep", [["word-break", "keep-all"]]);
  for (let [i, u2] of [["rounded", ["border-radius"]], ["rounded-s", ["border-start-start-radius", "border-end-start-radius"]], ["rounded-e", ["border-start-end-radius", "border-end-end-radius"]], ["rounded-t", ["border-top-left-radius", "border-top-right-radius"]], ["rounded-r", ["border-top-right-radius", "border-bottom-right-radius"]], ["rounded-b", ["border-bottom-right-radius", "border-bottom-left-radius"]], ["rounded-l", ["border-top-left-radius", "border-bottom-left-radius"]], ["rounded-ss", ["border-start-start-radius"]], ["rounded-se", ["border-start-end-radius"]], ["rounded-ee", ["border-end-end-radius"]], ["rounded-es", ["border-end-start-radius"]], ["rounded-tl", ["border-top-left-radius"]], ["rounded-tr", ["border-top-right-radius"]], ["rounded-br", ["border-bottom-right-radius"]], ["rounded-bl", ["border-bottom-left-radius"]]]) e(`${i}-none`, u2.map((m) => [m, "0"])), e(`${i}-full`, u2.map((m) => [m, "calc(infinity * 1px)"])), o(i, { themeKeys: ["--radius"], handle: (m) => u2.map((k2) => l3(k2, m)) });
  e("border-solid", [["--tw-border-style", "solid"], ["border-style", "solid"]]), e("border-dashed", [["--tw-border-style", "dashed"], ["border-style", "dashed"]]), e("border-dotted", [["--tw-border-style", "dotted"], ["border-style", "dotted"]]), e("border-double", [["--tw-border-style", "double"], ["border-style", "double"]]), e("border-hidden", [["--tw-border-style", "hidden"], ["border-style", "hidden"]]), e("border-none", [["--tw-border-style", "none"], ["border-style", "none"]]);
  {
    let u2 = function(m, k2) {
      r.functional(m, (b2) => {
        if (!b2.value) {
          if (b2.modifier) return;
          let N2 = t.get(["--default-border-width"]) ?? "1px", K2 = k2.width(N2);
          return K2 ? [i(), ...K2] : void 0;
        }
        if (b2.value.kind === "arbitrary") {
          let N2 = b2.value.value;
          switch (b2.value.dataType ?? pe(N2, ["color", "line-width", "length"])) {
            case "line-width":
            case "length": {
              if (b2.modifier) return;
              let C2 = k2.width(N2);
              return C2 ? [i(), ...C2] : void 0;
            }
            default:
              return N2 = W2(N2, b2.modifier, t), N2 === null ? void 0 : k2.color(N2);
          }
        }
        {
          let N2 = q2(b2, t, ["--border-color", "--color"]);
          if (N2) return k2.color(N2);
        }
        {
          if (b2.modifier) return;
          let N2 = t.resolve(b2.value.value, ["--border-width"]);
          if (N2) {
            let K2 = k2.width(N2);
            return K2 ? [i(), ...K2] : void 0;
          }
          if (p(b2.value.value)) {
            let K2 = k2.width(`${b2.value.value}px`);
            return K2 ? [i(), ...K2] : void 0;
          }
        }
      }), n(m, () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--border-color", "--color"], modifiers: Array.from({ length: 21 }, (b2, N2) => `${N2 * 5}`), hasDefaultValue: true }, { values: ["0", "2", "4", "8"], valueThemeKeys: ["--border-width"] }]);
    };
    var x = u2;
    let i = () => _2([$2("--tw-border-style", "solid")]);
    u2("border", { width: (m) => [l3("border-style", "var(--tw-border-style)"), l3("border-width", m)], color: (m) => [l3("border-color", m)] }), u2("border-x", { width: (m) => [l3("border-inline-style", "var(--tw-border-style)"), l3("border-inline-width", m)], color: (m) => [l3("border-inline-color", m)] }), u2("border-y", { width: (m) => [l3("border-block-style", "var(--tw-border-style)"), l3("border-block-width", m)], color: (m) => [l3("border-block-color", m)] }), u2("border-s", { width: (m) => [l3("border-inline-start-style", "var(--tw-border-style)"), l3("border-inline-start-width", m)], color: (m) => [l3("border-inline-start-color", m)] }), u2("border-e", { width: (m) => [l3("border-inline-end-style", "var(--tw-border-style)"), l3("border-inline-end-width", m)], color: (m) => [l3("border-inline-end-color", m)] }), u2("border-t", { width: (m) => [l3("border-top-style", "var(--tw-border-style)"), l3("border-top-width", m)], color: (m) => [l3("border-top-color", m)] }), u2("border-r", { width: (m) => [l3("border-right-style", "var(--tw-border-style)"), l3("border-right-width", m)], color: (m) => [l3("border-right-color", m)] }), u2("border-b", { width: (m) => [l3("border-bottom-style", "var(--tw-border-style)"), l3("border-bottom-width", m)], color: (m) => [l3("border-bottom-color", m)] }), u2("border-l", { width: (m) => [l3("border-left-style", "var(--tw-border-style)"), l3("border-left-width", m)], color: (m) => [l3("border-left-color", m)] }), o("divide-x", { defaultValue: t.get(["--default-border-width"]) ?? "1px", themeKeys: ["--divide-width", "--border-width"], handleBareValue: ({ value: m }) => p(m) ? `${m}px` : null, handle: (m) => [_2([$2("--tw-divide-x-reverse", "0")]), F2(":where(& > :not(:last-child))", [l3("--tw-sort", "divide-x-width"), i(), l3("--tw-divide-x-reverse", "0"), l3("border-inline-style", "var(--tw-border-style)"), l3("border-inline-start-width", `calc(${m} * var(--tw-divide-x-reverse))`), l3("border-inline-end-width", `calc(${m} * calc(1 - var(--tw-divide-x-reverse)))`)])] }), o("divide-y", { defaultValue: t.get(["--default-border-width"]) ?? "1px", themeKeys: ["--divide-width", "--border-width"], handleBareValue: ({ value: m }) => p(m) ? `${m}px` : null, handle: (m) => [_2([$2("--tw-divide-y-reverse", "0")]), F2(":where(& > :not(:last-child))", [l3("--tw-sort", "divide-y-width"), i(), l3("--tw-divide-y-reverse", "0"), l3("border-bottom-style", "var(--tw-border-style)"), l3("border-top-style", "var(--tw-border-style)"), l3("border-top-width", `calc(${m} * var(--tw-divide-y-reverse))`), l3("border-bottom-width", `calc(${m} * calc(1 - var(--tw-divide-y-reverse)))`)])] }), n("divide-x", () => [{ values: ["0", "2", "4", "8"], valueThemeKeys: ["--divide-width", "--border-width"], hasDefaultValue: true }]), n("divide-y", () => [{ values: ["0", "2", "4", "8"], valueThemeKeys: ["--divide-width", "--border-width"], hasDefaultValue: true }]), e("divide-x-reverse", [() => _2([$2("--tw-divide-x-reverse", "0")]), () => F2(":where(& > :not(:last-child))", [l3("--tw-divide-x-reverse", "1")])]), e("divide-y-reverse", [() => _2([$2("--tw-divide-y-reverse", "0")]), () => F2(":where(& > :not(:last-child))", [l3("--tw-divide-y-reverse", "1")])]);
    for (let m of ["solid", "dashed", "dotted", "double", "none"]) e(`divide-${m}`, [() => F2(":where(& > :not(:last-child))", [l3("--tw-sort", "divide-style"), l3("--tw-border-style", m), l3("border-style", m)])]);
  }
  e("bg-auto", [["background-size", "auto"]]), e("bg-cover", [["background-size", "cover"]]), e("bg-contain", [["background-size", "contain"]]), e("bg-fixed", [["background-attachment", "fixed"]]), e("bg-local", [["background-attachment", "local"]]), e("bg-scroll", [["background-attachment", "scroll"]]), e("bg-center", [["background-position", "center"]]), e("bg-top", [["background-position", "top"]]), e("bg-right-top", [["background-position", "right top"]]), e("bg-right", [["background-position", "right"]]), e("bg-right-bottom", [["background-position", "right bottom"]]), e("bg-bottom", [["background-position", "bottom"]]), e("bg-left-bottom", [["background-position", "left bottom"]]), e("bg-left", [["background-position", "left"]]), e("bg-left-top", [["background-position", "left top"]]), e("bg-repeat", [["background-repeat", "repeat"]]), e("bg-no-repeat", [["background-repeat", "no-repeat"]]), e("bg-repeat-x", [["background-repeat", "repeat-x"]]), e("bg-repeat-y", [["background-repeat", "repeat-y"]]), e("bg-repeat-round", [["background-repeat", "round"]]), e("bg-repeat-space", [["background-repeat", "space"]]), e("bg-none", [["background-image", "none"]]);
  {
    let m = function(N2) {
      let K2 = "in oklab";
      if ((N2 == null ? void 0 : N2.kind) === "named") switch (N2.value) {
        case "longer":
        case "shorter":
        case "increasing":
        case "decreasing":
          K2 = `in oklch ${N2.value} hue`;
          break;
        default:
          K2 = `in ${N2.value}`;
      }
      else (N2 == null ? void 0 : N2.kind) === "arbitrary" && (K2 = N2.value);
      return K2;
    }, k2 = function({ negative: N2 }) {
      return (K2) => {
        if (!K2.value) return;
        if (K2.value.kind === "arbitrary") {
          if (K2.modifier) return;
          let U2 = K2.value.value;
          switch (K2.value.dataType ?? pe(U2, ["angle"])) {
            case "angle":
              return U2 = N2 ? `calc(${U2} * -1)` : `${U2}`, [l3("--tw-gradient-position", `${U2},`), l3("background-image", `linear-gradient(var(--tw-gradient-stops,${U2}))`)];
            default:
              return N2 ? void 0 : [l3("--tw-gradient-position", `${U2},`), l3("background-image", `linear-gradient(var(--tw-gradient-stops,${U2}))`)];
          }
        }
        let C2 = K2.value.value;
        if (!N2 && u2.has(C2)) C2 = u2.get(C2);
        else if (p(C2)) C2 = N2 ? `calc(${C2}deg * -1)` : `${C2}deg`;
        else return;
        let A2 = m(K2.modifier);
        return [l3("--tw-gradient-position", `${C2} ${A2},`), l3("background-image", "linear-gradient(var(--tw-gradient-stops))")];
      };
    }, b2 = function({ negative: N2 }) {
      return (K2) => {
        var _a2;
        if (((_a2 = K2.value) == null ? void 0 : _a2.kind) === "arbitrary") {
          if (K2.modifier) return;
          let U2 = K2.value.value;
          return [l3("--tw-gradient-position", `${U2},`), l3("background-image", `conic-gradient(var(--tw-gradient-stops,${U2}))`)];
        }
        let C2 = m(K2.modifier);
        if (!K2.value) return [l3("--tw-gradient-position", `${C2},`), l3("background-image", "conic-gradient(var(--tw-gradient-stops))")];
        let A2 = K2.value.value;
        if (p(A2)) return A2 = N2 ? `calc(${A2} * -1)` : `${A2}deg`, [l3("--tw-gradient-position", `from ${A2} ${C2},`), l3("background-image", "conic-gradient(var(--tw-gradient-stops))")];
      };
    };
    var V2 = m, S2 = k2, R2 = b2;
    let i = ["oklab", "oklch", "srgb", "hsl", "longer", "shorter", "increasing", "decreasing"], u2 = /* @__PURE__ */ new Map([["to-t", "to top"], ["to-tr", "to top right"], ["to-r", "to right"], ["to-br", "to bottom right"], ["to-b", "to bottom"], ["to-bl", "to bottom left"], ["to-l", "to left"], ["to-tl", "to top left"]]);
    r.functional("-bg-linear", k2({ negative: true })), r.functional("bg-linear", k2({ negative: false })), n("bg-linear", () => [{ values: [...u2.keys()], modifiers: i }, { values: ["0", "30", "60", "90", "120", "150", "180", "210", "240", "270", "300", "330"], supportsNegative: true, modifiers: i }]), r.functional("-bg-conic", b2({ negative: true })), r.functional("bg-conic", b2({ negative: false })), n("bg-conic", () => [{ hasDefaultValue: true, modifiers: i }, { values: ["0", "30", "60", "90", "120", "150", "180", "210", "240", "270", "300", "330"], supportsNegative: true, modifiers: i }]), r.functional("bg-radial", (N2) => {
      if (!N2.value) {
        let K2 = m(N2.modifier);
        return [l3("--tw-gradient-position", `${K2},`), l3("background-image", "radial-gradient(var(--tw-gradient-stops))")];
      }
      if (N2.value.kind === "arbitrary") {
        if (N2.modifier) return;
        let K2 = N2.value.value;
        return [l3("--tw-gradient-position", `${K2},`), l3("background-image", `radial-gradient(var(--tw-gradient-stops,${K2}))`)];
      }
    }), n("bg-radial", () => [{ hasDefaultValue: true, modifiers: i }]);
  }
  r.functional("bg", (i) => {
    if (i.value) {
      if (i.value.kind === "arbitrary") {
        let u2 = i.value.value;
        switch (i.value.dataType ?? pe(u2, ["image", "color", "percentage", "position", "bg-size", "length", "url"])) {
          case "percentage":
          case "position":
            return i.modifier ? void 0 : [l3("background-position", u2)];
          case "bg-size":
          case "length":
          case "size":
            return i.modifier ? void 0 : [l3("background-size", u2)];
          case "image":
          case "url":
            return i.modifier ? void 0 : [l3("background-image", u2)];
          default:
            return u2 = W2(u2, i.modifier, t), u2 === null ? void 0 : [l3("background-color", u2)];
        }
      }
      {
        let u2 = q2(i, t, ["--background-color", "--color"]);
        if (u2) return [l3("background-color", u2)];
      }
      {
        if (i.modifier) return;
        let u2 = t.resolve(i.value.value, ["--background-image"]);
        if (u2) return [l3("background-image", u2)];
      }
    }
  }), n("bg", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--background-color", "--color"], modifiers: Array.from({ length: 21 }, (i, u2) => `${u2 * 5}`) }, { values: [], valueThemeKeys: ["--background-image"] }]);
  let w2 = () => _2([$2("--tw-gradient-position"), $2("--tw-gradient-from", "#0000", "<color>"), $2("--tw-gradient-via", "#0000", "<color>"), $2("--tw-gradient-to", "#0000", "<color>"), $2("--tw-gradient-stops"), $2("--tw-gradient-via-stops"), $2("--tw-gradient-from-position", "0%", "<length-percentage>"), $2("--tw-gradient-via-position", "50%", "<length-percentage>"), $2("--tw-gradient-to-position", "100%", "<length-percentage>")]);
  function v(i, u2) {
    r.functional(i, (m) => {
      if (m.value) {
        if (m.value.kind === "arbitrary") {
          let k2 = m.value.value;
          switch (m.value.dataType ?? pe(k2, ["color", "length", "percentage"])) {
            case "length":
            case "percentage":
              return m.modifier ? void 0 : u2.position(k2);
            default:
              return k2 = W2(k2, m.modifier, t), k2 === null ? void 0 : u2.color(k2);
          }
        }
        {
          let k2 = q2(m, t, ["--background-color", "--color"]);
          if (k2) return u2.color(k2);
        }
        {
          if (m.modifier) return;
          let k2 = t.resolve(m.value.value, ["--gradient-color-stop-positions"]);
          if (k2) return u2.position(k2);
          if (m.value.value[m.value.value.length - 1] === "%" && p(m.value.value.slice(0, -1))) return u2.position(m.value.value);
        }
      }
    }), n(i, () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--background-color", "--color"], modifiers: Array.from({ length: 21 }, (m, k2) => `${k2 * 5}`) }, { values: Array.from({ length: 21 }, (m, k2) => `${k2 * 5}%`), valueThemeKeys: ["--gradient-color-stop-positions"] }]);
  }
  v("from", { color: (i) => [w2(), l3("--tw-sort", "--tw-gradient-from"), l3("--tw-gradient-from", i), l3("--tw-gradient-stops", "var(--tw-gradient-via-stops, var(--tw-gradient-position,) var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position))")], position: (i) => [w2(), l3("--tw-gradient-from-position", i)] }), e("via-none", [["--tw-gradient-via-stops", "initial"]]), v("via", { color: (i) => [w2(), l3("--tw-sort", "--tw-gradient-via"), l3("--tw-gradient-via", i), l3("--tw-gradient-via-stops", "var(--tw-gradient-position,) var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position)"), l3("--tw-gradient-stops", "var(--tw-gradient-via-stops)")], position: (i) => [w2(), l3("--tw-gradient-via-position", i)] }), v("to", { color: (i) => [w2(), l3("--tw-sort", "--tw-gradient-to"), l3("--tw-gradient-to", i), l3("--tw-gradient-stops", "var(--tw-gradient-via-stops, var(--tw-gradient-position,) var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position))")], position: (i) => [w2(), l3("--tw-gradient-to-position", i)] }), e("box-decoration-slice", [["-webkit-box-decoration-break", "slice"], ["box-decoration-break", "slice"]]), e("box-decoration-clone", [["-webkit-box-decoration-break", "clone"], ["box-decoration-break", "clone"]]), e("bg-clip-text", [["background-clip", "text"]]), e("bg-clip-border", [["background-clip", "border-box"]]), e("bg-clip-padding", [["background-clip", "padding-box"]]), e("bg-clip-content", [["background-clip", "content-box"]]), e("bg-origin-border", [["background-origin", "border-box"]]), e("bg-origin-padding", [["background-origin", "padding-box"]]), e("bg-origin-content", [["background-origin", "content-box"]]);
  for (let i of ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity"]) e(`bg-blend-${i}`, [["background-blend-mode", i]]), e(`mix-blend-${i}`, [["mix-blend-mode", i]]);
  e("mix-blend-plus-darker", [["mix-blend-mode", "plus-darker"]]), e("mix-blend-plus-lighter", [["mix-blend-mode", "plus-lighter"]]), e("fill-none", [["fill", "none"]]), r.functional("fill", (i) => {
    if (!i.value) return;
    if (i.value.kind === "arbitrary") {
      let m = W2(i.value.value, i.modifier, t);
      return m === null ? void 0 : [l3("fill", m)];
    }
    let u2 = q2(i, t, ["--fill", "--color"]);
    if (u2) return [l3("fill", u2)];
  }), n("fill", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--fill", "--color"], modifiers: Array.from({ length: 21 }, (i, u2) => `${u2 * 5}`) }]), e("stroke-none", [["stroke", "none"]]), r.functional("stroke", (i) => {
    if (i.value) {
      if (i.value.kind === "arbitrary") {
        let u2 = i.value.value;
        switch (i.value.dataType ?? pe(u2, ["color", "number", "length", "percentage"])) {
          case "number":
          case "length":
          case "percentage":
            return i.modifier ? void 0 : [l3("stroke-width", u2)];
          default:
            return u2 = W2(i.value.value, i.modifier, t), u2 === null ? void 0 : [l3("stroke", u2)];
        }
      }
      {
        let u2 = q2(i, t, ["--stroke", "--color"]);
        if (u2) return [l3("stroke", u2)];
      }
      {
        let u2 = t.resolve(i.value.value, ["--stroke-width"]);
        if (u2) return [l3("stroke-width", u2)];
        if (p(i.value.value)) return [l3("stroke-width", i.value.value)];
      }
    }
  }), n("stroke", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--stroke", "--color"], modifiers: Array.from({ length: 21 }, (i, u2) => `${u2 * 5}`) }, { values: ["0", "1", "2", "3"], valueThemeKeys: ["--stroke-width"] }]), e("object-contain", [["object-fit", "contain"]]), e("object-cover", [["object-fit", "cover"]]), e("object-fill", [["object-fit", "fill"]]), e("object-none", [["object-fit", "none"]]), e("object-scale-down", [["object-fit", "scale-down"]]), e("object-bottom", [["object-position", "bottom"]]), e("object-center", [["object-position", "center"]]), e("object-left", [["object-position", "left"]]), e("object-left-bottom", [["object-position", "left bottom"]]), e("object-left-top", [["object-position", "left top"]]), e("object-right", [["object-position", "right"]]), e("object-right-bottom", [["object-position", "right bottom"]]), e("object-right-top", [["object-position", "right top"]]), e("object-top", [["object-position", "top"]]), o("object", { themeKeys: ["--object-position"], handle: (i) => [l3("object-position", i)] });
  for (let [i, u2] of [["p", "padding"], ["px", "padding-inline"], ["py", "padding-block"], ["ps", "padding-inline-start"], ["pe", "padding-inline-end"], ["pt", "padding-top"], ["pr", "padding-right"], ["pb", "padding-bottom"], ["pl", "padding-left"]]) a(i, ["--padding", "--spacing"], (m) => [l3(u2, m)]);
  e("text-left", [["text-align", "left"]]), e("text-center", [["text-align", "center"]]), e("text-right", [["text-align", "right"]]), e("text-justify", [["text-align", "justify"]]), e("text-start", [["text-align", "start"]]), e("text-end", [["text-align", "end"]]), a("indent", ["--text-indent", "--spacing"], (i) => [l3("text-indent", i)], { supportsNegative: true }), e("align-baseline", [["vertical-align", "baseline"]]), e("align-top", [["vertical-align", "top"]]), e("align-middle", [["vertical-align", "middle"]]), e("align-bottom", [["vertical-align", "bottom"]]), e("align-text-top", [["vertical-align", "text-top"]]), e("align-text-bottom", [["vertical-align", "text-bottom"]]), e("align-sub", [["vertical-align", "sub"]]), e("align-super", [["vertical-align", "super"]]), o("align", { themeKeys: [], handle: (i) => [l3("vertical-align", i)] }), r.functional("font", (i) => {
    if (!(!i.value || i.modifier)) {
      if (i.value.kind === "arbitrary") {
        let u2 = i.value.value;
        switch (i.value.dataType ?? pe(u2, ["number", "generic-name", "family-name"])) {
          case "generic-name":
          case "family-name":
            return [l3("font-family", u2)];
          default:
            return [_2([$2("--tw-font-weight")]), l3("--tw-font-weight", u2), l3("font-weight", u2)];
        }
      }
      {
        let u2 = t.resolveWith(i.value.value, ["--font"], ["--font-feature-settings", "--font-variation-settings"]);
        if (u2) {
          let [m, k2 = {}] = u2;
          return [l3("font-family", m), l3("font-feature-settings", k2["--font-feature-settings"]), l3("font-variation-settings", k2["--font-variation-settings"])];
        }
      }
      {
        let u2 = t.resolve(i.value.value, ["--font-weight"]);
        if (u2) return [_2([$2("--tw-font-weight")]), l3("--tw-font-weight", u2), l3("font-weight", u2)];
      }
    }
  }), n("font", () => [{ values: [], valueThemeKeys: ["--font"] }, { values: ["thin", "extralight", "light", "normal", "medium", "semibold", "bold", "extrabold", "black"], valueThemeKeys: ["--font-weight"] }]), e("uppercase", [["text-transform", "uppercase"]]), e("lowercase", [["text-transform", "lowercase"]]), e("capitalize", [["text-transform", "capitalize"]]), e("normal-case", [["text-transform", "none"]]), e("italic", [["font-style", "italic"]]), e("not-italic", [["font-style", "normal"]]), e("underline", [["text-decoration-line", "underline"]]), e("overline", [["text-decoration-line", "overline"]]), e("line-through", [["text-decoration-line", "line-through"]]), e("no-underline", [["text-decoration-line", "none"]]), e("font-stretch-normal", [["font-stretch", "normal"]]), e("font-stretch-ultra-condensed", [["font-stretch", "ultra-condensed"]]), e("font-stretch-extra-condensed", [["font-stretch", "extra-condensed"]]), e("font-stretch-condensed", [["font-stretch", "condensed"]]), e("font-stretch-semi-condensed", [["font-stretch", "semi-condensed"]]), e("font-stretch-semi-expanded", [["font-stretch", "semi-expanded"]]), e("font-stretch-expanded", [["font-stretch", "expanded"]]), e("font-stretch-extra-expanded", [["font-stretch", "extra-expanded"]]), e("font-stretch-ultra-expanded", [["font-stretch", "ultra-expanded"]]), o("font-stretch", { handleBareValue: ({ value: i }) => {
    if (!i.endsWith("%")) return null;
    let u2 = Number(i.slice(0, -1));
    return !p(u2) || Number.isNaN(u2) || u2 < 50 || u2 > 200 ? null : i;
  }, handle: (i) => [l3("font-stretch", i)] }), n("font-stretch", () => [{ values: ["50%", "75%", "90%", "95%", "100%", "105%", "110%", "125%", "150%", "200%"] }]), s2("placeholder", { themeKeys: ["--background-color", "--color"], handle: (i) => [F2("&::placeholder", [l3("--tw-sort", "placeholder-color"), l3("color", i)])] }), e("decoration-solid", [["text-decoration-style", "solid"]]), e("decoration-double", [["text-decoration-style", "double"]]), e("decoration-dotted", [["text-decoration-style", "dotted"]]), e("decoration-dashed", [["text-decoration-style", "dashed"]]), e("decoration-wavy", [["text-decoration-style", "wavy"]]), e("decoration-auto", [["text-decoration-thickness", "auto"]]), e("decoration-from-font", [["text-decoration-thickness", "from-font"]]), r.functional("decoration", (i) => {
    if (i.value) {
      if (i.value.kind === "arbitrary") {
        let u2 = i.value.value;
        switch (i.value.dataType ?? pe(u2, ["color", "length", "percentage"])) {
          case "length":
          case "percentage":
            return i.modifier ? void 0 : [l3("text-decoration-thickness", u2)];
          default:
            return u2 = W2(u2, i.modifier, t), u2 === null ? void 0 : [l3("text-decoration-color", u2)];
        }
      }
      {
        let u2 = t.resolve(i.value.value, ["--text-decoration-thickness"]);
        if (u2) return i.modifier ? void 0 : [l3("text-decoration-thickness", u2)];
        if (p(i.value.value)) return i.modifier ? void 0 : [l3("text-decoration-thickness", `${i.value.value}px`)];
      }
      {
        let u2 = q2(i, t, ["--text-decoration-color", "--color"]);
        if (u2) return [l3("text-decoration-color", u2)];
      }
    }
  }), n("decoration", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--text-decoration-color", "--color"], modifiers: Array.from({ length: 21 }, (i, u2) => `${u2 * 5}`) }, { values: ["0", "1", "2"], valueThemeKeys: ["--text-decoration-thickness"] }]), e("animate-none", [["animation", "none"]]), o("animate", { themeKeys: ["--animate"], handle: (i) => [l3("animation", i)] });
  {
    let i = ["var(--tw-blur,)", "var(--tw-brightness,)", "var(--tw-contrast,)", "var(--tw-grayscale,)", "var(--tw-hue-rotate,)", "var(--tw-invert,)", "var(--tw-saturate,)", "var(--tw-sepia,)", "var(--tw-drop-shadow,)"].join(" "), u2 = ["var(--tw-backdrop-blur,)", "var(--tw-backdrop-brightness,)", "var(--tw-backdrop-contrast,)", "var(--tw-backdrop-grayscale,)", "var(--tw-backdrop-hue-rotate,)", "var(--tw-backdrop-invert,)", "var(--tw-backdrop-opacity,)", "var(--tw-backdrop-saturate,)", "var(--tw-backdrop-sepia,)"].join(" "), m = () => _2([$2("--tw-blur"), $2("--tw-brightness"), $2("--tw-contrast"), $2("--tw-grayscale"), $2("--tw-hue-rotate"), $2("--tw-invert"), $2("--tw-opacity"), $2("--tw-saturate"), $2("--tw-sepia")]), k2 = () => _2([$2("--tw-backdrop-blur"), $2("--tw-backdrop-brightness"), $2("--tw-backdrop-contrast"), $2("--tw-backdrop-grayscale"), $2("--tw-backdrop-hue-rotate"), $2("--tw-backdrop-invert"), $2("--tw-backdrop-opacity"), $2("--tw-backdrop-saturate"), $2("--tw-backdrop-sepia")]);
    r.functional("filter", (b2) => {
      if (!b2.modifier) {
        if (b2.value === null) return [m(), l3("filter", i)];
        if (b2.value.kind === "arbitrary") return [l3("filter", b2.value.value)];
        switch (b2.value.value) {
          case "none":
            return [l3("filter", "none")];
        }
      }
    }), r.functional("backdrop-filter", (b2) => {
      if (!b2.modifier) {
        if (b2.value === null) return [k2(), l3("-webkit-backdrop-filter", u2), l3("backdrop-filter", u2)];
        if (b2.value.kind === "arbitrary") return [l3("-webkit-backdrop-filter", b2.value.value), l3("backdrop-filter", b2.value.value)];
        switch (b2.value.value) {
          case "none":
            return [l3("-webkit-backdrop-filter", "none"), l3("backdrop-filter", "none")];
        }
      }
    }), o("blur", { themeKeys: ["--blur"], handle: (b2) => [m(), l3("--tw-blur", `blur(${b2})`), l3("filter", i)] }), e("blur-none", [m, ["--tw-blur", " "], ["filter", i]]), o("backdrop-blur", { themeKeys: ["--backdrop-blur", "--blur"], handle: (b2) => [k2(), l3("--tw-backdrop-blur", `blur(${b2})`), l3("-webkit-backdrop-filter", u2), l3("backdrop-filter", u2)] }), e("backdrop-blur-none", [k2, ["--tw-backdrop-blur", " "], ["-webkit-backdrop-filter", u2], ["backdrop-filter", u2]]), o("brightness", { themeKeys: ["--brightness"], handleBareValue: ({ value: b2 }) => p(b2) ? `${b2}%` : null, handle: (b2) => [m(), l3("--tw-brightness", `brightness(${b2})`), l3("filter", i)] }), o("backdrop-brightness", { themeKeys: ["--backdrop-brightness", "--brightness"], handleBareValue: ({ value: b2 }) => p(b2) ? `${b2}%` : null, handle: (b2) => [k2(), l3("--tw-backdrop-brightness", `brightness(${b2})`), l3("-webkit-backdrop-filter", u2), l3("backdrop-filter", u2)] }), n("brightness", () => [{ values: ["0", "50", "75", "90", "95", "100", "105", "110", "125", "150", "200"], valueThemeKeys: ["--brightness"] }]), n("backdrop-brightness", () => [{ values: ["0", "50", "75", "90", "95", "100", "105", "110", "125", "150", "200"], valueThemeKeys: ["--backdrop-brightness", "--brightness"] }]), o("contrast", { themeKeys: ["--contrast"], handleBareValue: ({ value: b2 }) => p(b2) ? `${b2}%` : null, handle: (b2) => [m(), l3("--tw-contrast", `contrast(${b2})`), l3("filter", i)] }), o("backdrop-contrast", { themeKeys: ["--backdrop-contrast", "--contrast"], handleBareValue: ({ value: b2 }) => p(b2) ? `${b2}%` : null, handle: (b2) => [k2(), l3("--tw-backdrop-contrast", `contrast(${b2})`), l3("-webkit-backdrop-filter", u2), l3("backdrop-filter", u2)] }), n("contrast", () => [{ values: ["0", "50", "75", "100", "125", "150", "200"], valueThemeKeys: ["--contrast"] }]), n("backdrop-contrast", () => [{ values: ["0", "50", "75", "100", "125", "150", "200"], valueThemeKeys: ["--backdrop-contrast", "--contrast"] }]), o("grayscale", { themeKeys: ["--grayscale"], handleBareValue: ({ value: b2 }) => p(b2) ? `${b2}%` : null, defaultValue: "100%", handle: (b2) => [m(), l3("--tw-grayscale", `grayscale(${b2})`), l3("filter", i)] }), o("backdrop-grayscale", { themeKeys: ["--backdrop-grayscale", "--grayscale"], handleBareValue: ({ value: b2 }) => p(b2) ? `${b2}%` : null, defaultValue: "100%", handle: (b2) => [k2(), l3("--tw-backdrop-grayscale", `grayscale(${b2})`), l3("-webkit-backdrop-filter", u2), l3("backdrop-filter", u2)] }), n("grayscale", () => [{ values: ["0", "25", "50", "75", "100"], valueThemeKeys: ["--grayscale"], hasDefaultValue: true }]), n("backdrop-grayscale", () => [{ values: ["0", "25", "50", "75", "100"], valueThemeKeys: ["--backdrop-grayscale", "--grayscale"], hasDefaultValue: true }]), o("hue-rotate", { supportsNegative: true, themeKeys: ["--hue-rotate"], handleBareValue: ({ value: b2 }) => p(b2) ? `${b2}deg` : null, handle: (b2) => [m(), l3("--tw-hue-rotate", `hue-rotate(${b2})`), l3("filter", i)] }), o("backdrop-hue-rotate", { supportsNegative: true, themeKeys: ["--backdrop-hue-rotate", "--hue-rotate"], handleBareValue: ({ value: b2 }) => p(b2) ? `${b2}deg` : null, handle: (b2) => [k2(), l3("--tw-backdrop-hue-rotate", `hue-rotate(${b2})`), l3("-webkit-backdrop-filter", u2), l3("backdrop-filter", u2)] }), n("hue-rotate", () => [{ values: ["0", "15", "30", "60", "90", "180"], valueThemeKeys: ["--hue-rotate"] }]), n("backdrop-hue-rotate", () => [{ values: ["0", "15", "30", "60", "90", "180"], valueThemeKeys: ["--backdrop-hue-rotate", "--hue-rotate"] }]), o("invert", { themeKeys: ["--invert"], handleBareValue: ({ value: b2 }) => p(b2) ? `${b2}%` : null, defaultValue: "100%", handle: (b2) => [m(), l3("--tw-invert", `invert(${b2})`), l3("filter", i)] }), o("backdrop-invert", { themeKeys: ["--backdrop-invert", "--invert"], handleBareValue: ({ value: b2 }) => p(b2) ? `${b2}%` : null, defaultValue: "100%", handle: (b2) => [k2(), l3("--tw-backdrop-invert", `invert(${b2})`), l3("-webkit-backdrop-filter", u2), l3("backdrop-filter", u2)] }), n("invert", () => [{ values: ["0", "25", "50", "75", "100"], valueThemeKeys: ["--invert"], hasDefaultValue: true }]), n("backdrop-invert", () => [{ values: ["0", "25", "50", "75", "100"], valueThemeKeys: ["--backdrop-invert", "--invert"], hasDefaultValue: true }]), o("saturate", { themeKeys: ["--saturate"], handleBareValue: ({ value: b2 }) => p(b2) ? `${b2}%` : null, handle: (b2) => [m(), l3("--tw-saturate", `saturate(${b2})`), l3("filter", i)] }), o("backdrop-saturate", { themeKeys: ["--backdrop-saturate", "--saturate"], handleBareValue: ({ value: b2 }) => p(b2) ? `${b2}%` : null, handle: (b2) => [k2(), l3("--tw-backdrop-saturate", `saturate(${b2})`), l3("-webkit-backdrop-filter", u2), l3("backdrop-filter", u2)] }), n("saturate", () => [{ values: ["0", "50", "100", "150", "200"], valueThemeKeys: ["--saturate"] }]), n("backdrop-saturate", () => [{ values: ["0", "50", "100", "150", "200"], valueThemeKeys: ["--backdrop-saturate", "--saturate"] }]), o("sepia", { themeKeys: ["--sepia"], handleBareValue: ({ value: b2 }) => p(b2) ? `${b2}%` : null, defaultValue: "100%", handle: (b2) => [m(), l3("--tw-sepia", `sepia(${b2})`), l3("filter", i)] }), o("backdrop-sepia", { themeKeys: ["--backdrop-sepia", "--sepia"], handleBareValue: ({ value: b2 }) => p(b2) ? `${b2}%` : null, defaultValue: "100%", handle: (b2) => [k2(), l3("--tw-backdrop-sepia", `sepia(${b2})`), l3("-webkit-backdrop-filter", u2), l3("backdrop-filter", u2)] }), n("sepia", () => [{ values: ["0", "50", "100"], valueThemeKeys: ["--sepia"], hasDefaultValue: true }]), n("backdrop-sepia", () => [{ values: ["0", "50", "100"], valueThemeKeys: ["--backdrop-sepia", "--sepia"], hasDefaultValue: true }]), e("drop-shadow-none", [m, ["--tw-drop-shadow", " "], ["filter", i]]), o("drop-shadow", { themeKeys: ["--drop-shadow"], handle: (b2) => [m(), l3("--tw-drop-shadow", u(b2, ",").map((N2) => `drop-shadow(${N2})`).join(" ")), l3("filter", i)] }), o("backdrop-opacity", { themeKeys: ["--backdrop-opacity", "--opacity"], handleBareValue: ({ value: b2 }) => ue(b2) ? `${b2}%` : null, handle: (b2) => [k2(), l3("--tw-backdrop-opacity", `opacity(${b2})`), l3("-webkit-backdrop-filter", u2), l3("backdrop-filter", u2)] }), n("backdrop-opacity", () => [{ values: Array.from({ length: 21 }, (b2, N2) => `${N2 * 5}`), valueThemeKeys: ["--backdrop-opacity", "--opacity"] }]);
  }
  {
    let i = `var(--tw-ease, ${t.resolve(null, ["--default-transition-timing-function"]) ?? "ease"})`, u2 = `var(--tw-duration, ${t.resolve(null, ["--default-transition-duration"]) ?? "0s"})`;
    e("transition-none", [["transition-property", "none"]]), e("transition-all", [["transition-property", "all"], ["transition-timing-function", i], ["transition-duration", u2]]), e("transition-colors", [["transition-property", "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to"], ["transition-timing-function", i], ["transition-duration", u2]]), e("transition-opacity", [["transition-property", "opacity"], ["transition-timing-function", i], ["transition-duration", u2]]), e("transition-shadow", [["transition-property", "box-shadow"], ["transition-timing-function", i], ["transition-duration", u2]]), e("transition-transform", [["transition-property", "transform, translate, scale, rotate"], ["transition-timing-function", i], ["transition-duration", u2]]), o("transition", { defaultValue: "color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter", themeKeys: ["--transition-property"], handle: (m) => [l3("transition-property", m), l3("transition-timing-function", i), l3("transition-duration", u2)] }), e("transition-discrete", [["transition-behavior", "allow-discrete"]]), e("transition-normal", [["transition-behavior", "normal"]]), o("delay", { handleBareValue: ({ value: m }) => p(m) ? `${m}ms` : null, themeKeys: ["--transition-delay"], handle: (m) => [l3("transition-delay", m)] });
    {
      let m = () => _2([$2("--tw-duration")]);
      e("duration-initial", [m, ["--tw-duration", "initial"]]), r.functional("duration", (k2) => {
        if (k2.modifier || !k2.value) return;
        let b2 = null;
        if (k2.value.kind === "arbitrary" ? b2 = k2.value.value : (b2 = t.resolve(k2.value.fraction ?? k2.value.value, ["--transition-duration"]), b2 === null && p(k2.value.value) && (b2 = `${k2.value.value}ms`)), b2 !== null) return [m(), l3("--tw-duration", b2), l3("transition-duration", b2)];
      });
    }
    n("delay", () => [{ values: ["75", "100", "150", "200", "300", "500", "700", "1000"], valueThemeKeys: ["--transition-delay"] }]), n("duration", () => [{ values: ["75", "100", "150", "200", "300", "500", "700", "1000"], valueThemeKeys: ["--transition-duration"] }]);
  }
  {
    let i = () => _2([$2("--tw-ease")]);
    e("ease-initial", [i, ["--tw-ease", "initial"]]), e("ease-linear", [i, ["--tw-ease", "linear"], ["transition-timing-function", "linear"]]), o("ease", { themeKeys: ["--ease"], handle: (u2) => [i(), l3("--tw-ease", u2), l3("transition-timing-function", u2)] });
  }
  e("will-change-auto", [["will-change", "auto"]]), e("will-change-scroll", [["will-change", "scroll-position"]]), e("will-change-contents", [["will-change", "contents"]]), e("will-change-transform", [["will-change", "transform"]]), o("will-change", { themeKeys: [], handle: (i) => [l3("will-change", i)] }), e("content-none", [["--tw-content", "none"], ["content", "none"]]), o("content", { themeKeys: [], handle: (i) => [_2([$2("--tw-content", '""')]), l3("--tw-content", i), l3("content", "var(--tw-content)")] });
  {
    let i = "var(--tw-contain-size,) var(--tw-contain-layout,) var(--tw-contain-paint,) var(--tw-contain-style,)", u2 = () => _2([$2("--tw-contain-size"), $2("--tw-contain-layout"), $2("--tw-contain-paint"), $2("--tw-contain-style")]);
    e("contain-none", [["contain", "none"]]), e("contain-content", [["contain", "content"]]), e("contain-strict", [["contain", "strict"]]), e("contain-size", [u2, ["--tw-contain-size", "size"], ["contain", i]]), e("contain-inline-size", [u2, ["--tw-contain-size", "inline-size"], ["contain", i]]), e("contain-layout", [u2, ["--tw-contain-layout", "layout"], ["contain", i]]), e("contain-paint", [u2, ["--tw-contain-paint", "paint"], ["contain", i]]), e("contain-style", [u2, ["--tw-contain-style", "style"], ["contain", i]]), o("contain", { themeKeys: [], handle: (m) => [l3("contain", m)] });
  }
  e("forced-color-adjust-none", [["forced-color-adjust", "none"]]), e("forced-color-adjust-auto", [["forced-color-adjust", "auto"]]), e("leading-none", [() => _2([$2("--tw-leading")]), ["--tw-leading", "1"], ["line-height", "1"]]), a("leading", ["--leading", "--spacing"], (i) => [_2([$2("--tw-leading")]), l3("--tw-leading", i), l3("line-height", i)]), o("tracking", { supportsNegative: true, themeKeys: ["--tracking"], handle: (i) => [_2([$2("--tw-tracking")]), l3("--tw-tracking", i), l3("letter-spacing", i)] }), e("antialiased", [["-webkit-font-smoothing", "antialiased"], ["-moz-osx-font-smoothing", "grayscale"]]), e("subpixel-antialiased", [["-webkit-font-smoothing", "auto"], ["-moz-osx-font-smoothing", "auto"]]);
  {
    let i = "var(--tw-ordinal,) var(--tw-slashed-zero,) var(--tw-numeric-figure,) var(--tw-numeric-spacing,) var(--tw-numeric-fraction,)", u2 = () => _2([$2("--tw-ordinal"), $2("--tw-slashed-zero"), $2("--tw-numeric-figure"), $2("--tw-numeric-spacing"), $2("--tw-numeric-fraction")]);
    e("normal-nums", [["font-variant-numeric", "normal"]]), e("ordinal", [u2, ["--tw-ordinal", "ordinal"], ["font-variant-numeric", i]]), e("slashed-zero", [u2, ["--tw-slashed-zero", "slashed-zero"], ["font-variant-numeric", i]]), e("lining-nums", [u2, ["--tw-numeric-figure", "lining-nums"], ["font-variant-numeric", i]]), e("oldstyle-nums", [u2, ["--tw-numeric-figure", "oldstyle-nums"], ["font-variant-numeric", i]]), e("proportional-nums", [u2, ["--tw-numeric-spacing", "proportional-nums"], ["font-variant-numeric", i]]), e("tabular-nums", [u2, ["--tw-numeric-spacing", "tabular-nums"], ["font-variant-numeric", i]]), e("diagonal-fractions", [u2, ["--tw-numeric-fraction", "diagonal-fractions"], ["font-variant-numeric", i]]), e("stacked-fractions", [u2, ["--tw-numeric-fraction", "stacked-fractions"], ["font-variant-numeric", i]]);
  }
  {
    let i = () => _2([$2("--tw-outline-style", "solid")]);
    r.static("outline-hidden", () => [l3("outline-style", "none"), O2("@media", "(forced-colors: active)", [l3("outline", "2px solid transparent"), l3("outline-offset", "2px")])]), e("outline-none", [["--tw-outline-style", "none"], ["outline-style", "none"]]), e("outline-solid", [["--tw-outline-style", "solid"], ["outline-style", "solid"]]), e("outline-dashed", [["--tw-outline-style", "dashed"], ["outline-style", "dashed"]]), e("outline-dotted", [["--tw-outline-style", "dotted"], ["outline-style", "dotted"]]), e("outline-double", [["--tw-outline-style", "double"], ["outline-style", "double"]]), r.functional("outline", (u2) => {
      if (u2.value === null) return u2.modifier ? void 0 : [i(), l3("outline-style", "var(--tw-outline-style)"), l3("outline-width", "1px")];
      if (u2.value.kind === "arbitrary") {
        let m = u2.value.value;
        switch (u2.value.dataType ?? pe(m, ["color", "length", "number", "percentage"])) {
          case "length":
          case "number":
          case "percentage":
            return u2.modifier ? void 0 : [i(), l3("outline-style", "var(--tw-outline-style)"), l3("outline-width", m)];
          default:
            return m = W2(m, u2.modifier, t), m === null ? void 0 : [l3("outline-color", m)];
        }
      }
      {
        let m = q2(u2, t, ["--outline-color", "--color"]);
        if (m) return [l3("outline-color", m)];
      }
      {
        if (u2.modifier) return;
        let m = t.resolve(u2.value.value, ["--outline-width"]);
        if (m) return [i(), l3("outline-style", "var(--tw-outline-style)"), l3("outline-width", m)];
        if (p(u2.value.value)) return [i(), l3("outline-style", "var(--tw-outline-style)"), l3("outline-width", `${u2.value.value}px`)];
      }
    }), n("outline", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--outline-color", "--color"], modifiers: Array.from({ length: 21 }, (u2, m) => `${m * 5}`), hasDefaultValue: true }, { values: ["0", "1", "2", "4", "8"], valueThemeKeys: ["--outline-width"] }]), o("outline-offset", { supportsNegative: true, themeKeys: ["--outline-offset"], handleBareValue: ({ value: u2 }) => p(u2) ? `${u2}px` : null, handle: (u2) => [l3("outline-offset", u2)] }), n("outline-offset", () => [{ supportsNegative: true, values: ["0", "1", "2", "4", "8"], valueThemeKeys: ["--outline-offset"] }]);
  }
  o("opacity", { themeKeys: ["--opacity"], handleBareValue: ({ value: i }) => ue(i) ? `${i}%` : null, handle: (i) => [l3("opacity", i)] }), n("opacity", () => [{ values: Array.from({ length: 21 }, (i, u2) => `${u2 * 5}`), valueThemeKeys: ["--opacity"] }]), e("underline-offset-auto", [["text-underline-offset", "auto"]]), o("underline-offset", { supportsNegative: true, themeKeys: ["--text-underline-offset"], handleBareValue: ({ value: i }) => p(i) ? `${i}px` : null, handle: (i) => [l3("text-underline-offset", i)] }), n("underline-offset", () => [{ supportsNegative: true, values: ["0", "1", "2", "4", "8"], valueThemeKeys: ["--text-underline-offset"] }]), r.functional("text", (i) => {
    if (i.value) {
      if (i.value.kind === "arbitrary") {
        let u2 = i.value.value;
        switch (i.value.dataType ?? pe(u2, ["color", "length", "percentage", "absolute-size", "relative-size"])) {
          case "size":
          case "length":
          case "percentage":
          case "absolute-size":
          case "relative-size": {
            if (i.modifier) {
              let k2 = i.modifier.kind === "arbitrary" ? i.modifier.value : t.resolve(i.modifier.value, ["--leading"]);
              if (!k2 && ge(i.modifier.value)) {
                let b2 = t.resolve(null, ["--spacing"]);
                if (!b2) return null;
                k2 = `calc(${b2} * ${i.modifier.value})`;
              }
              if (k2) return [l3("font-size", u2), l3("line-height", k2)];
            }
            return [l3("font-size", u2)];
          }
          default:
            return u2 = W2(u2, i.modifier, t), u2 === null ? void 0 : [l3("color", u2)];
        }
      }
      {
        let u2 = q2(i, t, ["--text-color", "--color"]);
        if (u2) return [l3("color", u2)];
      }
      {
        let u2 = t.resolveWith(i.value.value, ["--text"], ["--line-height", "--letter-spacing", "--font-weight"]);
        if (u2) {
          let [m, k2 = {}] = Array.isArray(u2) ? u2 : [u2];
          if (i.modifier) {
            let b2 = i.modifier.kind === "arbitrary" ? i.modifier.value : t.resolve(i.modifier.value, ["--leading"]);
            if (!b2 && ge(i.modifier.value)) {
              let K2 = t.resolve(null, ["--spacing"]);
              if (!K2) return null;
              b2 = `calc(${K2} * ${i.modifier.value})`;
            }
            let N2 = [l3("font-size", m)];
            return b2 && N2.push(l3("line-height", b2)), N2;
          }
          return typeof k2 == "string" ? [l3("font-size", m), l3("line-height", k2)] : [l3("font-size", m), l3("line-height", k2["--line-height"] ? `var(--tw-leading, ${k2["--line-height"]})` : void 0), l3("letter-spacing", k2["--letter-spacing"] ? `var(--tw-tracking, ${k2["--letter-spacing"]})` : void 0), l3("font-weight", k2["--font-weight"] ? `var(--tw-font-weight, ${k2["--font-weight"]})` : void 0)];
        }
      }
    }
  }), n("text", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--text-color", "--color"], modifiers: Array.from({ length: 21 }, (i, u2) => `${u2 * 5}`) }, { values: [], valueThemeKeys: ["--text"], modifiers: [], modifierThemeKeys: ["--leading"] }]);
  {
    let b2 = function(C2) {
      return `var(--tw-ring-inset,) 0 0 0 calc(${C2} + var(--tw-ring-offset-width)) var(--tw-ring-color, ${k2})`;
    }, N2 = function(C2) {
      return `inset 0 0 0 ${C2} var(--tw-inset-ring-color, currentColor)`;
    };
    var E2 = b2, P2 = N2;
    let i = ["var(--tw-inset-shadow)", "var(--tw-inset-ring-shadow)", "var(--tw-ring-offset-shadow)", "var(--tw-ring-shadow)", "var(--tw-shadow)"].join(", "), u2 = "0 0 #0000", m = () => _2([$2("--tw-shadow", u2), $2("--tw-shadow-color"), $2("--tw-inset-shadow", u2), $2("--tw-inset-shadow-color"), $2("--tw-ring-color"), $2("--tw-ring-shadow", u2), $2("--tw-inset-ring-color"), $2("--tw-inset-ring-shadow", u2), $2("--tw-ring-inset"), $2("--tw-ring-offset-width", "0px", "<length>"), $2("--tw-ring-offset-color", "#fff"), $2("--tw-ring-offset-shadow", u2)]);
    e("shadow-initial", [m, ["--tw-shadow-color", "initial"]]), r.functional("shadow", (C2) => {
      if (!C2.value) {
        let A2 = t.get(["--shadow"]);
        return A2 === null ? void 0 : [m(), l3("--tw-shadow", ne2(A2, (U2) => `var(--tw-shadow-color, ${U2})`)), l3("box-shadow", i)];
      }
      if (C2.value.kind === "arbitrary") {
        let A2 = C2.value.value;
        switch (C2.value.dataType ?? pe(A2, ["color"])) {
          case "color":
            return A2 = W2(A2, C2.modifier, t), A2 === null ? void 0 : [m(), l3("--tw-shadow-color", A2)];
          default:
            return [m(), l3("--tw-shadow", ne2(A2, (be2) => `var(--tw-shadow-color, ${be2})`)), l3("box-shadow", i)];
        }
      }
      switch (C2.value.value) {
        case "none":
          return C2.modifier ? void 0 : [m(), l3("--tw-shadow", u2), l3("box-shadow", i)];
      }
      {
        let A2 = t.get([`--shadow-${C2.value.value}`]);
        if (A2) return C2.modifier ? void 0 : [m(), l3("--tw-shadow", ne2(A2, (U2) => `var(--tw-shadow-color, ${U2})`)), l3("box-shadow", i)];
      }
      {
        let A2 = q2(C2, t, ["--box-shadow-color", "--color"]);
        if (A2) return [m(), l3("--tw-shadow-color", A2)];
      }
    }), n("shadow", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--box-shadow-color", "--color"], modifiers: Array.from({ length: 21 }, (C2, A2) => `${A2 * 5}`) }, { values: ["none"], valueThemeKeys: ["--shadow"], hasDefaultValue: true }]), e("inset-shadow-initial", [m, ["--tw-inset-shadow-color", "initial"]]), r.functional("inset-shadow", (C2) => {
      if (!C2.value) {
        let A2 = t.get(["--inset-shadow"]);
        return A2 === null ? void 0 : [m(), l3("--tw-inset-shadow", ne2(A2, (U2) => `var(--tw-inset-shadow-color, ${U2})`)), l3("box-shadow", i)];
      }
      if (C2.value.kind === "arbitrary") {
        let A2 = C2.value.value;
        switch (C2.value.dataType ?? pe(A2, ["color"])) {
          case "color":
            return A2 = W2(A2, C2.modifier, t), A2 === null ? void 0 : [m(), l3("--tw-inset-shadow-color", A2)];
          default:
            return [m(), l3("--tw-inset-shadow", `inset ${ne2(A2, (be2) => `var(--tw-inset-shadow-color, ${be2})`)}`), l3("box-shadow", i)];
        }
      }
      switch (C2.value.value) {
        case "none":
          return C2.modifier ? void 0 : [m(), l3("--tw-inset-shadow", u2), l3("box-shadow", i)];
      }
      {
        let A2 = t.get([`--inset-shadow-${C2.value.value}`]);
        if (A2) return C2.modifier ? void 0 : [m(), l3("--tw-inset-shadow", ne2(A2, (U2) => `var(--tw-inset-shadow-color, ${U2})`)), l3("box-shadow", i)];
      }
      {
        let A2 = q2(C2, t, ["--box-shadow-color", "--color"]);
        if (A2) return [m(), l3("--tw-inset-shadow-color", A2)];
      }
    }), n("inset-shadow", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--box-shadow-color", "--color"], modifiers: Array.from({ length: 21 }, (C2, A2) => `${A2 * 5}`) }, { values: [], valueThemeKeys: ["--inset-shadow"], hasDefaultValue: true }]), e("ring-inset", [m, ["--tw-ring-inset", "inset"]]);
    let k2 = t.get(["--default-ring-color"]) ?? "currentColor";
    r.functional("ring", (C2) => {
      if (!C2.value) {
        if (C2.modifier) return;
        let A2 = t.get(["--default-ring-width"]) ?? "1px";
        return [m(), l3("--tw-ring-shadow", b2(A2)), l3("box-shadow", i)];
      }
      if (C2.value.kind === "arbitrary") {
        let A2 = C2.value.value;
        switch (C2.value.dataType ?? pe(A2, ["color", "length"])) {
          case "length":
            return C2.modifier ? void 0 : [m(), l3("--tw-ring-shadow", b2(A2)), l3("box-shadow", i)];
          default:
            return A2 = W2(A2, C2.modifier, t), A2 === null ? void 0 : [l3("--tw-ring-color", A2)];
        }
      }
      {
        let A2 = q2(C2, t, ["--ring-color", "--color"]);
        if (A2) return [l3("--tw-ring-color", A2)];
      }
      {
        if (C2.modifier) return;
        let A2 = t.resolve(C2.value.value, ["--ring-width"]);
        if (A2 === null && p(C2.value.value) && (A2 = `${C2.value.value}px`), A2) return [m(), l3("--tw-ring-shadow", b2(A2)), l3("box-shadow", i)];
      }
    }), n("ring", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--ring-color", "--color"], modifiers: Array.from({ length: 21 }, (C2, A2) => `${A2 * 5}`) }, { values: ["0", "1", "2", "4", "8"], valueThemeKeys: ["--ring-width"], hasDefaultValue: true }]), r.functional("inset-ring", (C2) => {
      if (!C2.value) return C2.modifier ? void 0 : [m(), l3("--tw-inset-ring-shadow", N2("1px")), l3("box-shadow", i)];
      if (C2.value.kind === "arbitrary") {
        let A2 = C2.value.value;
        switch (C2.value.dataType ?? pe(A2, ["color", "length"])) {
          case "length":
            return C2.modifier ? void 0 : [m(), l3("--tw-inset-ring-shadow", N2(A2)), l3("box-shadow", i)];
          default:
            return A2 = W2(A2, C2.modifier, t), A2 === null ? void 0 : [l3("--tw-inset-ring-color", A2)];
        }
      }
      {
        let A2 = q2(C2, t, ["--ring-color", "--color"]);
        if (A2) return [l3("--tw-inset-ring-color", A2)];
      }
      {
        if (C2.modifier) return;
        let A2 = t.resolve(C2.value.value, ["--ring-width"]);
        if (A2 === null && p(C2.value.value) && (A2 = `${C2.value.value}px`), A2) return [m(), l3("--tw-inset-ring-shadow", N2(A2)), l3("box-shadow", i)];
      }
    }), n("inset-ring", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--ring-color", "--color"], modifiers: Array.from({ length: 21 }, (C2, A2) => `${A2 * 5}`) }, { values: ["0", "1", "2", "4", "8"], valueThemeKeys: ["--ring-width"], hasDefaultValue: true }]);
    let K2 = "var(--tw-ring-inset,) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color)";
    r.functional("ring-offset", (C2) => {
      if (C2.value) {
        if (C2.value.kind === "arbitrary") {
          let A2 = C2.value.value;
          switch (C2.value.dataType ?? pe(A2, ["color", "length"])) {
            case "length":
              return C2.modifier ? void 0 : [l3("--tw-ring-offset-width", A2), l3("--tw-ring-offset-shadow", K2)];
            default:
              return A2 = W2(A2, C2.modifier, t), A2 === null ? void 0 : [l3("--tw-ring-offset-color", A2)];
          }
        }
        {
          let A2 = t.resolve(C2.value.value, ["--ring-offset-width"]);
          if (A2) return C2.modifier ? void 0 : [l3("--tw-ring-offset-width", A2), l3("--tw-ring-offset-shadow", K2)];
          if (p(C2.value.value)) return C2.modifier ? void 0 : [l3("--tw-ring-offset-width", `${C2.value.value}px`), l3("--tw-ring-offset-shadow", K2)];
        }
        {
          let A2 = q2(C2, t, ["--ring-offset-color", "--color"]);
          if (A2) return [l3("--tw-ring-offset-color", A2)];
        }
      }
    });
  }
  return n("ring-offset", () => [{ values: ["current", "inherit", "transparent"], valueThemeKeys: ["--ring-offset-color", "--color"], modifiers: Array.from({ length: 21 }, (i, u2) => `${u2 * 5}`) }, { values: ["0", "1", "2", "4", "8"], valueThemeKeys: ["--ring-offset-width"] }]), r.functional("@container", (i) => {
    let u2 = null;
    if (i.value === null ? u2 = "inline-size" : i.value.kind === "arbitrary" ? u2 = i.value.value : i.value.kind === "named" && i.value.value === "normal" && (u2 = "normal"), u2 !== null) return i.modifier ? [l3("container-type", u2), l3("container-name", i.modifier.value)] : [l3("container-type", u2)];
  }), n("@container", () => [{ values: ["normal"], valueThemeKeys: [], hasDefaultValue: true }]), r;
}
function Nt(t) {
  let r = t.params;
  return jr.test(r) ? (n) => {
    let e = /* @__PURE__ */ new Set(), o = /* @__PURE__ */ new Set();
    j2(t.nodes, (s2) => {
      if (s2.kind !== "declaration" || !s2.value || !s2.value.includes("--value(") && !s2.value.includes("--modifier(")) return;
      let a = L2(s2.value);
      le(a, (c2) => {
        if (c2.kind !== "function" || c2.value !== "--value" && c2.value !== "--modifier") return;
        let d2 = u(B2(c2.nodes), ",");
        for (let [f3, p3] of d2.entries()) p3 = p3.replace(/\\\*/g, "*"), p3 = p3.replace(/--(.*?)\s--(.*?)/g, "--$1-*--$2"), p3 = p3.replace(/\s+/g, ""), p3 = p3.replace(/(-\*){2,}/g, "-*"), p3[0] === "-" && p3[1] === "-" && !p3.includes("-*") && (p3 += "-*"), d2[f3] = p3;
        c2.nodes = L2(d2.join(","));
        for (let f3 of c2.nodes) if (f3.kind === "word" && f3.value[0] === "-" && f3.value[1] === "-") {
          let p3 = f3.value.replace(/-\*.*$/g, "");
          c2.value === "--value" ? e.add(p3) : c2.value === "--modifier" && o.add(p3);
        }
      }), s2.value = B2(a);
    }), n.utilities.functional(r.slice(0, -2), (s2) => {
      let a = structuredClone(t), c2 = s2.value, d2 = s2.modifier;
      if (c2 === null) return;
      let f3 = false, p3 = false, g3 = false, h3 = false, y2 = /* @__PURE__ */ new Map(), w2 = false;
      if (j2([a], (v, { parent: x, replaceWith: V2 }) => {
        if ((x == null ? void 0 : x.kind) !== "rule" && (x == null ? void 0 : x.kind) !== "at-rule" || v.kind !== "declaration" || !v.value) return;
        let S2 = L2(v.value);
        (le(S2, (E2, { replaceWith: P2 }) => {
          if (E2.kind === "function") {
            if (E2.value === "--value") {
              f3 = true;
              let i = $t(c2, E2, n);
              return i ? (p3 = true, i.ratio ? w2 = true : y2.set(v, x), P2(i.nodes), 1) : (f3 || (f3 = false), V2([]), 2);
            } else if (E2.value === "--modifier") {
              if (d2 === null) return V2([]), 1;
              g3 = true;
              let i = $t(d2, E2, n);
              return i ? (h3 = true, P2(i.nodes), 1) : (g3 || (g3 = false), V2([]), 2);
            }
          }
        }) ?? 0) === 0 && (v.value = B2(S2));
      }), f3 && !p3 || g3 && !h3 || w2 && h3 || d2 && !w2 && !h3) return null;
      if (w2) for (let [v, x] of y2) {
        let V2 = x.nodes.indexOf(v);
        V2 !== -1 && x.nodes.splice(V2, 1);
      }
      return a.nodes;
    }), n.utilities.suggest(r.slice(0, -2), () => [{ values: n.theme.keysInNamespaces(e).map((s2) => s2.replaceAll("_", ".")), modifiers: n.theme.keysInNamespaces(o).map((s2) => s2.replaceAll("_", ".")) }]);
  } : Or.test(r) ? (n) => {
    n.utilities.static(r, () => structuredClone(t.nodes));
  } : null;
}
function $t(t, r, n) {
  for (let e of r.nodes) if (t.kind === "named" && e.kind === "word" && e.value[0] === "-" && e.value[1] === "-") {
    let o = e.value;
    if (o.endsWith("-*")) {
      o = o.slice(0, -2);
      let s2 = n.theme.resolve(t.value, [o]);
      if (s2) return { nodes: L2(s2) };
    } else {
      let s2 = o.split("-*");
      if (s2.length <= 1) continue;
      let a = [s2.shift()], c2 = n.theme.resolveWith(t.value, a, s2);
      if (c2) {
        let [, d2 = {}] = c2;
        {
          let f3 = d2[s2.pop()];
          if (f3) return { nodes: L2(f3) };
        }
      }
    }
  } else if (t.kind === "named" && e.kind === "word") {
    if (e.value !== "number" && e.value !== "integer" && e.value !== "ratio" && e.value !== "percentage") continue;
    let o = e.value === "ratio" && "fraction" in t ? t.fraction : t.value;
    if (!o) continue;
    let s2 = pe(o, [e.value]);
    if (s2 === null) continue;
    if (s2 === "ratio") {
      let [a, c2] = u(o, "/");
      if (!p(a) || !p(c2)) continue;
    } else {
      if (s2 === "number" && !ge(o)) continue;
      if (s2 === "percentage" && !p(o.slice(0, -1))) continue;
    }
    return { nodes: L2(o), ratio: s2 === "ratio" };
  } else if (t.kind === "arbitrary" && e.kind === "word" && e.value[0] === "[" && e.value[e.value.length - 1] === "]") {
    let o = e.value.slice(1, -1);
    if (o === "*") return { nodes: L2(t.value) };
    if ("dataType" in t && t.dataType && t.dataType !== o) continue;
    if ("dataType" in t && t.dataType) return { nodes: L2(t.value) };
    if (pe(t.value, [o]) !== null) return { nodes: L2(t.value) };
  }
}
var Be = { "--alpha": Dr, "--spacing": _r, "--theme": Fr, theme: Et };
function Dr(t, r, ...n) {
  let [e, o] = u(r, "/").map((s2) => s2.trim());
  if (!e || !o) throw new Error(`The --alpha(…) function requires a color and an alpha value, e.g.: \`--alpha(${e || "var(--my-color)"} / ${o || "50%"})\``);
  if (n.length > 0) throw new Error(`The --alpha(…) function only accepts one argument, e.g.: \`--alpha(${e || "var(--my-color)"} / ${o || "50%"})\``);
  return G2(e, o);
}
function _r(t, r, ...n) {
  if (!r) throw new Error("The --spacing(…) function requires an argument, but received none.");
  if (n.length > 0) throw new Error(`The --spacing(…) function only accepts a single argument, but received ${n.length + 1}.`);
  let e = t.theme.resolve(null, ["--spacing"]);
  if (!e) throw new Error("The --spacing(…) function requires that the `--spacing` theme variable exists, but it was not found.");
  return `calc(${e} * ${r})`;
}
function Fr(t, r, ...n) {
  if (!r.startsWith("--")) throw new Error("The --theme(…) function can only be used with CSS variables from your theme.");
  return Et(t, r, ...n);
}
function Et(t, r, ...n) {
  r = Ur(r);
  let e = t.resolveThemeValue(r);
  if (!e && n.length > 0) return n.join(", ");
  if (!e) throw new Error(`Could not resolve value for theme function: \`theme(${r})\`. Consider checking if the path is correct or provide a fallback value to silence this error.`);
  return e;
}
var Tt = new RegExp(Object.keys(Be).map((t) => `${t}\\(`).join("|"));
function ae(t, r) {
  let n = 0;
  return j2(t, (e) => {
    if (e.kind === "declaration" && e.value && Tt.test(e.value)) {
      n |= 8, e.value = St(e.value, r);
      return;
    }
    e.kind === "at-rule" && (e.name === "@media" || e.name === "@custom-media" || e.name === "@container" || e.name === "@supports") && Tt.test(e.params) && (n |= 8, e.params = St(e.params, r));
  }), n;
}
function St(t, r) {
  let n = L2(t);
  return le(n, (e, { replaceWith: o }) => {
    if (e.kind === "function" && e.value in Be) {
      let s2 = u(B2(e.nodes).trim(), ",").map((c2) => c2.trim()), a = Be[e.value](r, ...s2);
      return o(L2(a));
    }
  }), B2(n);
}
function Ur(t) {
  if (t[0] !== "'" && t[0] !== '"') return t;
  let r = "", n = t[0];
  for (let e = 1; e < t.length - 1; e++) {
    let o = t[e], s2 = t[e + 1];
    o === "\\" && (s2 === n || s2 === "\\") ? (r += s2, e++) : r += o;
  }
  return r;
}
function Rt(t) {
  let r = [];
  for (let n of t.utilities.keys("static")) r.push([n, { modifiers: [] }]);
  for (let n of t.utilities.keys("functional")) {
    let e = t.utilities.getCompletions(n);
    for (let o of e) for (let s2 of o.values) {
      let a = s2 === null ? n : `${n}-${s2}`;
      r.push([a, { modifiers: o.modifiers }]), o.supportsNegative && r.push([`-${a}`, { modifiers: o.modifiers }]);
    }
  }
  return r.sort((n, e) => n[0] === e[0] ? 0 : n[0] < e[0] ? -1 : 1), r;
}
function Kt(t) {
  let r = [];
  for (let [e, o] of t.variants.entries()) {
    let a = function({ value: c2, modifier: d2 } = {}) {
      let f3 = e;
      c2 && (f3 += `-${c2}`), d2 && (f3 += `/${d2}`);
      let p3 = t.parseVariant(f3);
      if (!p3) return [];
      let g3 = F2(".__placeholder__", []);
      if (se(g3, p3, t.variants) === null) return [];
      let h3 = [];
      return Te(g3.nodes, (y2, { path: w2 }) => {
        if (y2.kind !== "rule" && y2.kind !== "at-rule" || y2.nodes.length > 0) return;
        w2.sort((V2, S2) => {
          let R2 = V2.kind === "at-rule", E2 = S2.kind === "at-rule";
          return R2 && !E2 ? -1 : !R2 && E2 ? 1 : 0;
        });
        let v = w2.flatMap((V2) => V2.kind === "rule" ? V2.selector === "&" ? [] : [V2.selector] : V2.kind === "at-rule" ? [`${V2.name} ${V2.params}`] : []), x = "";
        for (let V2 = v.length - 1; V2 >= 0; V2--) x = x === "" ? v[V2] : `${v[V2]} { ${x} }`;
        h3.push(x);
      }), h3;
    };
    var n = a;
    if (o.kind === "arbitrary") continue;
    let s2 = t.variants.getCompletions(e);
    switch (o.kind) {
      case "static": {
        r.push({ name: e, values: s2, isArbitrary: false, hasDash: true, selectors: a });
        break;
      }
      case "functional": {
        r.push({ name: e, values: s2, isArbitrary: true, hasDash: true, selectors: a });
        break;
      }
      case "compound": {
        r.push({ name: e, values: s2, isArbitrary: true, hasDash: true, selectors: a });
        break;
      }
    }
  }
  return r;
}
function Pt(t, r) {
  var _a2;
  let { astNodes: n, nodeSorting: e } = Z2(Array.from(r), t), o = new Map(r.map((a) => [a, null])), s2 = 0n;
  for (let a of n) {
    let c2 = (_a2 = e.get(a)) == null ? void 0 : _a2.candidate;
    c2 && o.set(c2, o.get(c2) ?? s2++);
  }
  return r.map((a) => [a, o.get(a) ?? null]);
}
var Ee = /^@?[a-zA-Z0-9_-]*$/;
var qe = class {
  constructor() {
    __publicField(this, "compareFns", /* @__PURE__ */ new Map());
    __publicField(this, "variants", /* @__PURE__ */ new Map());
    __publicField(this, "completions", /* @__PURE__ */ new Map());
    __publicField(this, "groupOrder", null);
    __publicField(this, "lastOrder", 0);
  }
  static(r, n, { compounds: e, order: o } = {}) {
    this.set(r, { kind: "static", applyFn: n, compoundsWith: 0, compounds: e ?? 2, order: o });
  }
  fromAst(r, n) {
    let e = [];
    j2(n, (o) => {
      o.kind === "rule" ? e.push(o.selector) : o.kind === "at-rule" && o.name !== "@slot" && e.push(`${o.name} ${o.params}`);
    }), this.static(r, (o) => {
      let s2 = structuredClone(n);
      Je(s2, o.nodes), o.nodes = s2;
    }, { compounds: ie2(e) });
  }
  functional(r, n, { compounds: e, order: o } = {}) {
    this.set(r, { kind: "functional", applyFn: n, compoundsWith: 0, compounds: e ?? 2, order: o });
  }
  compound(r, n, e, { compounds: o, order: s2 } = {}) {
    this.set(r, { kind: "compound", applyFn: e, compoundsWith: n, compounds: o ?? 2, order: s2 });
  }
  group(r, n) {
    this.groupOrder = this.nextOrder(), n && this.compareFns.set(this.groupOrder, n), r(), this.groupOrder = null;
  }
  has(r) {
    return this.variants.has(r);
  }
  get(r) {
    return this.variants.get(r);
  }
  kind(r) {
    var _a2;
    return (_a2 = this.variants.get(r)) == null ? void 0 : _a2.kind;
  }
  compoundsWith(r, n) {
    let e = this.variants.get(r), o = typeof n == "string" ? this.variants.get(n) : n.kind === "arbitrary" ? { compounds: ie2([n.selector]) } : this.variants.get(n.root);
    return !(!e || !o || e.kind !== "compound" || o.compounds === 0 || e.compoundsWith === 0 || !(e.compoundsWith & o.compounds));
  }
  suggest(r, n) {
    this.completions.set(r, n);
  }
  getCompletions(r) {
    var _a2;
    return ((_a2 = this.completions.get(r)) == null ? void 0 : _a2()) ?? [];
  }
  compare(r, n) {
    if (r === n) return 0;
    if (r === null) return -1;
    if (n === null) return 1;
    if (r.kind === "arbitrary" && n.kind === "arbitrary") return r.selector < n.selector ? -1 : 1;
    if (r.kind === "arbitrary") return 1;
    if (n.kind === "arbitrary") return -1;
    let e = this.variants.get(r.root).order, o = this.variants.get(n.root).order, s2 = e - o;
    if (s2 !== 0) return s2;
    if (r.kind === "compound" && n.kind === "compound") {
      let f3 = this.compare(r.variant, n.variant);
      return f3 !== 0 ? f3 : r.modifier && n.modifier ? r.modifier.value < n.modifier.value ? -1 : 1 : r.modifier ? 1 : n.modifier ? -1 : 0;
    }
    let a = this.compareFns.get(e);
    if (a !== void 0) return a(r, n);
    if (r.root !== n.root) return r.root < n.root ? -1 : 1;
    let c2 = r.value, d2 = n.value;
    return c2 === null ? -1 : d2 === null || c2.kind === "arbitrary" && d2.kind !== "arbitrary" ? 1 : c2.kind !== "arbitrary" && d2.kind === "arbitrary" || c2.value < d2.value ? -1 : 1;
  }
  keys() {
    return this.variants.keys();
  }
  entries() {
    return this.variants.entries();
  }
  set(r, { kind: n, applyFn: e, compounds: o, compoundsWith: s2, order: a }) {
    let c2 = this.variants.get(r);
    c2 ? Object.assign(c2, { kind: n, applyFn: e, compounds: o }) : (a === void 0 && (this.lastOrder = this.nextOrder(), a = this.lastOrder), this.variants.set(r, { kind: n, applyFn: e, order: a, compoundsWith: s2, compounds: o }));
  }
  nextOrder() {
    return this.groupOrder ?? this.lastOrder + 1;
  }
};
function ie2(t) {
  let r = 0;
  for (let n of t) {
    if (n[0] === "@") {
      if (!n.startsWith("@media") && !n.startsWith("@supports") && !n.startsWith("@container")) return 0;
      r |= 1;
      continue;
    }
    if (n.includes("::")) return 0;
    r |= 2;
  }
  return r;
}
function jt(t) {
  let r = new qe();
  function n(f3, p3, { compounds: g3 } = {}) {
    g3 = g3 ?? ie2(p3), r.static(f3, (h3) => {
      h3.nodes = p3.map((y2) => M2(y2, h3.nodes));
    }, { compounds: g3 });
  }
  r.static("force", () => {
  }, { compounds: 0 }), n("*", [":is(& > *)"], { compounds: 0 }), n("**", [":is(& *)"], { compounds: 0 });
  function e(f3, p3) {
    return p3.map((g3) => {
      g3 = g3.trim();
      let h3 = u(g3, " ");
      return h3[0] === "not" ? h3.slice(1).join(" ") : f3 === "@container" ? h3[0][0] === "(" ? `not ${g3}` : h3[1] === "not" ? `${h3[0]} ${h3.slice(2).join(" ")}` : `${h3[0]} not ${h3.slice(1).join(" ")}` : `not ${g3}`;
    });
  }
  let o = ["@media", "@supports", "@container"];
  function s2(f3) {
    for (let p3 of o) {
      if (p3 !== f3.name) continue;
      let g3 = u(f3.params, ",");
      return g3.length > 1 ? null : (g3 = e(f3.name, g3), O2(f3.name, g3.join(", ")));
    }
    return null;
  }
  function a(f3) {
    return f3.includes("::") ? null : `&:not(${u(f3, ",").map((g3) => (g3.startsWith("&:is(") && g3.endsWith(")") && (g3 = g3.slice(5, -1)), g3 = g3.replaceAll("&", "*"), g3)).join(", ")})`;
  }
  r.compound("not", 3, (f3, p3) => {
    if (p3.variant.kind === "arbitrary" && p3.variant.relative || p3.modifier) return null;
    let g3 = false;
    if (j2([f3], (h3, { path: y2 }) => {
      if (h3.kind !== "rule" && h3.kind !== "at-rule") return 0;
      if (h3.nodes.length > 0) return 0;
      let w2 = [], v = [];
      for (let V2 of y2) V2.kind === "at-rule" ? w2.push(V2) : V2.kind === "rule" && v.push(V2);
      if (w2.length > 1) return 2;
      if (v.length > 1) return 2;
      let x = [];
      for (let V2 of v) {
        let S2 = a(V2.selector);
        if (!S2) return g3 = false, 2;
        x.push(F2(S2, []));
      }
      for (let V2 of w2) {
        let S2 = s2(V2);
        if (!S2) return g3 = false, 2;
        x.push(S2);
      }
      return Object.assign(f3, F2("&", x)), g3 = true, 1;
    }), f3.kind === "rule" && f3.selector === "&" && f3.nodes.length === 1 && Object.assign(f3, f3.nodes[0]), !g3) return null;
  }), r.suggest("not", () => Array.from(r.keys()).filter((f3) => r.compoundsWith("not", f3))), r.compound("group", 2, (f3, p3) => {
    if (p3.variant.kind === "arbitrary" && p3.variant.relative) return null;
    let g3 = p3.modifier ? `:where(.${t.prefix ? `${t.prefix}\\:` : ""}group\\/${p3.modifier.value})` : `:where(.${t.prefix ? `${t.prefix}\\:` : ""}group)`, h3 = false;
    if (j2([f3], (y2, { path: w2 }) => {
      if (y2.kind !== "rule") return 0;
      for (let x of w2.slice(0, -1)) if (x.kind === "rule") return h3 = false, 2;
      let v = y2.selector.replaceAll("&", g3);
      u(v, ",").length > 1 && (v = `:is(${v})`), y2.selector = `&:is(${v} *)`, h3 = true;
    }), !h3) return null;
  }), r.suggest("group", () => Array.from(r.keys()).filter((f3) => r.compoundsWith("group", f3))), r.compound("peer", 2, (f3, p3) => {
    if (p3.variant.kind === "arbitrary" && p3.variant.relative) return null;
    let g3 = p3.modifier ? `:where(.${t.prefix ? `${t.prefix}\\:` : ""}peer\\/${p3.modifier.value})` : `:where(.${t.prefix ? `${t.prefix}\\:` : ""}peer)`, h3 = false;
    if (j2([f3], (y2, { path: w2 }) => {
      if (y2.kind !== "rule") return 0;
      for (let x of w2.slice(0, -1)) if (x.kind === "rule") return h3 = false, 2;
      let v = y2.selector.replaceAll("&", g3);
      u(v, ",").length > 1 && (v = `:is(${v})`), y2.selector = `&:is(${v} ~ *)`, h3 = true;
    }), !h3) return null;
  }), r.suggest("peer", () => Array.from(r.keys()).filter((f3) => r.compoundsWith("peer", f3))), n("first-letter", ["&::first-letter"]), n("first-line", ["&::first-line"]), n("marker", ["& *::marker", "&::marker"]), n("selection", ["& *::selection", "&::selection"]), n("file", ["&::file-selector-button"]), n("placeholder", ["&::placeholder"]), n("backdrop", ["&::backdrop"]);
  {
    let f3 = function() {
      return _2([O2("@property", "--tw-content", [l3("syntax", '"*"'), l3("initial-value", '""'), l3("inherits", "false")])]);
    };
    var c2 = f3;
    r.static("before", (p3) => {
      p3.nodes = [F2("&::before", [f3(), l3("content", "var(--tw-content)"), ...p3.nodes])];
    }, { compounds: 0 }), r.static("after", (p3) => {
      p3.nodes = [F2("&::after", [f3(), l3("content", "var(--tw-content)"), ...p3.nodes])];
    }, { compounds: 0 });
  }
  n("first", ["&:first-child"]), n("last", ["&:last-child"]), n("only", ["&:only-child"]), n("odd", ["&:nth-child(odd)"]), n("even", ["&:nth-child(even)"]), n("first-of-type", ["&:first-of-type"]), n("last-of-type", ["&:last-of-type"]), n("only-of-type", ["&:only-of-type"]), n("visited", ["&:visited"]), n("target", ["&:target"]), n("open", ["&:is([open], :popover-open)"]), n("default", ["&:default"]), n("checked", ["&:checked"]), n("indeterminate", ["&:indeterminate"]), n("placeholder-shown", ["&:placeholder-shown"]), n("autofill", ["&:autofill"]), n("optional", ["&:optional"]), n("required", ["&:required"]), n("valid", ["&:valid"]), n("invalid", ["&:invalid"]), n("in-range", ["&:in-range"]), n("out-of-range", ["&:out-of-range"]), n("read-only", ["&:read-only"]), n("empty", ["&:empty"]), n("focus-within", ["&:focus-within"]), r.static("hover", (f3) => {
    f3.nodes = [F2("&:hover", [O2("@media", "(hover: hover)", f3.nodes)])];
  }), n("focus", ["&:focus"]), n("focus-visible", ["&:focus-visible"]), n("active", ["&:active"]), n("enabled", ["&:enabled"]), n("disabled", ["&:disabled"]), n("inert", ["&:is([inert], [inert] *)"]), r.compound("in", 2, (f3, p3) => {
    if (p3.modifier) return null;
    let g3 = false;
    if (j2([f3], (h3, { path: y2 }) => {
      if (h3.kind !== "rule") return 0;
      for (let w2 of y2.slice(0, -1)) if (w2.kind === "rule") return g3 = false, 2;
      h3.selector = `:where(${h3.selector.replaceAll("&", "*")}) &`, g3 = true;
    }), !g3) return null;
  }), r.suggest("in", () => Array.from(r.keys()).filter((f3) => r.compoundsWith("in", f3))), r.compound("has", 2, (f3, p3) => {
    if (p3.modifier) return null;
    let g3 = false;
    if (j2([f3], (h3, { path: y2 }) => {
      if (h3.kind !== "rule") return 0;
      for (let w2 of y2.slice(0, -1)) if (w2.kind === "rule") return g3 = false, 2;
      h3.selector = `&:has(${h3.selector.replaceAll("&", "*")})`, g3 = true;
    }), !g3) return null;
  }), r.suggest("has", () => Array.from(r.keys()).filter((f3) => r.compoundsWith("has", f3))), r.functional("aria", (f3, p3) => {
    if (!p3.value || p3.modifier) return null;
    p3.value.kind === "arbitrary" ? f3.nodes = [F2(`&[aria-${Ot(p3.value.value)}]`, f3.nodes)] : f3.nodes = [F2(`&[aria-${p3.value.value}="true"]`, f3.nodes)];
  }), r.suggest("aria", () => ["busy", "checked", "disabled", "expanded", "hidden", "pressed", "readonly", "required", "selected"]), r.functional("data", (f3, p3) => {
    if (!p3.value || p3.modifier) return null;
    f3.nodes = [F2(`&[data-${Ot(p3.value.value)}]`, f3.nodes)];
  }), r.functional("nth", (f3, p3) => {
    if (!p3.value || p3.modifier || p3.value.kind === "named" && !p(p3.value.value)) return null;
    f3.nodes = [F2(`&:nth-child(${p3.value.value})`, f3.nodes)];
  }), r.functional("nth-last", (f3, p3) => {
    if (!p3.value || p3.modifier || p3.value.kind === "named" && !p(p3.value.value)) return null;
    f3.nodes = [F2(`&:nth-last-child(${p3.value.value})`, f3.nodes)];
  }), r.functional("nth-of-type", (f3, p3) => {
    if (!p3.value || p3.modifier || p3.value.kind === "named" && !p(p3.value.value)) return null;
    f3.nodes = [F2(`&:nth-of-type(${p3.value.value})`, f3.nodes)];
  }), r.functional("nth-last-of-type", (f3, p3) => {
    if (!p3.value || p3.modifier || p3.value.kind === "named" && !p(p3.value.value)) return null;
    f3.nodes = [F2(`&:nth-last-of-type(${p3.value.value})`, f3.nodes)];
  }), r.functional("supports", (f3, p3) => {
    if (!p3.value || p3.modifier) return null;
    let g3 = p3.value.value;
    if (g3 === null) return null;
    if (/^[\w-]*\s*\(/.test(g3)) {
      let h3 = g3.replace(/\b(and|or|not)\b/g, " $1 ");
      f3.nodes = [O2("@supports", h3, f3.nodes)];
      return;
    }
    g3.includes(":") || (g3 = `${g3}: var(--tw)`), (g3[0] !== "(" || g3[g3.length - 1] !== ")") && (g3 = `(${g3})`), f3.nodes = [O2("@supports", g3, f3.nodes)];
  }, { compounds: 1 }), n("motion-safe", ["@media (prefers-reduced-motion: no-preference)"]), n("motion-reduce", ["@media (prefers-reduced-motion: reduce)"]), n("contrast-more", ["@media (prefers-contrast: more)"]), n("contrast-less", ["@media (prefers-contrast: less)"]);
  {
    let f3 = function(p3, g3, h3, y2) {
      if (p3 === g3) return 0;
      let w2 = y2.get(p3);
      if (w2 === null) return h3 === "asc" ? -1 : 1;
      let v = y2.get(g3);
      return v === null ? h3 === "asc" ? 1 : -1 : re2(w2, v, h3);
    };
    var d2 = f3;
    {
      let p3 = t.namespace("--breakpoint"), g3 = new z2((h3) => {
        switch (h3.kind) {
          case "static":
            return t.resolveValue(h3.root, ["--breakpoint"]) ?? null;
          case "functional": {
            if (!h3.value || h3.modifier) return null;
            let y2 = null;
            return h3.value.kind === "arbitrary" ? y2 = h3.value.value : h3.value.kind === "named" && (y2 = t.resolveValue(h3.value.value, ["--breakpoint"])), !y2 || y2.includes("var(") ? null : y2;
          }
          case "arbitrary":
          case "compound":
            return null;
        }
      });
      r.group(() => {
        r.functional("max", (h3, y2) => {
          if (y2.modifier) return null;
          let w2 = g3.get(y2);
          if (w2 === null) return null;
          h3.nodes = [O2("@media", `(width < ${w2})`, h3.nodes)];
        }, { compounds: 1 });
      }, (h3, y2) => f3(h3, y2, "desc", g3)), r.suggest("max", () => Array.from(p3.keys()).filter((h3) => h3 !== null)), r.group(() => {
        for (let [h3, y2] of t.namespace("--breakpoint")) h3 !== null && r.static(h3, (w2) => {
          w2.nodes = [O2("@media", `(width >= ${y2})`, w2.nodes)];
        }, { compounds: 1 });
        r.functional("min", (h3, y2) => {
          if (y2.modifier) return null;
          let w2 = g3.get(y2);
          if (w2 === null) return null;
          h3.nodes = [O2("@media", `(width >= ${w2})`, h3.nodes)];
        }, { compounds: 1 });
      }, (h3, y2) => f3(h3, y2, "asc", g3)), r.suggest("min", () => Array.from(p3.keys()).filter((h3) => h3 !== null));
    }
    {
      let p3 = t.namespace("--container"), g3 = new z2((h3) => {
        switch (h3.kind) {
          case "functional": {
            if (h3.value === null) return null;
            let y2 = null;
            return h3.value.kind === "arbitrary" ? y2 = h3.value.value : h3.value.kind === "named" && (y2 = t.resolveValue(h3.value.value, ["--container"])), !y2 || y2.includes("var(") ? null : y2;
          }
          case "static":
          case "arbitrary":
          case "compound":
            return null;
        }
      });
      r.group(() => {
        r.functional("@max", (h3, y2) => {
          let w2 = g3.get(y2);
          if (w2 === null) return null;
          h3.nodes = [O2("@container", y2.modifier ? `${y2.modifier.value} (width < ${w2})` : `(width < ${w2})`, h3.nodes)];
        }, { compounds: 1 });
      }, (h3, y2) => f3(h3, y2, "desc", g3)), r.suggest("@max", () => Array.from(p3.keys()).filter((h3) => h3 !== null)), r.group(() => {
        r.functional("@", (h3, y2) => {
          let w2 = g3.get(y2);
          if (w2 === null) return null;
          h3.nodes = [O2("@container", y2.modifier ? `${y2.modifier.value} (width >= ${w2})` : `(width >= ${w2})`, h3.nodes)];
        }, { compounds: 1 }), r.functional("@min", (h3, y2) => {
          let w2 = g3.get(y2);
          if (w2 === null) return null;
          h3.nodes = [O2("@container", y2.modifier ? `${y2.modifier.value} (width >= ${w2})` : `(width >= ${w2})`, h3.nodes)];
        }, { compounds: 1 });
      }, (h3, y2) => f3(h3, y2, "asc", g3)), r.suggest("@min", () => Array.from(p3.keys()).filter((h3) => h3 !== null));
    }
  }
  return n("portrait", ["@media (orientation: portrait)"]), n("landscape", ["@media (orientation: landscape)"]), n("ltr", ['&:where(:dir(ltr), [dir="ltr"], [dir="ltr"] *)']), n("rtl", ['&:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *)']), n("dark", ["@media (prefers-color-scheme: dark)"]), n("starting", ["@starting-style"]), n("print", ["@media print"]), n("forced-colors", ["@media (forced-colors: active)"]), r;
}
function Ot(t) {
  if (t.includes("=")) {
    let [r, ...n] = u(t, "="), e = n.join("=").trim();
    if (e[0] === "'" || e[0] === '"') return t;
    if (e.length > 1) {
      let o = e[e.length - 1];
      if (e[e.length - 2] === " " && (o === "i" || o === "I" || o === "s" || o === "S")) return `${r}="${e.slice(0, -2)}" ${o}`;
    }
    return `${r}="${e}"`;
  }
  return t;
}
function Je(t, r) {
  j2(t, (n, { replaceWith: e }) => {
    if (n.kind === "at-rule" && n.name === "@slot") e(r);
    else if (n.kind === "at-rule" && (n.name === "@keyframes" || n.name === "@property")) return Object.assign(n, _2([O2(n.name, n.params, n.nodes)])), 1;
  });
}
function Dt(t) {
  let r = Vt(t), n = jt(t), e = new z2((c2) => xt(c2, a)), o = new z2((c2) => Array.from(kt(c2, a))), s2 = new z2((c2) => _t(c2, a)), a = { theme: t, utilities: r, variants: n, invalidCandidates: /* @__PURE__ */ new Set(), important: false, candidatesToCss(c2) {
    let d2 = [];
    for (let f3 of c2) {
      let p3 = false, { astNodes: g3 } = Z2([f3], this, { onInvalidCandidate() {
        p3 = true;
      } });
      g3 = te2(g3), g3.length === 0 || p3 ? d2.push(null) : d2.push(J2(g3));
    }
    return d2;
  }, getClassOrder(c2) {
    return Pt(this, c2);
  }, getClassList() {
    return Rt(this);
  }, getVariants() {
    return Kt(this);
  }, parseCandidate(c2) {
    return o.get(c2);
  }, parseVariant(c2) {
    return e.get(c2);
  }, compileAstNodes(c2) {
    return s2.get(c2);
  }, getVariantOrder() {
    let c2 = Array.from(e.values());
    c2.sort((g3, h3) => this.variants.compare(g3, h3));
    let d2 = /* @__PURE__ */ new Map(), f3, p3 = 0;
    for (let g3 of c2) g3 !== null && (f3 !== void 0 && this.variants.compare(f3, g3) !== 0 && p3++, d2.set(g3, p3), f3 = g3);
    return d2;
  }, resolveThemeValue(c2) {
    let d2 = c2.lastIndexOf("/"), f3 = null;
    d2 !== -1 && (f3 = c2.slice(d2 + 1).trim(), c2 = c2.slice(0, d2).trim());
    let p3 = t.get([c2]) ?? void 0;
    return f3 && p3 ? G2(p3, f3) : p3;
  } };
  return a;
}
var Ge = ["container-type", "pointer-events", "visibility", "position", "inset", "inset-inline", "inset-block", "inset-inline-start", "inset-inline-end", "top", "right", "bottom", "left", "isolation", "z-index", "order", "grid-column", "grid-column-start", "grid-column-end", "grid-row", "grid-row-start", "grid-row-end", "float", "clear", "--tw-container-component", "margin", "margin-inline", "margin-block", "margin-inline-start", "margin-inline-end", "margin-top", "margin-right", "margin-bottom", "margin-left", "box-sizing", "display", "field-sizing", "aspect-ratio", "height", "max-height", "min-height", "width", "max-width", "min-width", "flex", "flex-shrink", "flex-grow", "flex-basis", "table-layout", "caption-side", "border-collapse", "border-spacing", "transform-origin", "translate", "--tw-translate-x", "--tw-translate-y", "scale", "--tw-scale-x", "--tw-scale-y", "--tw-scale-z", "rotate", "--tw-rotate-x", "--tw-rotate-y", "--tw-rotate-z", "--tw-skew-x", "--tw-skew-y", "transform", "animation", "cursor", "touch-action", "--tw-pan-x", "--tw-pan-y", "--tw-pinch-zoom", "resize", "scroll-snap-type", "--tw-scroll-snap-strictness", "scroll-snap-align", "scroll-snap-stop", "scroll-margin", "scroll-margin-inline", "scroll-margin-block", "scroll-margin-inline-start", "scroll-margin-inline-end", "scroll-margin-top", "scroll-margin-right", "scroll-margin-bottom", "scroll-margin-left", "scroll-padding", "scroll-padding-inline", "scroll-padding-block", "scroll-padding-inline-start", "scroll-padding-inline-end", "scroll-padding-top", "scroll-padding-right", "scroll-padding-bottom", "scroll-padding-left", "list-style-position", "list-style-type", "list-style-image", "appearance", "columns", "break-before", "break-inside", "break-after", "grid-auto-columns", "grid-auto-flow", "grid-auto-rows", "grid-template-columns", "grid-template-rows", "flex-direction", "flex-wrap", "place-content", "place-items", "align-content", "align-items", "justify-content", "justify-items", "gap", "column-gap", "row-gap", "--tw-space-x-reverse", "--tw-space-y-reverse", "divide-x-width", "divide-y-width", "--tw-divide-y-reverse", "divide-style", "divide-color", "place-self", "align-self", "justify-self", "overflow", "overflow-x", "overflow-y", "overscroll-behavior", "overscroll-behavior-x", "overscroll-behavior-y", "scroll-behavior", "border-radius", "border-start-radius", "border-end-radius", "border-top-radius", "border-right-radius", "border-bottom-radius", "border-left-radius", "border-start-start-radius", "border-start-end-radius", "border-end-end-radius", "border-end-start-radius", "border-top-left-radius", "border-top-right-radius", "border-bottom-right-radius", "border-bottom-left-radius", "border-width", "border-inline-width", "border-block-width", "border-inline-start-width", "border-inline-end-width", "border-top-width", "border-right-width", "border-bottom-width", "border-left-width", "border-style", "border-inline-style", "border-block-style", "border-inline-start-style", "border-inline-end-style", "border-top-style", "border-right-style", "border-bottom-style", "border-left-style", "border-color", "border-inline-color", "border-block-color", "border-inline-start-color", "border-inline-end-color", "border-top-color", "border-right-color", "border-bottom-color", "border-left-color", "background-color", "background-image", "--tw-gradient-position", "--tw-gradient-stops", "--tw-gradient-via-stops", "--tw-gradient-from", "--tw-gradient-from-position", "--tw-gradient-via", "--tw-gradient-via-position", "--tw-gradient-to", "--tw-gradient-to-position", "box-decoration-break", "background-size", "background-attachment", "background-clip", "background-position", "background-repeat", "background-origin", "fill", "stroke", "stroke-width", "object-fit", "object-position", "padding", "padding-inline", "padding-block", "padding-inline-start", "padding-inline-end", "padding-top", "padding-right", "padding-bottom", "padding-left", "text-align", "text-indent", "vertical-align", "font-family", "font-size", "line-height", "font-weight", "letter-spacing", "text-wrap", "overflow-wrap", "word-break", "text-overflow", "hyphens", "white-space", "color", "text-transform", "font-style", "font-stretch", "font-variant-numeric", "text-decoration-line", "text-decoration-color", "text-decoration-style", "text-decoration-thickness", "text-underline-offset", "-webkit-font-smoothing", "placeholder-color", "caret-color", "accent-color", "color-scheme", "opacity", "background-blend-mode", "mix-blend-mode", "box-shadow", "--tw-shadow", "--tw-shadow-color", "--tw-ring-shadow", "--tw-ring-color", "--tw-inset-shadow", "--tw-inset-shadow-color", "--tw-inset-ring-shadow", "--tw-inset-ring-color", "--tw-ring-offset-width", "--tw-ring-offset-color", "outline", "outline-width", "outline-offset", "outline-color", "--tw-blur", "--tw-brightness", "--tw-contrast", "--tw-drop-shadow", "--tw-grayscale", "--tw-hue-rotate", "--tw-invert", "--tw-saturate", "--tw-sepia", "filter", "--tw-backdrop-blur", "--tw-backdrop-brightness", "--tw-backdrop-contrast", "--tw-backdrop-grayscale", "--tw-backdrop-hue-rotate", "--tw-backdrop-invert", "--tw-backdrop-opacity", "--tw-backdrop-saturate", "--tw-backdrop-sepia", "backdrop-filter", "transition-property", "transition-behavior", "transition-delay", "transition-duration", "transition-timing-function", "will-change", "contain", "content", "forced-color-adjust"];
function Ft(t, r) {
  let n = t.length, e = r.length, o = n < e ? n : e;
  for (let s2 = 0; s2 < o; s2++) {
    let a = t.charCodeAt(s2), c2 = r.charCodeAt(s2);
    if (a !== c2) {
      if (a >= 48 && a <= 57 && c2 >= 48 && c2 <= 57) {
        let d2 = s2, f3 = s2 + 1, p3 = s2, g3 = s2 + 1;
        for (a = t.charCodeAt(f3); a >= 48 && a <= 57; ) a = t.charCodeAt(++f3);
        for (c2 = r.charCodeAt(g3); c2 >= 48 && c2 <= 57; ) c2 = r.charCodeAt(++g3);
        let h3 = t.slice(d2, f3), y2 = r.slice(p3, g3);
        return Number(h3) - Number(y2) || (h3 < y2 ? -1 : 1);
      }
      return a - c2;
    }
  }
  return t.length - r.length;
}
function Z2(t, r, { onInvalidCandidate: n } = {}) {
  let e = /* @__PURE__ */ new Map(), o = [], s2 = /* @__PURE__ */ new Map();
  for (let c2 of t) {
    if (r.invalidCandidates.has(c2)) {
      n == null ? void 0 : n(c2);
      continue;
    }
    let d2 = r.parseCandidate(c2);
    if (d2.length === 0) {
      n == null ? void 0 : n(c2);
      continue;
    }
    s2.set(c2, d2);
  }
  let a = r.getVariantOrder();
  for (let [c2, d2] of s2) {
    let f3 = false;
    for (let p3 of d2) {
      let g3 = r.compileAstNodes(p3);
      if (g3.length !== 0) {
        try {
          ae(g3.map(({ node: h3 }) => h3), r);
        } catch {
          continue;
        }
        f3 = true;
        for (let { node: h3, propertySort: y2 } of g3) {
          let w2 = 0n;
          for (let v of p3.variants) w2 |= 1n << BigInt(a.get(v));
          e.set(h3, { properties: y2, variants: w2, candidate: c2 }), o.push(h3);
        }
      }
    }
    f3 || (n == null ? void 0 : n(c2));
  }
  return o.sort((c2, d2) => {
    let f3 = e.get(c2), p3 = e.get(d2);
    if (f3.variants - p3.variants !== 0n) return Number(f3.variants - p3.variants);
    let g3 = 0;
    for (; f3.properties.length < g3 && p3.properties.length < g3 && f3.properties[g3] === p3.properties[g3]; ) g3 += 1;
    return (f3.properties[g3] ?? 1 / 0) - (p3.properties[g3] ?? 1 / 0) || p3.properties.length - f3.properties.length || Ft(f3.candidate, p3.candidate);
  }), { astNodes: o, nodeSorting: e };
}
function _t(t, r) {
  let n = Ir(t, r);
  if (n.length === 0) return [];
  let e = [], o = `.${f2(t.raw)}`;
  for (let s2 of n) {
    let a = zr(s2);
    (t.important || r.important) && It(s2);
    let c2 = { kind: "rule", selector: o, nodes: s2 };
    for (let d2 of t.variants) if (se(c2, d2, r.variants) === null) return [];
    e.push({ node: c2, propertySort: a });
  }
  return e;
}
function se(t, r, n, e = 0) {
  if (r.kind === "arbitrary") {
    if (r.relative && e === 0) return null;
    t.nodes = [M2(r.selector, t.nodes)];
    return;
  }
  let { applyFn: o } = n.get(r.root);
  if (r.kind === "compound") {
    let a = O2("@slot");
    if (se(a, r.variant, n, e + 1) === null || r.root === "not" && a.nodes.length > 1) return null;
    for (let d2 of a.nodes) if (d2.kind !== "rule" && d2.kind !== "at-rule" || o(d2, r) === null) return null;
    j2(a.nodes, (d2) => {
      if ((d2.kind === "rule" || d2.kind === "at-rule") && d2.nodes.length <= 0) return d2.nodes = t.nodes, 1;
    }), t.nodes = a.nodes;
    return;
  }
  if (o(t, r) === null) return null;
}
function Ut(t) {
  var _a2;
  let r = ((_a2 = t.options) == null ? void 0 : _a2.types) ?? [];
  return r.length > 1 && r.includes("any");
}
function Ir(t, r) {
  if (t.kind === "arbitrary") {
    let a = t.value;
    return t.modifier && (a = W2(a, t.modifier, r.theme)), a === null ? [] : [[l3(t.property, a)]];
  }
  let n = r.utilities.get(t.root) ?? [], e = [], o = n.filter((a) => !Ut(a));
  for (let a of o) {
    if (a.kind !== t.kind) continue;
    let c2 = a.compileFn(t);
    if (c2 !== void 0) {
      if (c2 === null) return e;
      e.push(c2);
    }
  }
  if (e.length > 0) return e;
  let s2 = n.filter((a) => Ut(a));
  for (let a of s2) {
    if (a.kind !== t.kind) continue;
    let c2 = a.compileFn(t);
    if (c2 !== void 0) {
      if (c2 === null) return e;
      e.push(c2);
    }
  }
  return e;
}
function It(t) {
  for (let r of t) r.kind !== "at-root" && (r.kind === "declaration" ? r.important = true : (r.kind === "rule" || r.kind === "at-rule") && It(r.nodes));
}
function zr(t) {
  let r = /* @__PURE__ */ new Set(), n = t.slice();
  for (; n.length > 0; ) {
    let e = n.shift();
    if (e.kind === "declaration") {
      if (e.property === "--tw-sort") {
        let s2 = Ge.indexOf(e.value ?? "");
        if (s2 !== -1) {
          r.add(s2);
          break;
        }
      }
      let o = Ge.indexOf(e.property);
      o !== -1 && r.add(o);
    } else if (e.kind === "rule" || e.kind === "at-rule") for (let o of e.nodes) n.push(o);
  }
  return Array.from(r).sort((e, o) => e - o);
}
function ve(t, r) {
  let n = 0, e = M2("&", t), o = /* @__PURE__ */ new Set(), s2 = new z2(() => /* @__PURE__ */ new Set()), a = new z2(() => /* @__PURE__ */ new Set());
  j2([e], (g3, { parent: h3 }) => {
    if (g3.kind === "at-rule") {
      if (g3.name === "@keyframes") return j2(g3.nodes, (y2) => {
        if (y2.kind === "at-rule" && y2.name === "@apply") throw new Error("You cannot use `@apply` inside `@keyframes`.");
      }), 1;
      if (g3.name === "@utility") {
        let y2 = g3.params.replace(/-\*$/, "");
        a.get(y2).add(g3), j2(g3.nodes, (w2) => {
          if (!(w2.kind !== "at-rule" || w2.name !== "@apply")) {
            o.add(g3);
            for (let v of zt(w2, r)) s2.get(g3).add(v);
          }
        });
        return;
      }
      if (g3.name === "@apply") {
        if (h3 === null) return;
        n |= 1, o.add(h3);
        for (let y2 of zt(g3, r)) s2.get(h3).add(y2);
      }
    }
  });
  let c2 = /* @__PURE__ */ new Set(), d2 = [], f3 = /* @__PURE__ */ new Set();
  function p3(g3, h3 = []) {
    if (!c2.has(g3)) {
      if (f3.has(g3)) {
        let y2 = h3[(h3.indexOf(g3) + 1) % h3.length];
        throw g3.kind === "at-rule" && g3.name === "@utility" && y2.kind === "at-rule" && y2.name === "@utility" && j2(g3.nodes, (w2) => {
          if (w2.kind !== "at-rule" || w2.name !== "@apply") return;
          let v = w2.params.split(/\s+/g);
          for (let x of v) for (let V2 of r.parseCandidate(x)) switch (V2.kind) {
            case "arbitrary":
              break;
            case "static":
            case "functional":
              if (y2.params.replace(/-\*$/, "") === V2.root) throw new Error(`You cannot \`@apply\` the \`${x}\` utility here because it creates a circular dependency.`);
              break;
            default:
          }
        }), new Error(`Circular dependency detected:

${J2([g3])}
Relies on:

${J2([y2])}`);
      }
      f3.add(g3);
      for (let y2 of s2.get(g3)) for (let w2 of a.get(y2)) h3.push(g3), p3(w2, h3), h3.pop();
      c2.add(g3), f3.delete(g3), d2.push(g3);
    }
  }
  for (let g3 of o) p3(g3);
  return j2(d2, (g3, { replaceWith: h3 }) => {
    if (g3.kind !== "at-rule" || g3.name !== "@apply") return;
    let y2 = g3.params.split(/\s+/g);
    {
      let w2 = Z2(y2, r, { onInvalidCandidate: (x) => {
        throw new Error(`Cannot apply unknown utility class: ${x}`);
      } }).astNodes, v = [];
      for (let x of w2) if (x.kind === "rule") for (let V2 of x.nodes) v.push(V2);
      else v.push(x);
      h3(v);
    }
  }), n;
}
function* zt(t, r) {
  for (let n of t.params.split(/\s+/g)) for (let e of r.parseCandidate(n)) switch (e.kind) {
    case "arbitrary":
      break;
    case "static":
    case "functional":
      yield e.root;
      break;
    default:
  }
}
async function He(t, r, n, e = 0) {
  let o = 0, s2 = [];
  return j2(t, (a, { replaceWith: c2 }) => {
    if (a.kind === "at-rule" && (a.name === "@import" || a.name === "@reference")) {
      let d2 = Mr(L2(a.params));
      if (d2 === null) return;
      a.name === "@reference" && (d2.media = "reference"), o |= 2;
      let { uri: f3, layer: p3, media: g3, supports: h3 } = d2;
      if (f3.startsWith("data:") || f3.startsWith("http://") || f3.startsWith("https://")) return;
      let y2 = ee2({}, []);
      return s2.push((async () => {
        if (e > 100) throw new Error(`Exceeded maximum recursion depth while resolving \`${f3}\` in \`${r}\`)`);
        let w2 = await n(f3, r), v = X2(w2.content);
        await He(v, w2.base, n, e + 1), y2.nodes = Lr([ee2({ base: w2.base }, v)], p3, g3, h3);
      })()), c2(y2), 1;
    }
  }), s2.length > 0 && await Promise.all(s2), o;
}
function Mr(t) {
  let r, n = null, e = null, o = null;
  for (let s2 = 0; s2 < t.length; s2++) {
    let a = t[s2];
    if (a.kind !== "separator") {
      if (a.kind === "word" && !r) {
        if (!a.value || a.value[0] !== '"' && a.value[0] !== "'") return null;
        r = a.value.slice(1, -1);
        continue;
      }
      if (a.kind === "function" && a.value.toLowerCase() === "url" || !r) return null;
      if ((a.kind === "word" || a.kind === "function") && a.value.toLowerCase() === "layer") {
        if (n) return null;
        if (o) throw new Error("`layer(…)` in an `@import` should come before any other functions or conditions");
        "nodes" in a ? n = B2(a.nodes) : n = "";
        continue;
      }
      if (a.kind === "function" && a.value.toLowerCase() === "supports") {
        if (o) return null;
        o = B2(a.nodes);
        continue;
      }
      e = B2(t.slice(s2));
      break;
    }
  }
  return r ? { uri: r, layer: n, media: e, supports: o } : null;
}
function Lr(t, r, n, e) {
  let o = t;
  return r !== null && (o = [O2("@layer", r, o)]), n !== null && (o = [O2("@media", n, o)]), e !== null && (o = [O2("@supports", e[0] === "(" ? e : `(${e})`, o)]), o;
}
function ue2(t, r = null) {
  return Array.isArray(t) && t.length === 2 && typeof t[1] == "object" && typeof t[1] !== null ? r ? t[1][r] ?? null : t[0] : Array.isArray(t) && r === null ? t.join(", ") : typeof t == "string" && r === null ? t : null;
}
function Lt(t, { theme: r }, n) {
  for (let e of n) {
    let o = Re([e]);
    o && t.theme.clearNamespace(`--${o}`, 4);
  }
  for (let [e, o] of Wr(r)) {
    if (typeof o != "string" && typeof o != "number") continue;
    if (typeof o == "string" && (o = o.replace(/<alpha-value>/g, "1")), e[0] === "opacity" && (typeof o == "number" || typeof o == "string")) {
      let a = typeof o == "string" ? parseFloat(o) : o;
      a >= 0 && a <= 1 && (o = a * 100 + "%");
    }
    let s2 = Re(e);
    s2 && t.theme.add(`--${f2(s2)}`, "" + o, 7);
  }
  if (Object.hasOwn(r, "fontFamily")) {
    let e = 5;
    {
      let o = ue2(r.fontFamily.sans);
      o && t.theme.hasDefault("--font-sans") && (t.theme.add("--default-font-family", o, e), t.theme.add("--default-font-feature-settings", ue2(r.fontFamily.sans, "fontFeatureSettings") ?? "normal", e), t.theme.add("--default-font-variation-settings", ue2(r.fontFamily.sans, "fontVariationSettings") ?? "normal", e));
    }
    {
      let o = ue2(r.fontFamily.mono);
      o && t.theme.hasDefault("--font-mono") && (t.theme.add("--default-mono-font-family", o, e), t.theme.add("--default-mono-font-feature-settings", ue2(r.fontFamily.mono, "fontFeatureSettings") ?? "normal", e), t.theme.add("--default-mono-font-variation-settings", ue2(r.fontFamily.mono, "fontVariationSettings") ?? "normal", e));
    }
  }
  return r;
}
function Wr(t) {
  let r = [];
  return Wt(t, [], (n, e) => {
    if (qr(n)) return r.push([e, n]), 1;
    if (Jr(n)) {
      r.push([e, n[0]]);
      for (let o of Reflect.ownKeys(n[1])) r.push([[...e, `-${o}`], n[1][o]]);
      return 1;
    }
    if (Array.isArray(n) && n.every((o) => typeof o == "string")) return r.push([e, n.join(", ")]), 1;
  }), r;
}
var Br = /^[a-zA-Z0-9-_%/\.]+$/;
function Re(t) {
  if (t[0] === "container") return null;
  t = structuredClone(t), t[0] === "animation" && (t[0] = "animate"), t[0] === "aspectRatio" && (t[0] = "aspect"), t[0] === "borderRadius" && (t[0] = "radius"), t[0] === "boxShadow" && (t[0] = "shadow"), t[0] === "colors" && (t[0] = "color"), t[0] === "fontFamily" && (t[0] = "font"), t[0] === "fontSize" && (t[0] = "text"), t[0] === "letterSpacing" && (t[0] = "tracking"), t[0] === "lineHeight" && (t[0] = "leading"), t[0] === "maxWidth" && (t[0] = "container"), t[0] === "screens" && (t[0] = "breakpoint"), t[0] === "transitionTimingFunction" && (t[0] = "ease");
  for (let r of t) if (!Br.test(r)) return null;
  return t.map((r, n, e) => r === "1" && n !== e.length - 1 ? "" : r).map((r) => r.replaceAll(".", "_").replace(/([a-z])([A-Z])/g, (n, e, o) => `${e}-${o.toLowerCase()}`)).filter((r, n) => r !== "DEFAULT" || n !== t.length - 1).join("-");
}
function qr(t) {
  return typeof t == "number" || typeof t == "string";
}
function Jr(t) {
  if (!Array.isArray(t) || t.length !== 2 || typeof t[0] != "string" && typeof t[0] != "number" || t[1] === void 0 || t[1] === null || typeof t[1] != "object") return false;
  for (let r of Reflect.ownKeys(t[1])) if (typeof r != "string" || typeof t[1][r] != "string" && typeof t[1][r] != "number") return false;
  return true;
}
function Wt(t, r = [], n) {
  for (let e of Reflect.ownKeys(t)) {
    let o = t[e];
    if (o == null) continue;
    let s2 = [...r, e], a = n(o, s2) ?? 0;
    if (a !== 1) {
      if (a === 2) return 2;
      if (!(!Array.isArray(o) && typeof o != "object") && Wt(o, s2, n) === 2) return 2;
    }
  }
}
function Ke(t) {
  let r = [];
  for (let n of u(t, ".")) {
    if (!n.includes("[")) {
      r.push(n);
      continue;
    }
    let e = 0;
    for (; ; ) {
      let o = n.indexOf("[", e), s2 = n.indexOf("]", o);
      if (o === -1 || s2 === -1) break;
      o > e && r.push(n.slice(e, o)), r.push(n.slice(o + 1, s2)), e = s2 + 1;
    }
    e <= n.length - 1 && r.push(n.slice(e));
  }
  return r;
}
function fe(t) {
  if (Object.prototype.toString.call(t) !== "[object Object]") return false;
  let r = Object.getPrototypeOf(t);
  return r === null || Object.getPrototypeOf(r) === null;
}
function ye(t, r, n, e = []) {
  for (let o of r) if (o != null) for (let s2 of Reflect.ownKeys(o)) {
    e.push(s2);
    let a = n(t[s2], o[s2], e);
    a !== void 0 ? t[s2] = a : !fe(t[s2]) || !fe(o[s2]) ? t[s2] = o[s2] : t[s2] = ye({}, [t[s2], o[s2]], n, e), e.pop();
  }
  return t;
}
function Pe(t, r, n) {
  return function(o, s2) {
    let a = o.lastIndexOf("/"), c2 = null;
    a !== -1 && (c2 = o.slice(a + 1).trim(), o = o.slice(0, a).trim());
    let d2 = (() => {
      var _a2;
      let f3 = Ke(o), [p3, g3] = Gr(t.theme, f3), h3 = n(Bt(r() ?? {}, f3) ?? null);
      if (typeof h3 == "string" && (h3 = h3.replace("<alpha-value>", "1")), typeof p3 != "object") return typeof g3 != "object" && g3 & 4 ? h3 ?? p3 : p3;
      if (h3 !== null && typeof h3 == "object" && !Array.isArray(h3)) {
        let y2 = ye({}, [h3], (w2, v) => v);
        if (p3 === null && Object.hasOwn(h3, "__CSS_VALUES__")) {
          let w2 = {};
          for (let v in h3.__CSS_VALUES__) w2[v] = h3[v], delete y2[v];
          p3 = w2;
        }
        for (let w2 in p3) w2 !== "__CSS_VALUES__" && (((_a2 = h3 == null ? void 0 : h3.__CSS_VALUES__) == null ? void 0 : _a2[w2]) & 4 && Bt(y2, w2.split("-")) !== void 0 || (y2[c(w2)] = p3[w2]));
        return y2;
      }
      if (Array.isArray(p3) && Array.isArray(g3) && Array.isArray(h3)) {
        let y2 = p3[0], w2 = p3[1];
        g3[0] & 4 && (y2 = h3[0] ?? y2);
        for (let v of Object.keys(w2)) g3[1][v] & 4 && (w2[v] = h3[1][v] ?? w2[v]);
        return [y2, w2];
      }
      return p3 ?? h3;
    })();
    return c2 && typeof d2 == "string" && (d2 = G2(d2, c2)), d2 ?? s2;
  };
}
function Gr(t, r) {
  if (r.length === 1 && r[0].startsWith("--")) return [t.get([r[0]]), t.getOptions(r[0])];
  let n = Re(r), e = /* @__PURE__ */ new Map(), o = new z2(() => /* @__PURE__ */ new Map()), s2 = t.namespace(`--${n}`);
  if (s2.size === 0) return [null, 0];
  let a = /* @__PURE__ */ new Map();
  for (let [p3, g3] of s2) {
    if (!p3 || !p3.includes("--")) {
      e.set(p3, g3), a.set(p3, t.getOptions(p3 ? `--${n}-${p3}` : `--${n}`));
      continue;
    }
    let h3 = p3.indexOf("--"), y2 = p3.slice(0, h3), w2 = p3.slice(h3 + 2);
    w2 = w2.replace(/-([a-z])/g, (v, x) => x.toUpperCase()), o.get(y2 === "" ? null : y2).set(w2, [g3, t.getOptions(`--${n}${p3}`)]);
  }
  let c2 = t.getOptions(`--${n}`);
  for (let [p3, g3] of o) {
    let h3 = e.get(p3);
    if (typeof h3 != "string") continue;
    let y2 = {}, w2 = {};
    for (let [v, [x, V2]] of g3) y2[v] = x, w2[v] = V2;
    e.set(p3, [h3, y2]), a.set(p3, [c2, w2]);
  }
  let d2 = {}, f3 = {};
  for (let [p3, g3] of e) qt(d2, [p3 ?? "DEFAULT"], g3);
  for (let [p3, g3] of a) qt(f3, [p3 ?? "DEFAULT"], g3);
  return r[r.length - 1] === "DEFAULT" ? [(d2 == null ? void 0 : d2.DEFAULT) ?? null, f3.DEFAULT ?? 0] : "DEFAULT" in d2 && Object.keys(d2).length === 1 ? [d2.DEFAULT, f3.DEFAULT ?? 0] : (d2.__CSS_VALUES__ = f3, [d2, f3]);
}
function Bt(t, r) {
  for (let n = 0; n < r.length; ++n) {
    let e = r[n];
    if (t[e] === void 0) {
      if (r[n + 1] === void 0) return;
      r[n + 1] = `${e}-${r[n + 1]}`;
      continue;
    }
    t = t[e];
  }
  return t;
}
function qt(t, r, n) {
  for (let e of r.slice(0, -1)) t[e] === void 0 && (t[e] = {}), t = t[e];
  t[r[r.length - 1]] = n;
}
function Hr(t) {
  return { kind: "combinator", value: t };
}
function Yr(t, r) {
  return { kind: "function", value: t, nodes: r };
}
function we(t) {
  return { kind: "selector", value: t };
}
function Zr(t) {
  return { kind: "separator", value: t };
}
function Qr(t) {
  return { kind: "value", value: t };
}
function Oe(t, r, n = null) {
  for (let e = 0; e < t.length; e++) {
    let o = t[e], s2 = r(o, { parent: n, replaceWith(a) {
      Array.isArray(a) ? a.length === 0 ? t.splice(e, 1) : a.length === 1 ? t[e] = a[0] : t.splice(e, 1, ...a) : t[e] = a, e--;
    } }) ?? 0;
    if (s2 === 2) return 2;
    if (s2 !== 1 && o.kind === "function" && Oe(o.nodes, r, o) === 2) return 2;
  }
}
function je(t) {
  let r = "";
  for (let n of t) switch (n.kind) {
    case "combinator":
    case "selector":
    case "separator":
    case "value": {
      r += n.value;
      break;
    }
    case "function":
      r += n.value + "(" + je(n.nodes) + ")";
  }
  return r;
}
var Jt = 92;
var Xr = 93;
var Gt = 41;
var en = 58;
var Ht = 44;
var tn = 34;
var rn = 46;
var Yt = 62;
var Zt = 10;
var nn = 35;
var Qt = 91;
var Xt = 40;
var er = 43;
var on = 39;
var tr = 32;
var rr = 9;
var nr = 126;
function Ye(t) {
  t = t.replaceAll(`\r
`, `
`);
  let r = [], n = [], e = null, o = "", s2;
  for (let a = 0; a < t.length; a++) {
    let c2 = t.charCodeAt(a);
    switch (c2) {
      case Ht:
      case Yt:
      case Zt:
      case tr:
      case er:
      case rr:
      case nr: {
        if (o.length > 0) {
          let h3 = we(o);
          e ? e.nodes.push(h3) : r.push(h3), o = "";
        }
        let d2 = a, f3 = a + 1;
        for (; f3 < t.length && (s2 = t.charCodeAt(f3), !(s2 !== Ht && s2 !== Yt && s2 !== Zt && s2 !== tr && s2 !== er && s2 !== rr && s2 !== nr)); f3++) ;
        a = f3 - 1;
        let p3 = t.slice(d2, f3), g3 = p3.trim() === "," ? Zr(p3) : Hr(p3);
        e ? e.nodes.push(g3) : r.push(g3);
        break;
      }
      case Xt: {
        let d2 = Yr(o, []);
        if (o = "", d2.value !== ":not" && d2.value !== ":where" && d2.value !== ":has" && d2.value !== ":is") {
          let f3 = a + 1, p3 = 0;
          for (let h3 = a + 1; h3 < t.length; h3++) {
            if (s2 = t.charCodeAt(h3), s2 === Xt) {
              p3++;
              continue;
            }
            if (s2 === Gt) {
              if (p3 === 0) {
                a = h3;
                break;
              }
              p3--;
            }
          }
          let g3 = a;
          d2.nodes.push(Qr(t.slice(f3, g3))), o = "", a = g3, r.push(d2);
          break;
        }
        e ? e.nodes.push(d2) : r.push(d2), n.push(d2), e = d2;
        break;
      }
      case Gt: {
        let d2 = n.pop();
        if (o.length > 0) {
          let f3 = we(o);
          d2.nodes.push(f3), o = "";
        }
        n.length > 0 ? e = n[n.length - 1] : e = null;
        break;
      }
      case rn:
      case en:
      case nn: {
        if (o.length > 0) {
          let d2 = we(o);
          e ? e.nodes.push(d2) : r.push(d2);
        }
        o = String.fromCharCode(c2);
        break;
      }
      case Qt: {
        if (o.length > 0) {
          let p3 = we(o);
          e ? e.nodes.push(p3) : r.push(p3);
        }
        o = "";
        let d2 = a, f3 = 0;
        for (let p3 = a + 1; p3 < t.length; p3++) {
          if (s2 = t.charCodeAt(p3), s2 === Qt) {
            f3++;
            continue;
          }
          if (s2 === Xr) {
            if (f3 === 0) {
              a = p3;
              break;
            }
            f3--;
          }
        }
        o += t.slice(d2, a + 1);
        break;
      }
      case on:
      case tn: {
        let d2 = a;
        for (let f3 = a + 1; f3 < t.length; f3++) if (s2 = t.charCodeAt(f3), s2 === Jt) f3 += 1;
        else if (s2 === c2) {
          a = f3;
          break;
        }
        o += t.slice(d2, a + 1);
        break;
      }
      case Jt: {
        let d2 = t.charCodeAt(a + 1);
        o += String.fromCharCode(c2) + String.fromCharCode(d2), a += 1;
        break;
      }
      default:
        o += String.fromCharCode(c2);
    }
  }
  return o.length > 0 && r.push(we(o)), r;
}
var ir = /^[a-z@][a-zA-Z0-9/%._-]*$/;
function Ze({ designSystem: t, ast: r, resolvedConfig: n, featuresRef: e, referenceMode: o }) {
  let s2 = { addBase(a) {
    if (o) return;
    let c2 = H2(a);
    e.current |= ae(c2, t), r.push(O2("@layer", "base", c2));
  }, addVariant(a, c2) {
    if (!Ee.test(a)) throw new Error(`\`addVariant('${a}')\` defines an invalid variant name. Variants should only contain alphanumeric, dashes or underscore characters.`);
    typeof c2 == "string" || Array.isArray(c2) ? t.variants.static(a, (d2) => {
      d2.nodes = or(c2, d2.nodes);
    }, { compounds: ie2(typeof c2 == "string" ? [c2] : c2) }) : typeof c2 == "object" && t.variants.fromAst(a, H2(c2));
  }, matchVariant(a, c2, d2) {
    function f3(g3, h3, y2) {
      let w2 = c2(g3, { modifier: (h3 == null ? void 0 : h3.value) ?? null });
      return or(w2, y2);
    }
    let p3 = Object.keys((d2 == null ? void 0 : d2.values) ?? {});
    t.variants.group(() => {
      t.variants.functional(a, (g3, h3) => {
        if (!h3.value) {
          if ((d2 == null ? void 0 : d2.values) && "DEFAULT" in d2.values) {
            g3.nodes = f3(d2.values.DEFAULT, h3.modifier, g3.nodes);
            return;
          }
          return null;
        }
        if (h3.value.kind === "arbitrary") g3.nodes = f3(h3.value.value, h3.modifier, g3.nodes);
        else if (h3.value.kind === "named" && (d2 == null ? void 0 : d2.values)) {
          let y2 = d2.values[h3.value.value];
          if (typeof y2 != "string") return;
          g3.nodes = f3(y2, h3.modifier, g3.nodes);
        }
      });
    }, (g3, h3) => {
      var _a2, _b, _c, _d;
      if (g3.kind !== "functional" || h3.kind !== "functional") return 0;
      let y2 = g3.value ? g3.value.value : "DEFAULT", w2 = h3.value ? h3.value.value : "DEFAULT", v = ((_a2 = d2 == null ? void 0 : d2.values) == null ? void 0 : _a2[y2]) ?? y2, x = ((_b = d2 == null ? void 0 : d2.values) == null ? void 0 : _b[w2]) ?? w2;
      if (d2 && typeof d2.sort == "function") return d2.sort({ value: v, modifier: ((_c = g3.modifier) == null ? void 0 : _c.value) ?? null }, { value: x, modifier: ((_d = h3.modifier) == null ? void 0 : _d.value) ?? null });
      let V2 = p3.indexOf(y2), S2 = p3.indexOf(w2);
      return V2 = V2 === -1 ? p3.length : V2, S2 = S2 === -1 ? p3.length : S2, V2 !== S2 ? V2 - S2 : v < x ? -1 : 1;
    });
  }, addUtilities(a) {
    a = Array.isArray(a) ? a : [a];
    let c2 = a.flatMap((f3) => Object.entries(f3));
    c2 = c2.flatMap(([f3, p3]) => u(f3, ",").map((g3) => [g3.trim(), p3]));
    let d2 = new z2(() => []);
    for (let [f3, p3] of c2) {
      if (f3.startsWith("@keyframes ")) {
        o || r.push(M2(f3, H2(p3)));
        continue;
      }
      let g3 = Ye(f3), h3 = false;
      if (Oe(g3, (y2) => {
        if (y2.kind === "selector" && y2.value[0] === "." && ir.test(y2.value.slice(1))) {
          let w2 = y2.value;
          y2.value = "&";
          let v = je(g3), x = w2.slice(1), V2 = v === "&" ? H2(p3) : [M2(v, H2(p3))];
          d2.get(x).push(...V2), h3 = true, y2.value = w2;
          return;
        }
        if (y2.kind === "function" && y2.value === ":not") return 1;
      }), !h3) throw new Error(`\`addUtilities({ '${f3}' : … })\` defines an invalid utility selector. Utilities must be a single class name and start with a lowercase letter, eg. \`.scrollbar-none\`.`);
    }
    for (let [f3, p3] of d2) t.theme.prefix && j2(p3, (g3) => {
      if (g3.kind === "rule") {
        let h3 = Ye(g3.selector);
        Oe(h3, (y2) => {
          y2.kind === "selector" && y2.value[0] === "." && (y2.value = `.${t.theme.prefix}\\:${y2.value.slice(1)}`);
        }), g3.selector = je(h3);
      }
    }), t.utilities.static(f3, () => {
      let g3 = structuredClone(p3);
      return e.current |= ve(g3, t), g3;
    });
  }, matchUtilities(a, c2) {
    let d2 = (c2 == null ? void 0 : c2.type) ? Array.isArray(c2 == null ? void 0 : c2.type) ? c2.type : [c2.type] : ["any"];
    for (let [p3, g3] of Object.entries(a)) {
      let h3 = function({ negative: y2 }) {
        return (w2) => {
          var _a2, _b;
          if (((_a2 = w2.value) == null ? void 0 : _a2.kind) === "arbitrary" && d2.length > 0 && !d2.includes("any") && (w2.value.dataType && !d2.includes(w2.value.dataType) || !w2.value.dataType && !pe(w2.value.value, d2))) return;
          let v = d2.includes("color"), x = null, V2 = false;
          {
            let E2 = (c2 == null ? void 0 : c2.values) ?? {};
            v && (E2 = Object.assign({ inherit: "inherit", transparent: "transparent", current: "currentColor" }, E2)), w2.value ? w2.value.kind === "arbitrary" ? x = w2.value.value : w2.value.fraction && E2[w2.value.fraction] ? (x = E2[w2.value.fraction], V2 = true) : E2[w2.value.value] ? x = E2[w2.value.value] : E2.__BARE_VALUE__ && (x = E2.__BARE_VALUE__(w2.value) ?? null, V2 = (w2.value.fraction !== null && (x == null ? void 0 : x.includes("/"))) ?? false) : x = E2.DEFAULT ?? null;
          }
          if (x === null) return;
          let S2;
          {
            let E2 = (c2 == null ? void 0 : c2.modifiers) ?? null;
            w2.modifier ? E2 === "any" || w2.modifier.kind === "arbitrary" ? S2 = w2.modifier.value : (E2 == null ? void 0 : E2[w2.modifier.value]) ? S2 = E2[w2.modifier.value] : v && !Number.isNaN(Number(w2.modifier.value)) ? S2 = `${w2.modifier.value}%` : S2 = null : S2 = null;
          }
          if (w2.modifier && S2 === null && !V2) return ((_b = w2.value) == null ? void 0 : _b.kind) === "arbitrary" ? null : void 0;
          v && S2 !== null && (x = G2(x, S2)), y2 && (x = `calc(${x} * -1)`);
          let R2 = H2(g3(x, { modifier: S2 }));
          return e.current |= ve(R2, t), R2;
        };
      };
      var f3 = h3;
      if (!ir.test(p3)) throw new Error(`\`matchUtilities({ '${p3}' : … })\` defines an invalid utility name. Utilities should be alphanumeric and start with a lowercase letter, eg. \`scrollbar\`.`);
      (c2 == null ? void 0 : c2.supportsNegativeValues) && t.utilities.functional(`-${p3}`, h3({ negative: true }), { types: d2 }), t.utilities.functional(p3, h3({ negative: false }), { types: d2 }), t.utilities.suggest(p3, () => {
        let y2 = (c2 == null ? void 0 : c2.values) ?? {}, w2 = new Set(Object.keys(y2));
        w2.delete("__BARE_VALUE__"), w2.has("DEFAULT") && (w2.delete("DEFAULT"), w2.add(null));
        let v = (c2 == null ? void 0 : c2.modifiers) ?? {}, x = v === "any" ? [] : Object.keys(v);
        return [{ supportsNegative: (c2 == null ? void 0 : c2.supportsNegativeValues) ?? false, values: Array.from(w2), modifiers: x }];
      });
    }
  }, addComponents(a, c2) {
    this.addUtilities(a, c2);
  }, matchComponents(a, c2) {
    this.matchUtilities(a, c2);
  }, theme: Pe(t, () => n.theme ?? {}, (a) => a), prefix(a) {
    return a;
  }, config(a, c2) {
    let d2 = n;
    if (!a) return d2;
    let f3 = Ke(a);
    for (let p3 = 0; p3 < f3.length; ++p3) {
      let g3 = f3[p3];
      if (d2[g3] === void 0) return c2;
      d2 = d2[g3];
    }
    return d2 ?? c2;
  } };
  return s2.addComponents = s2.addComponents.bind(s2), s2.matchComponents = s2.matchComponents.bind(s2), s2;
}
function H2(t) {
  let r = [];
  t = Array.isArray(t) ? t : [t];
  let n = t.flatMap((e) => Object.entries(e));
  for (let [e, o] of n) if (typeof o != "object") !e.startsWith("--") && o === "@slot" ? r.push(M2(e, [O2("@slot")])) : (e = e.replace(/([A-Z])/g, "-$1").toLowerCase(), r.push(l3(e, String(o))));
  else if (Array.isArray(o)) for (let s2 of o) typeof s2 == "string" ? r.push(l3(e, s2)) : r.push(M2(e, H2(s2)));
  else o !== null && r.push(M2(e, H2(o)));
  return r;
}
function or(t, r) {
  return (typeof t == "string" ? [t] : t).flatMap((e) => {
    if (e.trim().endsWith("}")) {
      let o = e.replace("}", "{@slot}}"), s2 = X2(o);
      return Je(s2, r), s2;
    } else return M2(e, r);
  });
}
function lr(t, r, n) {
  for (let e of an(r)) t.theme.addKeyframes(e);
}
function an(t) {
  let r = [];
  if ("keyframes" in t.theme) for (let [n, e] of Object.entries(t.theme.keyframes)) r.push(O2("@keyframes", n, H2(e)));
  return r;
}
function ar(t) {
  return { theme: { ...be, colors: ({ theme: r }) => r("color", {}), extend: { fontSize: ({ theme: r }) => ({ ...r("text", {}) }), boxShadow: ({ theme: r }) => ({ ...r("shadow", {}) }), animation: ({ theme: r }) => ({ ...r("animate", {}) }), aspectRatio: ({ theme: r }) => ({ ...r("aspect", {}) }), borderRadius: ({ theme: r }) => ({ ...r("radius", {}) }), screens: ({ theme: r }) => ({ ...r("breakpoint", {}) }), letterSpacing: ({ theme: r }) => ({ ...r("tracking", {}) }), lineHeight: ({ theme: r }) => ({ ...r("leading", {}) }), transitionDuration: { DEFAULT: t.get(["--default-transition-duration"]) ?? null }, transitionTimingFunction: { DEFAULT: t.get(["--default-transition-timing-function"]) ?? null }, maxWidth: ({ theme: r }) => ({ ...r("container", {}) }) } } };
}
var sn = { blocklist: [], future: {}, prefix: "", important: false, darkMode: null, theme: {}, plugins: [], content: { files: [] } };
function Xe(t, r) {
  let n = { design: t, configs: [], plugins: [], content: { files: [] }, theme: {}, extend: {}, result: structuredClone(sn) };
  for (let o of r) Qe(n, o);
  for (let o of n.configs) "darkMode" in o && o.darkMode !== void 0 && (n.result.darkMode = o.darkMode ?? null), "prefix" in o && o.prefix !== void 0 && (n.result.prefix = o.prefix ?? ""), "blocklist" in o && o.blocklist !== void 0 && (n.result.blocklist = o.blocklist ?? []), "important" in o && o.important !== void 0 && (n.result.important = o.important ?? false);
  let e = fn(n);
  return { resolvedConfig: { ...n.result, content: n.content, theme: n.theme, plugins: n.plugins }, replacedThemeKeys: e };
}
function un(t, r) {
  if (Array.isArray(t) && fe(t[0])) return t.concat(r);
  if (Array.isArray(r) && fe(r[0]) && fe(t)) return [t, ...r];
  if (Array.isArray(r)) return r;
}
function Qe(t, { config: r, base: n, path: e, reference: o }) {
  let s2 = [];
  for (let d2 of r.plugins ?? []) "__isOptionsFunction" in d2 ? s2.push({ ...d2(), reference: o }) : "handler" in d2 ? s2.push({ ...d2, reference: o }) : s2.push({ handler: d2, reference: o });
  if (Array.isArray(r.presets) && r.presets.length === 0) throw new Error("Error in the config file/plugin/preset. An empty preset (`preset: []`) is not currently supported.");
  for (let d2 of r.presets ?? []) Qe(t, { path: e, base: n, config: d2, reference: o });
  for (let d2 of s2) t.plugins.push(d2), d2.config && Qe(t, { path: e, base: n, config: d2.config, reference: !!d2.reference });
  let a = r.content ?? [], c2 = Array.isArray(a) ? a : a.files;
  for (let d2 of c2) t.content.files.push(typeof d2 == "object" ? d2 : { base: n, pattern: d2 });
  t.configs.push(r);
}
function fn(t) {
  var _a2;
  let r = /* @__PURE__ */ new Set(), n = Pe(t.design, () => t.theme, o), e = Object.assign(n, { theme: n, colors: l });
  function o(s2) {
    return typeof s2 == "function" ? s2(e) ?? null : s2 ?? null;
  }
  for (let s2 of t.configs) {
    let a = s2.theme ?? {}, c2 = a.extend ?? {};
    for (let d2 in a) d2 !== "extend" && r.add(d2);
    Object.assign(t.theme, a);
    for (let d2 in c2) (_a2 = t.extend)[d2] ?? (_a2[d2] = []), t.extend[d2].push(c2[d2]);
  }
  delete t.theme.extend;
  for (let s2 in t.extend) {
    let a = [t.theme[s2], ...t.extend[s2]];
    t.theme[s2] = () => {
      let c2 = a.map(o);
      return ye({}, c2, un);
    };
  }
  for (let s2 in t.theme) t.theme[s2] = o(t.theme[s2]);
  if (t.theme.screens && typeof t.theme.screens == "object") for (let s2 of Object.keys(t.theme.screens)) {
    let a = t.theme.screens[s2];
    a && typeof a == "object" && ("raw" in a || "max" in a || "min" in a && (t.theme.screens[s2] = a.min));
  }
  return r;
}
function sr(t, r) {
  let n = t.theme.container || {};
  if (typeof n != "object" || n === null) return;
  let e = cn(n, r);
  e.length !== 0 && r.utilities.static("container", () => structuredClone(e));
}
function cn({ center: t, padding: r, screens: n }, e) {
  let o = [], s2 = null;
  if (t && o.push(l3("margin-inline", "auto")), (typeof r == "string" || typeof r == "object" && r !== null && "DEFAULT" in r) && o.push(l3("padding-inline", typeof r == "string" ? r : r.DEFAULT)), typeof n == "object" && n !== null) {
    s2 = /* @__PURE__ */ new Map();
    let a = Array.from(e.theme.namespace("--breakpoint").entries());
    if (a.sort((c2, d2) => re2(c2[1], d2[1], "asc")), a.length > 0) {
      let [c2] = a[0];
      o.push(O2("@media", `(width >= --theme(--breakpoint-${c2}))`, [l3("max-width", "none")]));
    }
    for (let [c2, d2] of Object.entries(n)) {
      if (typeof d2 == "object") if ("min" in d2) d2 = d2.min;
      else continue;
      s2.set(c2, O2("@media", `(width >= ${d2})`, [l3("max-width", d2)]));
    }
  }
  if (typeof r == "object" && r !== null) {
    let a = Object.entries(r).filter(([c2]) => c2 !== "DEFAULT").map(([c2, d2]) => [c2, e.theme.resolveValue(c2, ["--breakpoint"]), d2]).filter(Boolean);
    a.sort((c2, d2) => re2(c2[1], d2[1], "asc"));
    for (let [c2, , d2] of a) if (s2 && s2.has(c2)) s2.get(c2).nodes.push(l3("padding-inline", d2));
    else {
      if (s2) continue;
      o.push(O2("@media", `(width >= theme(--breakpoint-${c2}))`, [l3("padding-inline", d2)]));
    }
  }
  if (s2) for (let [, a] of s2) o.push(a);
  return o;
}
function ur({ addVariant: t, config: r }) {
  let n = r("darkMode", null), [e, o = ".dark"] = Array.isArray(n) ? n : [n];
  if (e === "variant") {
    let s2;
    if (Array.isArray(o) || typeof o == "function" ? s2 = o : typeof o == "string" && (s2 = [o]), Array.isArray(s2)) for (let a of s2) a === ".dark" ? (e = false, console.warn('When using `variant` for `darkMode`, you must provide a selector.\nExample: `darkMode: ["variant", ".your-selector &"]`')) : a.includes("&") || (e = false, console.warn('When using `variant` for `darkMode`, your selector must contain `&`.\nExample `darkMode: ["variant", ".your-selector &"]`'));
    o = s2;
  }
  e === null || (e === "selector" ? t("dark", `&:where(${o}, ${o} *)`) : e === "media" ? t("dark", "@media (prefers-color-scheme: dark)") : e === "variant" ? t("dark", o) : e === "class" && t("dark", `&:is(${o} *)`));
}
function fr(t) {
  for (let [r, n] of [["t", "top"], ["tr", "top right"], ["r", "right"], ["br", "bottom right"], ["b", "bottom"], ["bl", "bottom left"], ["l", "left"], ["tl", "top left"]]) t.utilities.static(`bg-gradient-to-${r}`, () => [l3("--tw-gradient-position", `to ${n} in oklab,`), l3("background-image", "linear-gradient(var(--tw-gradient-stops))")]);
  t.utilities.functional("max-w-screen", (r) => {
    if (!r.value || r.value.kind === "arbitrary") return;
    let n = t.theme.resolve(r.value.value, ["--breakpoint"]);
    if (n) return [l3("max-width", n)];
  }), t.utilities.static("overflow-ellipsis", () => [l3("text-overflow", "ellipsis")]), t.utilities.static("decoration-slice", () => [l3("-webkit-box-decoration-break", "slice"), l3("box-decoration-break", "slice")]), t.utilities.static("decoration-clone", () => [l3("-webkit-box-decoration-break", "clone"), l3("box-decoration-break", "clone")]), t.utilities.functional("flex-shrink", (r) => {
    if (!r.modifier) {
      if (!r.value) return [l3("flex-shrink", "1")];
      if (r.value.kind === "arbitrary") return [l3("flex-shrink", r.value.value)];
      if (p(r.value.value)) return [l3("flex-shrink", r.value.value)];
    }
  }), t.utilities.functional("flex-grow", (r) => {
    if (!r.modifier) {
      if (!r.value) return [l3("flex-grow", "1")];
      if (r.value.kind === "arbitrary") return [l3("flex-grow", r.value.value)];
      if (p(r.value.value)) return [l3("flex-grow", r.value.value)];
    }
  });
}
function cr(t, r) {
  var _a2;
  let n = t.theme.screens || {}, e = ((_a2 = r.variants.get("min")) == null ? void 0 : _a2.order) ?? 0, o = [];
  for (let [a, c2] of Object.entries(n)) {
    let h3 = function(y2) {
      r.variants.static(a, (w2) => {
        w2.nodes = [O2("@media", g3, w2.nodes)];
      }, { order: y2 });
    };
    var s2 = h3;
    let d2 = r.variants.get(a), f3 = r.theme.resolveValue(a, ["--breakpoint"]);
    if (d2 && f3 && !r.theme.hasDefault(`--breakpoint-${a}`)) continue;
    let p3 = true;
    typeof c2 == "string" && (p3 = false);
    let g3 = dn(c2);
    p3 ? o.push(h3) : h3(e);
  }
  if (o.length !== 0) {
    for (let [, a] of r.variants.variants) a.order > e && (a.order += o.length);
    r.variants.compareFns = new Map(Array.from(r.variants.compareFns).map(([a, c2]) => (a > e && (a += o.length), [a, c2])));
    for (let [a, c2] of o.entries()) c2(e + a + 1);
  }
}
function dn(t) {
  return (Array.isArray(t) ? t : [t]).map((n) => typeof n == "string" ? { min: n } : n && typeof n == "object" ? n : null).map((n) => {
    if (n === null) return null;
    if ("raw" in n) return n.raw;
    let e = "";
    return n.max !== void 0 && (e += `${n.max} >= `), e += "width", n.min !== void 0 && (e += ` >= ${n.min}`), `(${e})`;
  }).filter(Boolean).join(", ");
}
function dr(t, r) {
  let n = t.theme.aria || {}, e = t.theme.supports || {}, o = t.theme.data || {};
  if (Object.keys(n).length > 0) {
    let s2 = r.variants.get("aria"), a = s2 == null ? void 0 : s2.applyFn, c2 = s2 == null ? void 0 : s2.compounds;
    r.variants.functional("aria", (d2, f3) => {
      let p3 = f3.value;
      return p3 && p3.kind === "named" && p3.value in n ? a == null ? void 0 : a(d2, { ...f3, value: { kind: "arbitrary", value: n[p3.value] } }) : a == null ? void 0 : a(d2, f3);
    }, { compounds: c2 });
  }
  if (Object.keys(e).length > 0) {
    let s2 = r.variants.get("supports"), a = s2 == null ? void 0 : s2.applyFn, c2 = s2 == null ? void 0 : s2.compounds;
    r.variants.functional("supports", (d2, f3) => {
      let p3 = f3.value;
      return p3 && p3.kind === "named" && p3.value in e ? a == null ? void 0 : a(d2, { ...f3, value: { kind: "arbitrary", value: e[p3.value] } }) : a == null ? void 0 : a(d2, f3);
    }, { compounds: c2 });
  }
  if (Object.keys(o).length > 0) {
    let s2 = r.variants.get("data"), a = s2 == null ? void 0 : s2.applyFn, c2 = s2 == null ? void 0 : s2.compounds;
    r.variants.functional("data", (d2, f3) => {
      let p3 = f3.value;
      return p3 && p3.kind === "named" && p3.value in o ? a == null ? void 0 : a(d2, { ...f3, value: { kind: "arbitrary", value: o[p3.value] } }) : a == null ? void 0 : a(d2, f3);
    }, { compounds: c2 });
  }
}
var pn = /^[a-z]+$/;
async function gr({ designSystem: t, base: r, ast: n, loadModule: e, globs: o }) {
  let s2 = 0, a = [], c2 = [];
  j2(n, (g3, { parent: h3, replaceWith: y2, context: w2 }) => {
    if (g3.kind === "at-rule") {
      if (g3.name === "@plugin") {
        if (h3 !== null) throw new Error("`@plugin` cannot be nested.");
        let v = g3.params.slice(1, -1);
        if (v.length === 0) throw new Error("`@plugin` must have a path.");
        let x = {};
        for (let V2 of g3.nodes ?? []) {
          if (V2.kind !== "declaration") throw new Error(`Unexpected \`@plugin\` option:

${J2([V2])}

\`@plugin\` options must be a flat list of declarations.`);
          if (V2.value === void 0) continue;
          let S2 = V2.value, R2 = u(S2, ",").map((E2) => {
            if (E2 = E2.trim(), E2 === "null") return null;
            if (E2 === "true") return true;
            if (E2 === "false") return false;
            if (Number.isNaN(Number(E2))) {
              if (E2[0] === '"' && E2[E2.length - 1] === '"' || E2[0] === "'" && E2[E2.length - 1] === "'") return E2.slice(1, -1);
              if (E2[0] === "{" && E2[E2.length - 1] === "}") throw new Error(`Unexpected \`@plugin\` option: Value of declaration \`${J2([V2]).trim()}\` is not supported.

Using an object as a plugin option is currently only supported in JavaScript configuration files.`);
            } else return Number(E2);
            return E2;
          });
          x[V2.property] = R2.length === 1 ? R2[0] : R2;
        }
        a.push([{ id: v, base: w2.base, reference: !!w2.reference }, Object.keys(x).length > 0 ? x : null]), y2([]), s2 |= 4;
        return;
      }
      if (g3.name === "@config") {
        if (g3.nodes.length > 0) throw new Error("`@config` cannot have a body.");
        if (h3 !== null) throw new Error("`@config` cannot be nested.");
        c2.push({ id: g3.params.slice(1, -1), base: w2.base, reference: !!w2.reference }), y2([]), s2 |= 4;
        return;
      }
    }
  }), fr(t);
  let d2 = t.resolveThemeValue;
  if (t.resolveThemeValue = function(h3) {
    return h3.startsWith("--") ? d2(h3) : (s2 |= pr({ designSystem: t, base: r, ast: n, globs: o, configs: [], pluginDetails: [] }), t.resolveThemeValue(h3));
  }, !a.length && !c2.length) return 0;
  let [f3, p3] = await Promise.all([Promise.all(c2.map(async ({ id: g3, base: h3, reference: y2 }) => {
    let w2 = await e(g3, h3, "config");
    return { path: g3, base: w2.base, config: w2.module, reference: y2 };
  })), Promise.all(a.map(async ([{ id: g3, base: h3, reference: y2 }, w2]) => {
    let v = await e(g3, h3, "plugin");
    return { path: g3, base: v.base, plugin: v.module, options: w2, reference: y2 };
  }))]);
  return s2 |= pr({ designSystem: t, base: r, ast: n, globs: o, configs: f3, pluginDetails: p3 }), s2;
}
function pr({ designSystem: t, base: r, ast: n, globs: e, configs: o, pluginDetails: s2 }) {
  let a = 0, d2 = [...s2.map((v) => {
    if (!v.options) return { config: { plugins: [v.plugin] }, base: v.base, reference: v.reference };
    if ("__isOptionsFunction" in v.plugin) return { config: { plugins: [v.plugin(v.options)] }, base: v.base, reference: v.reference };
    throw new Error(`The plugin "${v.path}" does not accept options`);
  }), ...o], { resolvedConfig: f3 } = Xe(t, [{ config: ar(t.theme), base: r, reference: true }, ...d2, { config: { plugins: [ur] }, base: r, reference: true }]), { resolvedConfig: p3, replacedThemeKeys: g3 } = Xe(t, d2);
  t.resolveThemeValue = function(x, V2) {
    let S2 = y2.theme(x, V2);
    if (Array.isArray(S2) && S2.length === 2) return S2[0];
    if (Array.isArray(S2)) return S2.join(", ");
    if (typeof S2 == "string") return S2;
  };
  let h3 = { designSystem: t, ast: n, resolvedConfig: f3, featuresRef: { set current(v) {
    a |= v;
  } } }, y2 = Ze({ ...h3, referenceMode: false }), w2;
  for (let { handler: v, reference: x } of f3.plugins) x ? (w2 || (w2 = Ze({ ...h3, referenceMode: true })), v(w2)) : v(y2);
  if (Lt(t, p3, g3), lr(t, p3, g3), dr(p3, t), cr(p3, t), sr(p3, t), !t.theme.prefix && f3.prefix) {
    if (f3.prefix.endsWith("-") && (f3.prefix = f3.prefix.slice(0, -1), console.warn(`The prefix "${f3.prefix}" is invalid. Prefixes must be lowercase ASCII letters (a-z) only and is written as a variant before all utilities. We have fixed up the prefix for you. Remove the trailing \`-\` to silence this warning.`)), !pn.test(f3.prefix)) throw new Error(`The prefix "${f3.prefix}" is invalid. Prefixes must be lowercase ASCII letters (a-z) only.`);
    t.theme.prefix = f3.prefix;
  }
  if (!t.important && f3.important === true && (t.important = true), typeof f3.important == "string") {
    let v = f3.important;
    j2(n, (x, { replaceWith: V2, parent: S2 }) => {
      if (x.kind === "at-rule" && !(x.name !== "@tailwind" || x.params !== "utilities")) return (S2 == null ? void 0 : S2.kind) === "rule" && S2.selector === v ? 2 : (V2(F2(v, [x])), 2);
    });
  }
  for (let v of f3.blocklist) t.invalidCandidates.add(v);
  for (let v of f3.content.files) {
    if ("raw" in v) throw new Error(`Error in the config file/plugin/preset. The \`content\` key contains a \`raw\` entry:

${JSON.stringify(v, null, 2)}

This feature is not currently supported.`);
    e.push(v);
  }
  return a;
}
var gn = /^[a-z]+$/;
function mn() {
  throw new Error("No `loadModule` function provided to `compile`");
}
function hn() {
  throw new Error("No `loadStylesheet` function provided to `compile`");
}
function vn(t) {
  let r = 0, n = null;
  for (let e of u(t, " ")) e === "reference" ? r |= 2 : e === "inline" ? r |= 1 : e === "default" ? r |= 4 : e.startsWith("prefix(") && e.endsWith(")") && (n = e.slice(7, -1));
  return [r, n];
}
var me = ((c2) => (c2[c2.None = 0] = "None", c2[c2.AtApply = 1] = "AtApply", c2[c2.AtImport = 2] = "AtImport", c2[c2.JsPluginCompat = 4] = "JsPluginCompat", c2[c2.ThemeFunction = 8] = "ThemeFunction", c2[c2.Utilities = 16] = "Utilities", c2[c2.Variants = 32] = "Variants", c2))(me || {});
async function mr(t, { base: r = "", loadModule: n = mn, loadStylesheet: e = hn } = {}) {
  let o = 0;
  t = [ee2({ base: r }, t)], o |= await He(t, r, e);
  let s2 = null, a = new g2(), c2 = [], d2 = [], f3 = null, p3 = null, g3 = [], h3 = [], y2 = null;
  j2(t, (v, { parent: x, replaceWith: V2, context: S2 }) => {
    if (v.kind === "at-rule") {
      if (v.name === "@tailwind" && (v.params === "utilities" || v.params.startsWith("utilities"))) {
        if (p3 !== null) {
          V2([]);
          return;
        }
        let R2 = u(v.params, " ");
        for (let E2 of R2) if (E2.startsWith("source(")) {
          let P2 = E2.slice(7, -1);
          if (P2 === "none") {
            y2 = P2;
            continue;
          }
          if (P2[0] === '"' && P2[P2.length - 1] !== '"' || P2[0] === "'" && P2[P2.length - 1] !== "'" || P2[0] !== "'" && P2[0] !== '"') throw new Error("`source(…)` paths must be quoted.");
          y2 = { base: S2.sourceBase ?? S2.base, pattern: P2.slice(1, -1) };
        }
        p3 = v, o |= 16;
      }
      if (v.name === "@utility") {
        if (x !== null) throw new Error("`@utility` cannot be nested.");
        if (v.nodes.length === 0) throw new Error(`\`@utility ${v.params}\` is empty. Utilities should include at least one property.`);
        let R2 = Nt(v);
        if (R2 === null) throw new Error(`\`@utility ${v.params}\` defines an invalid utility name. Utilities should be alphanumeric and start with a lowercase letter.`);
        d2.push(R2);
      }
      if (v.name === "@source") {
        if (v.nodes.length > 0) throw new Error("`@source` cannot have a body.");
        if (x !== null) throw new Error("`@source` cannot be nested.");
        let R2 = v.params;
        if (R2[0] === '"' && R2[R2.length - 1] !== '"' || R2[0] === "'" && R2[R2.length - 1] !== "'" || R2[0] !== "'" && R2[0] !== '"') throw new Error("`@source` paths must be quoted.");
        h3.push({ base: S2.base, pattern: R2.slice(1, -1) }), V2([]);
        return;
      }
      if (v.name === "@variant" && (x === null ? v.nodes.length === 0 ? v.name = "@custom-variant" : j2(v.nodes, (R2) => {
        if (R2.kind === "at-rule" && R2.name === "@slot") return v.name = "@custom-variant", 2;
      }) : g3.push(v)), v.name === "@custom-variant") {
        if (x !== null) throw new Error("`@custom-variant` cannot be nested.");
        V2([]);
        let [R2, E2] = u(v.params, " ");
        if (!Ee.test(R2)) throw new Error(`\`@custom-variant ${R2}\` defines an invalid variant name. Variants should only contain alphanumeric, dashes or underscore characters.`);
        if (v.nodes.length > 0 && E2) throw new Error(`\`@custom-variant ${R2}\` cannot have both a selector and a body.`);
        if (v.nodes.length === 0) {
          if (!E2) throw new Error(`\`@custom-variant ${R2}\` has no selector or body.`);
          let P2 = u(E2.slice(1, -1), ","), i = [], u2 = [];
          for (let m of P2) m = m.trim(), m[0] === "@" ? i.push(m) : u2.push(m);
          c2.push((m) => {
            m.variants.static(R2, (k2) => {
              let b2 = [];
              u2.length > 0 && b2.push(F2(u2.join(", "), k2.nodes));
              for (let N2 of i) b2.push(M2(N2, k2.nodes));
              k2.nodes = b2;
            }, { compounds: ie2([...u2, ...i]) });
          });
          return;
        } else {
          c2.push((P2) => {
            P2.variants.fromAst(R2, v.nodes);
          });
          return;
        }
      }
      if (v.name === "@media") {
        let R2 = u(v.params, " "), E2 = [];
        for (let P2 of R2) if (P2.startsWith("source(")) {
          let i = P2.slice(7, -1);
          j2(v.nodes, (u2, { replaceWith: m }) => {
            if (u2.kind === "at-rule" && u2.name === "@tailwind" && u2.params === "utilities") return u2.params += ` source(${i})`, m([ee2({ sourceBase: S2.base }, [u2])]), 2;
          });
        } else if (P2.startsWith("theme(")) {
          let i = P2.slice(6, -1);
          j2(v.nodes, (u2) => {
            if (u2.kind !== "at-rule") throw new Error('Files imported with `@import "…" theme(…)` must only contain `@theme` blocks.');
            if (u2.name === "@theme") return u2.params += " " + i, 1;
          });
        } else if (P2.startsWith("prefix(")) {
          let i = P2.slice(7, -1);
          j2(v.nodes, (u2) => {
            if (u2.kind === "at-rule" && u2.name === "@theme") return u2.params += ` prefix(${i})`, 1;
          });
        } else P2 === "important" ? s2 = true : P2 === "reference" ? v.nodes = [ee2({ reference: true }, v.nodes)] : E2.push(P2);
        return E2.length > 0 ? v.params = E2.join(" ") : R2.length > 0 && V2(v.nodes), 1;
      }
      if (v.name === "@theme") {
        let [R2, E2] = vn(v.params);
        if (S2.reference && (R2 |= 2), E2) {
          if (!gn.test(E2)) throw new Error(`The prefix "${E2}" is invalid. Prefixes must be lowercase ASCII letters (a-z) only.`);
          a.prefix = E2;
        }
        return j2(v.nodes, (P2, { replaceWith: i }) => {
          if (P2.kind === "at-rule" && P2.name === "@keyframes") return a.addKeyframes(P2), i([]), 1;
          if (P2.kind === "comment") return;
          if (P2.kind === "declaration" && P2.property.startsWith("--")) {
            a.add(P2.property, P2.value ?? "", R2);
            return;
          }
          let u2 = J2([O2(v.name, v.params, [P2])]).split(`
`).map((m, k2, b2) => `${k2 === 0 || k2 >= b2.length - 2 ? " " : ">"} ${m}`).join(`
`);
          throw new Error(`\`@theme\` blocks must only contain custom properties or \`@keyframes\`.

${u2}`);
        }), !f3 && !(R2 & 2) ? (f3 = F2(":root", v.nodes), V2([f3])) : V2([]), 1;
      }
    }
  });
  let w2 = Dt(a);
  s2 && (w2.important = s2), o |= await gr({ designSystem: w2, base: r, ast: t, loadModule: n, globs: h3 });
  for (let v of c2) v(w2);
  for (let v of d2) v(w2);
  if (f3) {
    let v = [];
    for (let [V2, S2] of a.entries()) S2.options & 2 || v.push(l3(V2, S2.value));
    let x = a.getKeyframes();
    if (x.length > 0) {
      let V2 = [...a.namespace("--animate").values()].flatMap((S2) => S2.split(" "));
      for (let S2 of x) {
        let R2 = S2.params;
        V2.includes(R2) && v.push(_2([S2]));
      }
    }
    f3.nodes = v;
  }
  if (p3) {
    let v = p3;
    v.kind = "context", v.context = {};
  }
  if (g3.length > 0) {
    for (let v of g3) {
      let x = F2("&", v.nodes), V2 = v.params, S2 = w2.parseVariant(V2);
      if (S2 === null) throw new Error(`Cannot use \`@variant\` with unknown variant: ${V2}`);
      if (se(x, S2, w2.variants) === null) throw new Error(`Cannot use \`@variant\` with variant: ${V2}`);
      Object.assign(v, x);
    }
    o |= 32;
  }
  return o |= ae(t, w2), o |= ve(t, w2), j2(t, (v, { replaceWith: x }) => {
    if (v.kind === "at-rule") return v.name === "@utility" && x([]), 1;
  }), { designSystem: w2, ast: t, globs: h3, root: y2, utilitiesNode: p3, features: o };
}
async function yn(t, r = {}) {
  let { designSystem: n, ast: e, globs: o, root: s2, utilitiesNode: a, features: c2 } = await mr(t, r);
  e.unshift(Ne(`! tailwindcss v${ot} | MIT License | https://tailwindcss.com `));
  function d2(h3) {
    n.invalidCandidates.add(h3);
  }
  let f3 = /* @__PURE__ */ new Set(), p3 = null, g3 = 0;
  return { globs: o, root: s2, features: c2, build(h3) {
    if (c2 === 0) return t;
    if (!a) return p3 ?? (p3 = te2(e)), p3;
    let y2 = false, w2 = f3.size;
    for (let x of h3) n.invalidCandidates.has(x) || (f3.add(x), y2 || (y2 = f3.size !== w2));
    if (!y2) return p3 ?? (p3 = te2(e)), p3;
    let v = Z2(f3, n, { onInvalidCandidate: d2 }).astNodes;
    return g3 === v.length ? (p3 ?? (p3 = te2(e)), p3) : (g3 = v.length, a.nodes = v, p3 = te2(e), p3);
  } };
}
async function Xo(t, r = {}) {
  let n = X2(t), e = await yn(n, r), o = n, s2 = t;
  return { ...e, build(a) {
    let c2 = e.build(a);
    return c2 === o || (s2 = J2(c2), o = c2), s2;
  } };
}
async function el(t, r = {}) {
  return (await mr(X2(t), r)).designSystem;
}
function wn() {
  throw new Error("It looks like you're trying to use `tailwindcss` directly as a PostCSS plugin. The PostCSS plugin has moved to a separate package, so to continue using Tailwind CSS with PostCSS you'll need to install `@tailwindcss/postcss` and update your PostCSS configuration.");
}
export {
  me as Features,
  el as __unstable__loadDesignSystem,
  Xo as compile,
  yn as compileAst,
  wn as default
};
//# sourceMappingURL=tailwindcss.js.map
